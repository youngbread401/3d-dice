{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useCallback, useEffect, useRef, memo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue, set, get, off } from 'firebase/database';\nimport { debounce } from 'lodash';\nimport { ScrollView as GestureScrollView } from 'react-native-gesture-handler';\nimport { DiceRoller } from \"./components/DiceModel\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBSy8ia6vKnq95_gbO7lnohVbyAQzqBtk4\",\n  authDomain: \"dndcombattracker-572b0.firebaseapp.com\",\n  databaseURL: \"https://dndcombattracker-572b0-default-rtdb.firebaseio.com\",\n  projectId: \"dndcombattracker-572b0\",\n  storageBucket: \"dndcombattracker-572b0.firebasestorage.app\",\n  messagingSenderId: \"812186225431\",\n  appId: \"1:812186225431:web:8da48e238d10db01d14552\"\n};\nvar app = initializeApp(firebaseConfig);\nvar database = getDatabase(app);\nvar LETTERS = Array.from({\n  length: 26\n}, function (_, i) {\n  return String.fromCharCode(65 + i);\n});\nvar COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f', '#9b59b6', '#1abc9c', '#e67e22', '#ffffff'];\nvar GRID_SIZE = 10;\nvar ABILITY_SCORES = ['STR', 'DEX', 'CON', 'INT', 'WIS', 'CHA'];\nvar SKILLS = {\n  STR: ['Athletics'],\n  DEX: ['Acrobatics', 'Sleight of Hand', 'Stealth'],\n  CON: [],\n  INT: ['Arcana', 'History', 'Investigation', 'Nature', 'Religion'],\n  WIS: ['Animal Handling', 'Insight', 'Medicine', 'Perception', 'Survival'],\n  CHA: ['Deception', 'Intimidation', 'Performance', 'Persuasion']\n};\nvar CURRENCY = ['CP', 'SP', 'EP', 'GP', 'PP'];\nvar DICE_TYPES = [{\n  sides: 4,\n  color: '#FF6B6B'\n}, {\n  sides: 6,\n  color: '#4ECDC4'\n}, {\n  sides: 8,\n  color: '#45B7D1'\n}, {\n  sides: 10,\n  color: '#96CEB4'\n}, {\n  sides: 12,\n  color: '#FFEEAD'\n}, {\n  sides: 20,\n  color: '#D4A5A5'\n}, {\n  sides: 100,\n  color: '#9B59B6'\n}];\nvar STATUS_EFFECTS = [{\n  id: 'blinded',\n  name: 'Blinded',\n  icon: '👁️'\n}, {\n  id: 'charmed',\n  name: 'Charmed',\n  icon: '💕'\n}, {\n  id: 'deafened',\n  name: 'Deafened',\n  icon: '👂'\n}, {\n  id: 'frightened',\n  name: 'Frightened',\n  icon: '😨'\n}, {\n  id: 'grappled',\n  name: 'Grappled',\n  icon: '🤼'\n}, {\n  id: 'incapacitated',\n  name: 'Incapacitated',\n  icon: '💫'\n}, {\n  id: 'invisible',\n  name: 'Invisible',\n  icon: '👻'\n}, {\n  id: 'paralyzed',\n  name: 'Paralyzed',\n  icon: '⚡'\n}, {\n  id: 'petrified',\n  name: 'Petrified',\n  icon: '🗿'\n}, {\n  id: 'poisoned',\n  name: 'Poisoned',\n  icon: '🤢'\n}, {\n  id: 'prone',\n  name: 'Prone',\n  icon: '⬇️'\n}, {\n  id: 'restrained',\n  name: 'Restrained',\n  icon: '⛓️'\n}, {\n  id: 'stunned',\n  name: 'Stunned',\n  icon: '💫'\n}, {\n  id: 'unconscious',\n  name: 'Unconscious',\n  icon: '💤'\n}];\nvar windowDimensions = Dimensions.get('window');\nvar isSmallScreen = windowDimensions.width < 768;\nvar THEME = {\n  primary: '#1E1E1E',\n  secondary: '#2D2D2D',\n  accent: '#7289DA',\n  gold: '#FFD700',\n  danger: '#ED4245',\n  success: '#3BA55C',\n  text: {\n    light: '#FFFFFF',\n    dark: '#1E1E1E'\n  },\n  background: {\n    primary: '#1E1E1E',\n    secondary: '#2D2D2D',\n    dark: '#141414',\n    panel: '#363636'\n  }\n};\nvar initialGameState = {\n  tokens: {},\n  layers: {\n    grid: true,\n    terrain: {},\n    tokens: {},\n    effects: {},\n    fog: {}\n  },\n  initiative: [],\n  inCombat: false,\n  currentTurn: 0,\n  settings: {\n    gridSize: GRID_SIZE,\n    showCoordinates: true\n  },\n  partyLoot: {\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: [],\n    currentViewer: null\n  },\n  characters: [],\n  lastUpdate: Date.now()\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.background.primary,\n    height: '100%',\n    width: '100%'\n  },\n  header: {\n    padding: isSmallScreen ? 10 : 20,\n    backgroundColor: THEME.background.panel,\n    width: '100%'\n  },\n  title: {\n    fontSize: isSmallScreen ? 18 : 24,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10\n  },\n  controls: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    justifyContent: isSmallScreen ? 'center' : 'flex-start'\n  },\n  controlButton: {\n    padding: isSmallScreen ? 8 : 10,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? 80 : 100,\n    alignItems: 'center'\n  },\n  content: {\n    flex: 1,\n    width: '100%'\n  },\n  mainArea: {\n    flex: 1,\n    flexDirection: isSmallScreen ? 'column' : 'row',\n    padding: isSmallScreen ? 10 : 20,\n    gap: 20,\n    minHeight: '100%'\n  },\n  gridSection: {\n    flex: 1,\n    minHeight: isSmallScreen ? 400 : '100%'\n  },\n  sidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0\n  },\n  gridContainer: {\n    padding: isSmallScreen ? 5 : 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  cell: {\n    width: isSmallScreen ? 35 : 60,\n    height: isSmallScreen ? 35 : 60,\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.secondary\n  },\n  tokenContent: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: isSmallScreen ? 1 : 2\n  },\n  tokenText: {\n    fontSize: isSmallScreen ? 10 : 12,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  tokenHp: {\n    fontSize: isSmallScreen ? 8 : 10,\n    textAlign: 'center'\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContainer: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '90%' : 400\n  },\n  modalTitle: {\n    fontSize: isSmallScreen ? 18 : 20,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 15\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    color: THEME.text.light,\n    backgroundColor: THEME.background.primary\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 15\n  },\n  modalButton: {\n    padding: 10,\n    borderRadius: 5,\n    minWidth: 100,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n    fontSize: isSmallScreen ? 12 : 14\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    width: '100%',\n    height: '100%'\n  },\n  loadingText: {\n    color: THEME.text.light,\n    fontSize: 16,\n    marginTop: 10\n  },\n  loadingButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  diceBox: {\n    width: '100%',\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  diceButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 5,\n    justifyContent: 'center'\n  },\n  diceButton: {\n    padding: isSmallScreen ? 5 : 10,\n    backgroundColor: THEME.primary,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: isSmallScreen ? 30 : 60\n  },\n  diceHistory: {\n    maxHeight: isSmallScreen ? 100 : 200,\n    marginTop: 10\n  },\n  diceResultContainer: {\n    padding: 5,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.accent + '40'\n  },\n  diceResult: {\n    color: THEME.text.light\n  },\n  diceTotal: {\n    fontWeight: 'bold',\n    color: THEME.accent\n  },\n  diceRolls: {\n    color: THEME.text.light + '80',\n    fontSize: 12\n  },\n  initiativeList: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n    width: '100%'\n  },\n  initiativeScroll: {\n    maxHeight: isSmallScreen ? 150 : 200\n  },\n  initiativeItem: {\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n    backgroundColor: THEME.background.primary\n  },\n  currentInitiative: {\n    backgroundColor: THEME.accent\n  },\n  initiativeText: {\n    color: THEME.text.light\n  },\n  currentInitiativeText: {\n    color: THEME.text.dark,\n    fontWeight: 'bold'\n  },\n  zoomControls: {\n    position: 'absolute',\n    right: 10,\n    bottom: 10,\n    flexDirection: 'row',\n    gap: 10,\n    display: isSmallScreen ? 'flex' : 'none'\n  },\n  zoomButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: THEME.background.panel,\n    justifyContent: 'center',\n    alignItems: 'center',\n    opacity: 0.8\n  },\n  advantageButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5\n  },\n  advantageActive: {\n    backgroundColor: THEME.accent\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.primary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 60,\n    textAlign: 'center'\n  },\n  boxTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  colorPicker: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    gap: isSmallScreen ? 2 : 5,\n    marginBottom: isSmallScreen ? 5 : 10\n  },\n  colorButton: {\n    width: isSmallScreen ? 20 : 30,\n    height: isSmallScreen ? 20 : 30,\n    borderRadius: isSmallScreen ? 10 : 15,\n    margin: isSmallScreen ? 1 : 2\n  },\n  selectedColor: {\n    borderWidth: 2,\n    borderColor: THEME.accent\n  }\n});\nvar additionalStyles = StyleSheet.create({\n  characterSheet: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '95%' : '80%',\n    maxWidth: 800,\n    maxHeight: '90%'\n  },\n  sheetHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20\n  },\n  sheetSection: {\n    marginBottom: 20\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10\n  },\n  abilityScores: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    gap: 10\n  },\n  abilityBox: {\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: isSmallScreen ? '30%' : 100,\n    marginBottom: 10\n  },\n  abilityLabel: {\n    color: THEME.text.light,\n    fontWeight: 'bold'\n  },\n  abilityScore: {\n    color: THEME.accent,\n    fontSize: 24,\n    fontWeight: 'bold',\n    width: '100%',\n    textAlign: 'center',\n    padding: 5\n  },\n  abilityMod: {\n    color: THEME.text.light\n  },\n  skillsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10\n  },\n  skillItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? '45%' : 200\n  },\n  proficientDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginRight: 5\n  },\n  skillName: {\n    color: THEME.text.light,\n    flex: 1\n  },\n  skillMod: {\n    color: THEME.accent,\n    fontWeight: 'bold'\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    padding: 10\n  },\n  closeButtonText: {\n    color: THEME.text.light,\n    fontSize: 20\n  },\n  lootSection: {\n    backgroundColor: THEME.background.primary,\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 15\n  },\n  currencyRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  currencyInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 80,\n    textAlign: 'center'\n  },\n  currencyLabel: {\n    color: THEME.text.light,\n    width: 30\n  },\n  itemRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n    gap: 10\n  },\n  itemInput: {\n    flex: 1,\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5\n  },\n  removeButton: {\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: THEME.danger\n  },\n  addButton: {\n    backgroundColor: THEME.success,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  lootHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  itemInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n    flex: 1\n  },\n  addedBy: {\n    color: THEME.text.light,\n    opacity: 0.6,\n    fontSize: 12,\n    marginTop: 4\n  }\n});\nvar diceStyles = StyleSheet.create({\n  dicePanel: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15\n  },\n  diceHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  diceTitle: {\n    color: THEME.text.light,\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  diceControls: {\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n    gap: 10\n  },\n  controlsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  controlGroup: {\n    flexDirection: 'row',\n    gap: 8\n  },\n  controlButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: 80,\n    alignItems: 'center'\n  },\n  controlActive: {\n    backgroundColor: THEME.accent\n  },\n  modifierGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  modifierLabel: {\n    color: THEME.text.light,\n    fontSize: 14\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center'\n  },\n  quantityGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  quantityLabel: {\n    color: THEME.text.light,\n    fontSize: 14\n  },\n  quantityInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center'\n  },\n  diceGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    justifyContent: 'center',\n    marginBottom: 15\n  },\n  diceButton: {\n    width: isSmallScreen ? 45 : 60,\n    height: isSmallScreen ? 45 : 60,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  diceButtonText: {\n    color: THEME.text.light,\n    fontSize: isSmallScreen ? 14 : 16,\n    fontWeight: 'bold'\n  },\n  historyContainer: {\n    backgroundColor: THEME.background.primary,\n    borderRadius: 8,\n    maxHeight: 200\n  },\n  historyScroll: {\n    padding: 10\n  },\n  historyItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.background.secondary\n  },\n  historyLeft: {\n    flex: 1\n  },\n  historyInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  historyDice: {\n    color: THEME.text.light,\n    opacity: 0.7\n  },\n  historyRolls: {\n    color: THEME.text.light,\n    fontSize: 12,\n    opacity: 0.5\n  },\n  historyTotal: {\n    color: THEME.accent,\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  clearButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center'\n  }\n});\nvar statusStyles = StyleSheet.create({\n  effectsContainer: {\n    marginTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: THEME.accent + '40',\n    paddingTop: 15\n  },\n  effectsTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  effectsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8\n  },\n  effectButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: 80\n  },\n  effectActive: {\n    backgroundColor: THEME.accent\n  },\n  effectText: {\n    color: THEME.text.light,\n    fontSize: 12\n  },\n  tokenEffects: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 2,\n    marginTop: 2\n  },\n  effectIcon: {\n    fontSize: isSmallScreen ? 10 : 12\n  }\n});\nvar saveGameState = function () {\n  var _ref = _asyncToGenerator(function* () {\n    if (firebaseRef.current) {\n      try {\n        yield set(firebaseRef.current, {\n          tokens: tokens,\n          layers: layers,\n          initiative: initiative,\n          inCombat: inCombat,\n          currentTurn: currentTurn,\n          partyLoot: partyLoot,\n          characters: characters,\n          settings: initialGameState.settings,\n          lastUpdate: Date.now()\n        });\n      } catch (error) {\n        console.error('Error saving game state:', error);\n        Alert.alert('Error', 'Failed to save game state');\n      }\n    }\n  });\n  return function saveGameState() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar CharacterSheetModal = memo(function (_ref2) {\n  var visible = _ref2.visible,\n    onClose = _ref2.onClose,\n    character = _ref2.character,\n    characters = _ref2.characters,\n    onUpdate = _ref2.onUpdate;\n  var _useState = useState(function () {\n      return {\n        name: (character == null ? void 0 : character.name) || '',\n        class: (character == null ? void 0 : character.class) || '',\n        level: (character == null ? void 0 : character.level) || 1,\n        owner: (character == null ? void 0 : character.owner) || '',\n        proficiencyBonus: (character == null ? void 0 : character.proficiencyBonus) || 2,\n        abilityScores: (character == null ? void 0 : character.abilityScores) || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: (character == null ? void 0 : character.proficientSkills) || [],\n        currency: (character == null ? void 0 : character.currency) || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: (character == null ? void 0 : character.items) || [],\n        inventory: (character == null ? void 0 : character.inventory) || []\n      };\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    editedCharacter = _useState2[0],\n    setEditedCharacter = _useState2[1];\n  useEffect(function () {\n    if (visible && character) {\n      setEditedCharacter({\n        name: character.name || '',\n        class: character.class || '',\n        level: character.level || 1,\n        owner: character.owner || '',\n        proficiencyBonus: character.proficiencyBonus || 2,\n        abilityScores: character.abilityScores || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: character.proficientSkills || [],\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: character.items || [],\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n  if (!character) {\n    console.error('No character data provided to CharacterSheetModal');\n    return null;\n  }\n  var calculateModifier = function calculateModifier(score) {\n    return Math.floor((score - 10) / 2);\n  };\n  var handleAbilityScoreChange = function handleAbilityScoreChange(ability, value) {\n    var newScore = parseInt(value) || 0;\n    setEditedCharacter(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        abilityScores: _objectSpread(_objectSpread({}, prev.abilityScores), {}, _defineProperty({}, ability, newScore))\n      });\n    });\n  };\n  var toggleProficiency = function toggleProficiency(skill) {\n    setEditedCharacter(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        proficientSkills: prev.proficientSkills.includes(skill) ? prev.proficientSkills.filter(function (s) {\n          return s !== skill;\n        }) : [].concat(_toConsumableArray(prev.proficientSkills), [skill])\n      });\n    });\n  };\n  var getSkillModifier = function getSkillModifier(skill, ability) {\n    var abilityMod = calculateModifier(editedCharacter.abilityScores[ability]);\n    var profBonus = editedCharacter.proficientSkills.includes(skill) ? editedCharacter.proficiencyBonus : 0;\n    return abilityMod + profBonus;\n  };\n  var handleSave = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var updatedCharacter = _objectSpread(_objectSpread({}, character), editedCharacter);\n        onUpdate(updatedCharacter);\n      } catch (error) {\n        console.error('Error saving character:', error);\n        Alert.alert('Error', 'Failed to save character');\n      }\n    });\n    return function handleSave() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (!visible) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: additionalStyles.characterSheet,\n        children: [_jsx(TouchableOpacity, {\n          style: additionalStyles.closeButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: additionalStyles.closeButtonText,\n            children: \"\\xD7\"\n          })\n        }), _jsxs(GestureScrollView, {\n          children: [_jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Character Info\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: editedCharacter.name,\n              onChangeText: function onChangeText(text) {\n                return setEditedCharacter(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    name: text\n                  });\n                });\n              },\n              placeholder: \"Character Name\",\n              placeholderTextColor: THEME.text.light + '80'\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                gap: 10\n              },\n              children: [_jsx(TextInput, {\n                style: [styles.input, {\n                  flex: 1\n                }],\n                value: editedCharacter.class,\n                onChangeText: function onChangeText(text) {\n                  return setEditedCharacter(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      class: text\n                    });\n                  });\n                },\n                placeholder: \"Class\",\n                placeholderTextColor: THEME.text.light + '80'\n              }), _jsx(TextInput, {\n                style: [styles.input, {\n                  flex: 1\n                }],\n                value: String(editedCharacter.level),\n                onChangeText: function onChangeText(text) {\n                  return setEditedCharacter(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      level: parseInt(text) || 1\n                    });\n                  });\n                },\n                placeholder: \"Level\",\n                keyboardType: \"numeric\",\n                placeholderTextColor: THEME.text.light + '80'\n              })]\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Ability Scores\"\n            }), _jsx(View, {\n              style: additionalStyles.abilityScores,\n              children: ABILITY_SCORES.map(function (ability) {\n                return _jsxs(View, {\n                  style: additionalStyles.abilityBox,\n                  children: [_jsx(Text, {\n                    style: additionalStyles.abilityLabel,\n                    children: ability\n                  }), _jsx(TextInput, {\n                    style: additionalStyles.abilityScore,\n                    value: String(editedCharacter.abilityScores[ability]),\n                    onChangeText: function onChangeText(text) {\n                      return handleAbilityScoreChange(ability, text);\n                    },\n                    keyboardType: \"numeric\",\n                    maxLength: 2,\n                    selectTextOnFocus: true\n                  }), _jsxs(Text, {\n                    style: additionalStyles.abilityMod,\n                    children: [calculateModifier(editedCharacter.abilityScores[ability]) >= 0 ? '+' : '', calculateModifier(editedCharacter.abilityScores[ability])]\n                  })]\n                }, ability);\n              })\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Skills\"\n            }), _jsx(View, {\n              style: additionalStyles.skillsList,\n              children: Object.entries(SKILLS).map(function (_ref4) {\n                var _ref5 = _slicedToArray(_ref4, 2),\n                  ability = _ref5[0],\n                  skills = _ref5[1];\n                return skills.map(function (skill) {\n                  return _jsxs(TouchableOpacity, {\n                    style: additionalStyles.skillItem,\n                    onPress: function onPress() {\n                      return toggleProficiency(skill);\n                    },\n                    children: [_jsx(View, {\n                      style: [additionalStyles.proficientDot, {\n                        backgroundColor: editedCharacter.proficientSkills.includes(skill) ? THEME.accent : THEME.background.secondary\n                      }]\n                    }), _jsx(Text, {\n                      style: additionalStyles.skillName,\n                      children: skill\n                    }), _jsxs(Text, {\n                      style: additionalStyles.skillMod,\n                      children: [getSkillModifier(skill, ability) >= 0 ? '+' : '', getSkillModifier(skill, ability)]\n                    })]\n                  }, skill);\n                });\n              })\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Inventory\"\n            }), _jsx(View, {\n              style: additionalStyles.lootSection,\n              children: CURRENCY.map(function (currency) {\n                return _jsxs(View, {\n                  style: additionalStyles.currencyRow,\n                  children: [_jsx(Text, {\n                    style: additionalStyles.currencyLabel,\n                    children: currency\n                  }), _jsx(TextInput, {\n                    style: additionalStyles.currencyInput,\n                    value: String(editedCharacter.currency[currency] || 0),\n                    onChangeText: function onChangeText(text) {\n                      var value = parseInt(text) || 0;\n                      setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, currency, value))\n                        });\n                      });\n                    },\n                    keyboardType: \"numeric\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  })]\n                }, currency);\n              })\n            }), _jsxs(View, {\n              style: additionalStyles.lootSection,\n              children: [_jsxs(View, {\n                style: additionalStyles.lootHeader,\n                children: [_jsx(Text, {\n                  style: additionalStyles.sectionTitle,\n                  children: \"Items\"\n                }), _jsx(TouchableOpacity, {\n                  style: additionalStyles.addButton,\n                  onPress: function onPress() {\n                    setEditedCharacter(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: [].concat(_toConsumableArray(prev.items), [{\n                          name: '',\n                          quantity: 1,\n                          notes: '',\n                          addedBy: character.name\n                        }])\n                      });\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: styles.buttonText,\n                    children: \"Add Item\"\n                  })\n                })]\n              }), editedCharacter.items.map(function (item, index) {\n                return _jsxs(View, {\n                  style: additionalStyles.itemRow,\n                  children: [_jsxs(View, {\n                    style: additionalStyles.itemInfo,\n                    children: [_jsx(TextInput, {\n                      style: [additionalStyles.itemInput, {\n                        flex: 2\n                      }],\n                      value: item.name,\n                      onChangeText: function onChangeText(text) {\n                        var newItems = _toConsumableArray(editedCharacter.items);\n                        newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                          name: text\n                        });\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: newItems\n                          });\n                        });\n                      },\n                      placeholder: \"Item name\",\n                      placeholderTextColor: THEME.text.light + '80'\n                    }), _jsx(TextInput, {\n                      style: [additionalStyles.itemInput, {\n                        width: 60\n                      }],\n                      value: String(item.quantity),\n                      onChangeText: function onChangeText(text) {\n                        var newItems = _toConsumableArray(editedCharacter.items);\n                        newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                          quantity: parseInt(text) || 1\n                        });\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: newItems\n                          });\n                        });\n                      },\n                      keyboardType: \"numeric\",\n                      placeholder: \"Qty\",\n                      placeholderTextColor: THEME.text.light + '80'\n                    }), item.addedBy === character.name && _jsx(TouchableOpacity, {\n                      style: additionalStyles.removeButton,\n                      onPress: function onPress() {\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: prev.items.filter(function (_, i) {\n                              return i !== index;\n                            })\n                          });\n                        });\n                      },\n                      children: _jsx(Text, {\n                        style: styles.buttonText,\n                        children: \"\\xD7\"\n                      })\n                    })]\n                  }), _jsxs(Text, {\n                    style: additionalStyles.addedBy,\n                    children: [\"Added by: \", item.addedBy]\n                  })]\n                }, index);\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: [styles.modalButton, {\n                backgroundColor: THEME.success\n              }],\n              onPress: handleSave,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Save Changes\"\n              })\n            })]\n          })]\n        })]\n      })\n    })\n  });\n});\nvar TokenModal = memo(function (_ref6) {\n  var showTokenModal = _ref6.showTokenModal,\n    setShowTokenModal = _ref6.setShowTokenModal,\n    selectedToken = _ref6.selectedToken,\n    setSelectedToken = _ref6.setSelectedToken,\n    tokens = _ref6.tokens,\n    firebaseRef = _ref6.firebaseRef,\n    initialGameState = _ref6.initialGameState,\n    layers = _ref6.layers,\n    initiative = _ref6.initiative,\n    inCombat = _ref6.inCombat,\n    currentTurn = _ref6.currentTurn,\n    THEME = _ref6.THEME;\n  return _jsx(Modal, {\n    visible: showTokenModal,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {\n      return setShowTokenModal(false);\n    },\n    children: _jsx(Pressable, {\n      style: [styles.modalOverlay, {\n        cursor: 'default'\n      }],\n      onPress: function onPress() {\n        return Keyboard.dismiss();\n      },\n      children: _jsx(View, {\n        style: styles.modalContent,\n        children: _jsx(KeyboardAvoidingView, {\n          behavior: Platform.select({\n            ios: 'padding',\n            android: 'height'\n          }),\n          style: styles.modalContainer,\n          keyboardVerticalOffset: Platform.select({\n            ios: 64,\n            android: 0\n          }),\n          children: _jsxs(Pressable, {\n            onPress: function onPress(e) {\n              return e.stopPropagation();\n            },\n            children: [_jsx(Text, {\n              style: styles.modalTitle,\n              children: \"Edit Token\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: selectedToken == null ? void 0 : selectedToken.name,\n              onChangeText: function onChangeText(text) {\n                setSelectedToken(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    name: text\n                  });\n                });\n              },\n              placeholder: \"Token Name\",\n              placeholderTextColor: THEME.text.light + '80',\n              blurOnSubmit: false,\n              autoComplete: \"off\",\n              spellCheck: false,\n              selectTextOnFocus: true,\n              enablesReturnKeyAutomatically: true\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                gap: 10,\n                marginBottom: 10\n              },\n              children: [_jsx(View, {\n                style: {\n                  flex: 1\n                },\n                children: _jsx(TextInput, {\n                  style: styles.input,\n                  value: String((selectedToken == null ? void 0 : selectedToken.hp) || ''),\n                  onChangeText: function onChangeText(text) {\n                    var hp = parseInt(text) || 0;\n                    setSelectedToken(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        hp: Math.max(0, hp)\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Current HP\",\n                  placeholderTextColor: THEME.text.light + '80',\n                  blurOnSubmit: false,\n                  autoComplete: \"off\",\n                  selectTextOnFocus: true,\n                  enablesReturnKeyAutomatically: true\n                })\n              }), _jsx(View, {\n                style: {\n                  flex: 1\n                },\n                children: _jsx(TextInput, {\n                  style: styles.input,\n                  value: String((selectedToken == null ? void 0 : selectedToken.maxHp) || ''),\n                  onChangeText: function onChangeText(text) {\n                    var maxHp = parseInt(text) || 1;\n                    setSelectedToken(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        maxHp: Math.max(1, maxHp)\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Max HP\",\n                  placeholderTextColor: THEME.text.light + '80',\n                  blurOnSubmit: false,\n                  autoComplete: \"off\",\n                  selectTextOnFocus: true,\n                  enablesReturnKeyAutomatically: true\n                })\n              })]\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: String((selectedToken == null ? void 0 : selectedToken.initiativeBonus) || '0'),\n              onChangeText: function onChangeText(text) {\n                setSelectedToken(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    initiativeBonus: parseInt(text) || 0\n                  });\n                });\n              },\n              keyboardType: \"numeric\",\n              placeholder: \"Initiative Bonus\",\n              placeholderTextColor: THEME.text.light + '80',\n              blurOnSubmit: false,\n              autoComplete: \"off\",\n              selectTextOnFocus: true,\n              enablesReturnKeyAutomatically: true\n            }), _jsxs(View, {\n              style: statusStyles.effectsContainer,\n              children: [_jsx(Text, {\n                style: statusStyles.effectsTitle,\n                children: \"Status Effects\"\n              }), _jsx(View, {\n                style: statusStyles.effectsGrid,\n                children: STATUS_EFFECTS.map(function (effect) {\n                  var _selectedToken$effect;\n                  return _jsx(TouchableOpacity, {\n                    style: [statusStyles.effectButton, (selectedToken == null ? void 0 : (_selectedToken$effect = selectedToken.effects) == null ? void 0 : _selectedToken$effect.includes(effect.id)) && statusStyles.effectActive],\n                    onPress: function onPress() {\n                      setSelectedToken(function (prev) {\n                        var currentEffects = prev.effects || [];\n                        var newEffects = currentEffects.includes(effect.id) ? currentEffects.filter(function (e) {\n                          return e !== effect.id;\n                        }) : [].concat(_toConsumableArray(currentEffects), [effect.id]);\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          effects: newEffects\n                        });\n                      });\n                    },\n                    children: _jsxs(Text, {\n                      style: statusStyles.effectText,\n                      children: [effect.icon, \" \", effect.name]\n                    })\n                  }, effect.id);\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.modalButtons,\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.modalButton, {\n                  backgroundColor: THEME.danger\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current && selectedToken) {\n                    var newTokens = _objectSpread({}, tokens);\n                    delete newTokens[selectedToken.position];\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: newTokens,\n                      layers: layers,\n                      initiative: initiative,\n                      inCombat: inCombat,\n                      currentTurn: currentTurn\n                    }));\n                    setShowTokenModal(false);\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Delete\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.modalButton, {\n                  backgroundColor: THEME.success\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current && selectedToken) {\n                    var newTokens = _objectSpread(_objectSpread({}, tokens), {}, _defineProperty({}, selectedToken.position, selectedToken));\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: newTokens,\n                      layers: layers,\n                      initiative: initiative,\n                      inCombat: inCombat,\n                      currentTurn: currentTurn\n                    }));\n                    setShowTokenModal(false);\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Save\"\n                })\n              })]\n            })]\n          })\n        })\n      })\n    })\n  });\n});\nvar modalStyles = StyleSheet.create({\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: '90%',\n    maxWidth: 400,\n    zIndex: 1001\n  }\n});\nvar RoomModal = memo(function (_ref7) {\n  var showRoomModal = _ref7.showRoomModal,\n    setShowRoomModal = _ref7.setShowRoomModal,\n    isConnected = _ref7.isConnected,\n    roomCode = _ref7.roomCode,\n    setRoomCode = _ref7.setRoomCode,\n    isJoining = _ref7.isJoining,\n    connectToRoom = _ref7.connectToRoom;\n  return _jsx(Modal, {\n    visible: showRoomModal,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {},\n    style: {\n      zIndex: 999\n    },\n    children: _jsx(View, {\n      style: [modalStyles.modalOverlay, {\n        pointerEvents: 'auto'\n      }],\n      children: _jsxs(View, {\n        style: modalStyles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Join Room\"\n        }), _jsx(TextInput, {\n          style: [styles.input, {\n            marginBottom: 15,\n            zIndex: 1002\n          }],\n          value: roomCode,\n          onChangeText: function onChangeText(text) {\n            setRoomCode(text.trim().toLowerCase());\n          },\n          placeholder: \"Enter room code...\",\n          placeholderTextColor: THEME.text.light + '80',\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          editable: !isJoining,\n          autoFocus: true,\n          blurOnSubmit: false\n        }), _jsx(TouchableOpacity, {\n          style: [styles.modalButton, {\n            backgroundColor: isJoining ? THEME.background.secondary : THEME.success,\n            width: '100%',\n            zIndex: 1002\n          }],\n          onPress: function onPress() {\n            Keyboard.dismiss();\n            connectToRoom(roomCode);\n          },\n          disabled: isJoining,\n          children: isJoining ? _jsxs(View, {\n            style: styles.loadingButtonContent,\n            children: [_jsx(ActivityIndicator, {\n              color: THEME.text.light\n            }), _jsx(Text, {\n              style: [styles.buttonText, {\n                marginLeft: 10\n              }],\n              children: \"Connecting...\"\n            })]\n          }) : _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Join Room\"\n          })\n        })]\n      })\n    })\n  });\n});\nvar PartyLootModal = memo(function (_ref8) {\n  var visible = _ref8.visible,\n    onClose = _ref8.onClose,\n    partyLoot = _ref8.partyLoot,\n    onUpdate = _ref8.onUpdate,\n    playerName = _ref8.playerName;\n  var _useState3 = useState({\n      currency: {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      items: []\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editedLoot = _useState4[0],\n    setEditedLoot = _useState4[1];\n  useEffect(function () {\n    if (visible && partyLoot) {\n      setEditedLoot({\n        currency: partyLoot.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: partyLoot.items || []\n      });\n    }\n  }, [visible, partyLoot]);\n  if (!visible) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: [styles.modalContent, {\n          maxHeight: '90%'\n        }],\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Party Loot\"\n        }), _jsxs(ScrollView, {\n          children: [_jsx(View, {\n            style: additionalStyles.lootSection,\n            children: CURRENCY.map(function (type) {\n              return _jsxs(View, {\n                style: additionalStyles.currencyRow,\n                children: [_jsx(Text, {\n                  style: additionalStyles.currencyLabel,\n                  children: type\n                }), _jsx(TextInput, {\n                  style: additionalStyles.currencyInput,\n                  value: String(editedLoot.currency[type] || 0),\n                  onChangeText: function onChangeText(text) {\n                    var value = parseInt(text) || 0;\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, type, value))\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              }, type);\n            })\n          }), _jsxs(View, {\n            style: additionalStyles.lootSection,\n            children: [_jsxs(View, {\n              style: additionalStyles.lootHeader,\n              children: [_jsx(Text, {\n                style: additionalStyles.sectionTitle,\n                children: \"Items\"\n              }), _jsx(TouchableOpacity, {\n                style: additionalStyles.addButton,\n                onPress: function onPress() {\n                  setEditedLoot(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      items: [].concat(_toConsumableArray(prev.items), [{\n                        id: Date.now().toString(),\n                        name: '',\n                        quantity: 1,\n                        addedBy: playerName\n                      }])\n                    });\n                  });\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Add Item\"\n                })\n              })]\n            }), editedLoot.items.map(function (item, index) {\n              return _jsxs(View, {\n                style: additionalStyles.itemRow,\n                children: [_jsx(TextInput, {\n                  style: [additionalStyles.itemInput, {\n                    flex: 2\n                  }],\n                  value: item.name,\n                  onChangeText: function onChangeText(text) {\n                    var newItems = _toConsumableArray(editedLoot.items);\n                    newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                      name: text\n                    });\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: newItems\n                      });\n                    });\n                  },\n                  placeholder: \"Item name\",\n                  placeholderTextColor: THEME.text.light + '80'\n                }), _jsx(TextInput, {\n                  style: [additionalStyles.itemInput, {\n                    width: 60\n                  }],\n                  value: String(item.quantity),\n                  onChangeText: function onChangeText(text) {\n                    var newItems = _toConsumableArray(editedLoot.items);\n                    newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                      quantity: parseInt(text) || 1\n                    });\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: newItems\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Qty\",\n                  placeholderTextColor: THEME.text.light + '80'\n                }), _jsx(TouchableOpacity, {\n                  style: additionalStyles.removeButton,\n                  onPress: function onPress() {\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: prev.items.filter(function (_, i) {\n                          return i !== index;\n                        })\n                      });\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: styles.buttonText,\n                    children: \"\\xD7\"\n                  })\n                })]\n              }, item.id || index);\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.buttonRow,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.button, styles.closeButton],\n            onPress: onClose,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Cancel\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.button, {\n              backgroundColor: THEME.success\n            }],\n            onPress: function onPress() {\n              onUpdate(editedLoot);\n              onClose();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Save Changes\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar GridZoomControls = memo(function (_ref9) {\n  var zoomLevel = _ref9.zoomLevel,\n    setZoomLevel = _ref9.setZoomLevel;\n  var debouncedZoom = debounce(function (newZoom) {\n    setZoomLevel(newZoom);\n  }, 100);\n  return _jsxs(View, {\n    style: styles.zoomControls,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.zoomButton,\n      onPress: function onPress() {\n        return debouncedZoom(Math.max(0.5, zoomLevel - 0.1));\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"-\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.zoomButton,\n      onPress: function onPress() {\n        return debouncedZoom(Math.min(2, zoomLevel + 0.1));\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"+\"\n      })\n    })]\n  });\n});\nvar InventoryModal = memo(function (_ref10) {\n  var visible = _ref10.visible,\n    onClose = _ref10.onClose,\n    character = _ref10.character,\n    onUpdate = _ref10.onUpdate;\n  var _useState5 = useState({\n      currency: (character == null ? void 0 : character.currency) || {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      inventory: (character == null ? void 0 : character.inventory) || []\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    editedInventory = _useState6[0],\n    setEditedInventory = _useState6[1];\n  useEffect(function () {\n    if (visible && character) {\n      setEditedInventory({\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n  if (!visible || !character) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: additionalStyles.characterSheet,\n        children: [_jsx(TouchableOpacity, {\n          style: additionalStyles.closeButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: additionalStyles.closeButtonText,\n            children: \"\\xD7\"\n          })\n        }), _jsxs(Text, {\n          style: additionalStyles.sectionTitle,\n          children: [character.name, \"'s Inventory\"]\n        }), _jsxs(GestureScrollView, {\n          children: [_jsx(View, {\n            style: additionalStyles.lootSection,\n            children: CURRENCY.map(function (currency) {\n              return _jsxs(View, {\n                style: additionalStyles.currencyRow,\n                children: [_jsx(Text, {\n                  style: additionalStyles.currencyLabel,\n                  children: currency\n                }), _jsx(TextInput, {\n                  style: additionalStyles.currencyInput,\n                  value: String(editedInventory.currency[currency] || 0),\n                  onChangeText: function onChangeText(text) {\n                    var value = parseInt(text) || 0;\n                    setEditedInventory(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, currency, value))\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              }, currency);\n            })\n          }), _jsxs(View, {\n            style: additionalStyles.lootSection,\n            children: [_jsxs(View, {\n              style: additionalStyles.lootHeader,\n              children: [_jsx(Text, {\n                style: additionalStyles.sectionTitle,\n                children: \"Items\"\n              }), _jsx(TouchableOpacity, {\n                style: additionalStyles.addButton,\n                onPress: function onPress() {\n                  setEditedInventory(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      inventory: [].concat(_toConsumableArray(prev.inventory), [{\n                        name: '',\n                        quantity: 1,\n                        notes: '',\n                        addedBy: character.name\n                      }])\n                    });\n                  });\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Add Item\"\n                })\n              })]\n            }), editedInventory.inventory.map(function (item, index) {\n              return _jsxs(View, {\n                style: additionalStyles.itemRow,\n                children: [_jsxs(View, {\n                  style: additionalStyles.itemInfo,\n                  children: [_jsx(TextInput, {\n                    style: [additionalStyles.itemInput, {\n                      flex: 2\n                    }],\n                    value: item.name,\n                    onChangeText: function onChangeText(text) {\n                      var newInventory = _toConsumableArray(editedInventory.inventory);\n                      newInventory[index] = _objectSpread(_objectSpread({}, item), {}, {\n                        name: text\n                      });\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: newInventory\n                        });\n                      });\n                    },\n                    placeholder: \"Item name\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), _jsx(TextInput, {\n                    style: [additionalStyles.itemInput, {\n                      width: 60\n                    }],\n                    value: String(item.quantity),\n                    onChangeText: function onChangeText(text) {\n                      var newInventory = _toConsumableArray(editedInventory.inventory);\n                      newInventory[index] = _objectSpread(_objectSpread({}, item), {}, {\n                        quantity: parseInt(text) || 1\n                      });\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: newInventory\n                        });\n                      });\n                    },\n                    keyboardType: \"numeric\",\n                    placeholder: \"Qty\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), item.addedBy === character.name && _jsx(TouchableOpacity, {\n                    style: additionalStyles.removeButton,\n                    onPress: function onPress() {\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: prev.inventory.filter(function (_, i) {\n                            return i !== index;\n                          })\n                        });\n                      });\n                    },\n                    children: _jsx(Text, {\n                      style: styles.buttonText,\n                      children: \"\\xD7\"\n                    })\n                  })]\n                }), _jsxs(Text, {\n                  style: additionalStyles.addedBy,\n                  children: [\"Added by: \", item.addedBy]\n                })]\n              }, index);\n            })]\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: THEME.success\n            }],\n            onPress: function onPress() {\n              onUpdate(_objectSpread(_objectSpread({}, character), {}, {\n                currency: editedInventory.currency,\n                inventory: editedInventory.inventory\n              }));\n              onClose();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Save Changes\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar PlayerNameModal = memo(function (_ref11) {\n  var visible = _ref11.visible,\n    onSubmit = _ref11.onSubmit;\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    name = _useState8[0],\n    setName = _useState8[1];\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {},\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Enter Your Name\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: name,\n          onChangeText: setName,\n          placeholder: \"Your name\",\n          placeholderTextColor: THEME.text.light + '80',\n          autoCapitalize: \"words\"\n        }), _jsx(TouchableOpacity, {\n          style: [styles.modalButton, {\n            backgroundColor: THEME.success,\n            width: '100%',\n            marginTop: 10\n          }],\n          onPress: function onPress() {\n            return onSubmit(name);\n          },\n          disabled: !name.trim(),\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Continue\"\n          })\n        })]\n      })\n    })\n  });\n});\nvar viewerStyles = StyleSheet.create({\n  viewersList: {\n    marginTop: 15,\n    padding: 10,\n    backgroundColor: THEME.background.primary,\n    borderRadius: 5\n  },\n  viewersTitle: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  viewerName: {\n    color: THEME.text.light,\n    opacity: 0.8,\n    fontSize: 12,\n    marginBottom: 2\n  }\n});\nvar DiceResultOverlay = memo(function (_ref12) {\n  var result = _ref12.result,\n    onClose = _ref12.onClose;\n  useEffect(function () {\n    var timer = setTimeout(onClose, 2000);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [onClose]);\n  if (!result) return null;\n  return _jsx(View, {\n    style: overlayStyles.container,\n    children: _jsxs(View, {\n      style: overlayStyles.content,\n      children: [_jsxs(Text, {\n        style: overlayStyles.diceInfo,\n        children: [result.dice, result.modifier ? \" + \" + result.modifier : '', result.rollType === 'advantage' ? ' (Adv)' : result.rollType === 'disadvantage' ? ' (Dis)' : '']\n      }), result.individualTotals && result.individualTotals.length > 1 && _jsxs(Text, {\n        style: overlayStyles.rolls,\n        children: [\"[\", result.individualTotals.join(', '), \"]\"]\n      }), _jsx(Text, {\n        style: overlayStyles.total,\n        children: result.total\n      })]\n    })\n  });\n});\nvar overlayStyles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000,\n    backgroundColor: 'rgba(0,0,0,0.5)'\n  },\n  content: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    alignItems: 'center',\n    minWidth: 150\n  },\n  diceInfo: {\n    color: THEME.text.light,\n    fontSize: 18,\n    marginBottom: 5\n  },\n  rolls: {\n    color: THEME.text.light,\n    opacity: 0.7,\n    marginBottom: 5\n  },\n  total: {\n    color: THEME.accent,\n    fontSize: 32,\n    fontWeight: 'bold'\n  }\n});\nexport default function App() {\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    roomCode = _useState10[0],\n    setRoomCode = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isConnected = _useState12[0],\n    setIsConnected = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isLoading = _useState14[0],\n    setIsLoading = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isJoining = _useState16[0],\n    setIsJoining = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isUpdating = _useState18[0],\n    setIsUpdating = _useState18[1];\n  var _useState19 = useState(true),\n    _useState20 = _slicedToArray(_useState19, 2),\n    showRoomModal = _useState20[0],\n    setShowRoomModal = _useState20[1];\n  var _useState21 = useState(true),\n    _useState22 = _slicedToArray(_useState21, 2),\n    isDarkMode = _useState22[0],\n    setIsDarkMode = _useState22[1];\n  var _useState23 = useState(isSmallScreen ? 0.8 : 1),\n    _useState24 = _slicedToArray(_useState23, 2),\n    zoomLevel = _useState24[0],\n    setZoomLevel = _useState24[1];\n  var _useState25 = useState({}),\n    _useState26 = _slicedToArray(_useState25, 2),\n    tokens = _useState26[0],\n    setTokens = _useState26[1];\n  var _useState27 = useState(COLORS[0]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    currentColor = _useState28[0],\n    setCurrentColor = _useState28[1];\n  var _useState29 = useState([]),\n    _useState30 = _slicedToArray(_useState29, 2),\n    initiative = _useState30[0],\n    setInitiative = _useState30[1];\n  var _useState31 = useState(false),\n    _useState32 = _slicedToArray(_useState31, 2),\n    inCombat = _useState32[0],\n    setInCombat = _useState32[1];\n  var _useState33 = useState(0),\n    _useState34 = _slicedToArray(_useState33, 2),\n    currentTurn = _useState34[0],\n    setCurrentTurn = _useState34[1];\n  var _useState35 = useState(initialGameState.layers),\n    _useState36 = _slicedToArray(_useState35, 2),\n    layers = _useState36[0],\n    setLayers = _useState36[1];\n  var _useState37 = useState([]),\n    _useState38 = _slicedToArray(_useState37, 2),\n    diceHistory = _useState38[0],\n    setDiceHistory = _useState38[1];\n  var _useState39 = useState(false),\n    _useState40 = _slicedToArray(_useState39, 2),\n    advantage = _useState40[0],\n    setAdvantage = _useState40[1];\n  var _useState41 = useState(0),\n    _useState42 = _slicedToArray(_useState41, 2),\n    modifier = _useState42[0],\n    setModifier = _useState42[1];\n  var _useState43 = useState(null),\n    _useState44 = _slicedToArray(_useState43, 2),\n    selectedToken = _useState44[0],\n    setSelectedToken = _useState44[1];\n  var _useState45 = useState(false),\n    _useState46 = _slicedToArray(_useState45, 2),\n    showTokenModal = _useState46[0],\n    setShowTokenModal = _useState46[1];\n  var _useState47 = useState({\n      currency: {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      items: [],\n      currentViewer: null\n    }),\n    _useState48 = _slicedToArray(_useState47, 2),\n    partyLoot = _useState48[0],\n    setPartyLoot = _useState48[1];\n  var _useState49 = useState(false),\n    _useState50 = _slicedToArray(_useState49, 2),\n    showPartyLoot = _useState50[0],\n    setShowPartyLoot = _useState50[1];\n  var _useState51 = useState(1),\n    _useState52 = _slicedToArray(_useState51, 2),\n    diceQuantity = _useState52[0],\n    setDiceQuantity = _useState52[1];\n  var _useState53 = useState([]),\n    _useState54 = _slicedToArray(_useState53, 2),\n    characters = _useState54[0],\n    setCharacters = _useState54[1];\n  var _useState55 = useState(false),\n    _useState56 = _slicedToArray(_useState55, 2),\n    showCharacterSheet = _useState56[0],\n    setShowCharacterSheet = _useState56[1];\n  var _useState57 = useState(null),\n    _useState58 = _slicedToArray(_useState57, 2),\n    selectedCharacter = _useState58[0],\n    setSelectedCharacter = _useState58[1];\n  var _useState59 = useState(false),\n    _useState60 = _slicedToArray(_useState59, 2),\n    showInventory = _useState60[0],\n    setShowInventory = _useState60[1];\n  var _useState61 = useState(''),\n    _useState62 = _slicedToArray(_useState61, 2),\n    playerName = _useState62[0],\n    setPlayerName = _useState62[1];\n  var _useState63 = useState(true),\n    _useState64 = _slicedToArray(_useState63, 2),\n    showPlayerNameModal = _useState64[0],\n    setShowPlayerNameModal = _useState64[1];\n  var _useState65 = useState('normal'),\n    _useState66 = _slicedToArray(_useState65, 2),\n    rollType = _useState66[0],\n    setRollType = _useState66[1];\n  var _useState67 = useState(null),\n    _useState68 = _slicedToArray(_useState67, 2),\n    currentRollResult = _useState68[0],\n    setCurrentRollResult = _useState68[1];\n  var firebaseRef = useRef(null);\n  var unsubscribeRef = useRef(null);\n  var handleDisconnect = useCallback(function () {\n    try {\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n        unsubscribeRef.current = null;\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n        firebaseRef.current = null;\n      }\n      setIsConnected(false);\n      setRoomCode('');\n      setTokens({});\n      setLayers(initialGameState.layers);\n      setInitiative([]);\n      setInCombat(false);\n      setCurrentTurn(0);\n      setDiceHistory([]);\n      setAdvantage(false);\n      setModifier(0);\n      setSelectedToken(null);\n      setShowTokenModal(false);\n      setPartyLoot(initialGameState.partyLoot);\n      setZoomLevel(isSmallScreen ? 0.8 : 1);\n    } catch (error) {\n      console.error('Error during disconnect:', error);\n      Alert.alert('Error', 'Failed to leave room properly. Please try again.');\n    }\n  }, []);\n  var handleInitiativeRoll = useCallback(function () {\n    if (!tokens || Object.keys(tokens).length === 0) {\n      Alert.alert('Error', 'No tokens on the board');\n      return;\n    }\n    var rolls = Object.entries(tokens).map(function (_ref13) {\n      var _ref14 = _slicedToArray(_ref13, 2),\n        position = _ref14[0],\n        token = _ref14[1];\n      var roll = Math.floor(Math.random() * 20) + 1;\n      var initiative = roll + (token.initiativeBonus || 0);\n      return {\n        position: position,\n        initiative: initiative,\n        details: token.name + \" (\" + initiative + \")\"\n      };\n    });\n    rolls.sort(function (a, b) {\n      return b.initiative - a.initiative;\n    });\n    if (firebaseRef.current) {\n      set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n        tokens: tokens,\n        layers: layers,\n        initiative: rolls,\n        inCombat: true,\n        currentTurn: 0\n      }));\n    }\n    setInitiative(rolls);\n    setInCombat(true);\n    setCurrentTurn(0);\n  }, [tokens, layers]);\n  var rollDice = useCallback(function (sides) {\n    var allRolls = [];\n    for (var d = 0; d < diceQuantity; d++) {\n      var rolls = [];\n      var numRolls = rollType !== 'normal' ? 2 : 1;\n      for (var i = 0; i < numRolls; i++) {\n        rolls.push(Math.floor(Math.random() * sides) + 1);\n      }\n      var finalRoll = rollType === 'advantage' ? Math.max.apply(Math, rolls) : rollType === 'disadvantage' ? Math.min.apply(Math, rolls) : rolls[0];\n      allRolls.push({\n        rolls: rolls,\n        total: finalRoll\n      });\n    }\n    var grandTotal = allRolls.reduce(function (sum, roll) {\n      return sum + roll.total;\n    }, 0) + modifier;\n    var newResult = {\n      dice: diceQuantity + \"d\" + sides,\n      rolls: allRolls.map(function (r) {\n        return r.rolls;\n      }).flat(),\n      individualTotals: allRolls.map(function (r) {\n        return r.total;\n      }),\n      modifier: modifier,\n      rollType: rollType,\n      total: grandTotal,\n      timestamp: Date.now()\n    };\n    setDiceHistory(function (prev) {\n      return [newResult].concat(_toConsumableArray(prev.slice(0, 49)));\n    });\n    Vibration.vibrate(50);\n  }, [rollType, modifier, diceQuantity]);\n  var handleCellPress = useCallback(function () {\n    var _ref15 = _asyncToGenerator(function* (row, col) {\n      if (!firebaseRef.current) return;\n      try {\n        var position = row + \"-\" + col;\n        var newTokens = _objectSpread({}, tokens);\n        if (tokens[position]) {\n          delete newTokens[position];\n        } else {\n          newTokens[position] = {\n            name: \"Token \" + (Object.keys(tokens).length + 1),\n            color: currentColor,\n            hp: 10,\n            maxHp: 10,\n            initiativeBonus: 0,\n            effects: [],\n            position: position\n          };\n        }\n        yield set(firebaseRef.current, {\n          tokens: newTokens,\n          layers: layers,\n          initiative: initiative,\n          inCombat: inCombat,\n          currentTurn: currentTurn,\n          partyLoot: partyLoot,\n          lastUpdate: Date.now()\n        });\n        setTokens(newTokens);\n      } catch (error) {\n        console.error('Error updating tokens:', error);\n        Alert.alert('Error', 'Failed to update token');\n      }\n    });\n    return function (_x, _x2) {\n      return _ref15.apply(this, arguments);\n    };\n  }(), [tokens, currentColor, layers, initiative, inCombat, currentTurn, partyLoot]);\n  var savePlayerData = useCallback(function () {\n    var _ref16 = _asyncToGenerator(function* (updatedCharacters) {\n      if (!playerName || !roomCode) return;\n      try {\n        var roomPlayerRef = ref(database, \"rooms/\" + roomCode + \"/players/\" + playerName);\n        var globalPlayerRef = ref(database, \"players/\" + playerName);\n        var playerData = {\n          characters: updatedCharacters,\n          lastUpdate: Date.now()\n        };\n        yield Promise.all([set(roomPlayerRef, playerData), set(globalPlayerRef, playerData)]);\n      } catch (error) {\n        console.error('Error saving player data:', error);\n        Alert.alert('Error', 'Failed to save character data');\n      }\n    });\n    return function (_x3) {\n      return _ref16.apply(this, arguments);\n    };\n  }(), [playerName, roomCode]);\n  var connectToRoom = useCallback(function () {\n    var _ref17 = _asyncToGenerator(function* (code) {\n      if (!code.trim() || !playerName) {\n        Alert.alert(\"Error\", \"Please enter a room code and player name\");\n        return;\n      }\n      setIsJoining(true);\n      setIsLoading(true);\n      try {\n        var globalPlayerRef = ref(database, \"players/\" + playerName);\n        var playerSnapshot = yield get(globalPlayerRef);\n        if (playerSnapshot.exists()) {\n          var playerData = playerSnapshot.val();\n          setCharacters(playerData.characters || []);\n        }\n        var gameRef = ref(database, \"rooms/\" + code);\n        firebaseRef.current = gameRef;\n        var snapshot = yield get(gameRef);\n        if (!snapshot.exists()) {\n          yield set(gameRef, initialGameState);\n        }\n        var unsubscribe = onValue(gameRef, function (snapshot) {\n          var data = snapshot.val();\n          if (data) {\n            setTokens(data.tokens || {});\n            setLayers(data.layers || initialGameState.layers);\n            setInitiative(data.initiative || []);\n            setInCombat(data.inCombat || false);\n            setCurrentTurn(data.currentTurn || 0);\n            setPartyLoot(data.partyLoot || initialGameState.partyLoot);\n            if (data.players && data.players[playerName]) {\n              setCharacters(data.players[playerName].characters || []);\n            }\n          }\n        });\n        unsubscribeRef.current = unsubscribe;\n        setRoomCode(code);\n        setShowRoomModal(false);\n        setIsConnected(true);\n      } catch (error) {\n        console.error('Connection error:', error);\n        Alert.alert(\"Error\", \"Failed to join room. Please try again.\");\n        setIsConnected(false);\n      } finally {\n        setIsJoining(false);\n        setIsLoading(false);\n      }\n    });\n    return function (_x4) {\n      return _ref17.apply(this, arguments);\n    };\n  }(), [playerName]);\n  useEffect(function () {\n    var handleOffline = function handleOffline() {\n      Alert.alert('Connection Lost', 'Please check your internet connection', [{\n        text: 'OK'\n      }]);\n    };\n    window.addEventListener('offline', handleOffline);\n    return function () {\n      window.removeEventListener('offline', handleOffline);\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n      }\n    };\n  }, []);\n  var layoutStyles = {\n    sidePanel: {\n      backgroundColor: THEME.background.panel,\n      padding: 15,\n      borderRadius: 10,\n      marginBottom: 15,\n      width: '100%'\n    },\n    sidePanelTitle: {\n      color: THEME.text.light,\n      fontSize: 18,\n      fontWeight: 'bold',\n      marginBottom: 10\n    },\n    buttonRow: {\n      flexDirection: 'row',\n      gap: 10,\n      marginBottom: 10\n    },\n    panelButton: {\n      backgroundColor: THEME.background.primary,\n      padding: 10,\n      borderRadius: 5,\n      alignItems: 'center',\n      flex: 1\n    },\n    panelButtonText: {\n      color: THEME.text.light,\n      fontWeight: 'bold'\n    },\n    characterItem: {\n      backgroundColor: THEME.background.primary,\n      padding: 10,\n      borderRadius: 5,\n      marginBottom: 8\n    },\n    characterInfo: {\n      marginBottom: 5\n    },\n    characterName: {\n      color: THEME.text.light,\n      fontSize: 16,\n      fontWeight: 'bold'\n    },\n    characterDetails: {\n      color: THEME.text.light + '80',\n      fontSize: 12\n    },\n    characterButtons: {\n      flexDirection: 'row',\n      gap: 8\n    },\n    characterButton: {\n      padding: 8,\n      borderRadius: 5,\n      minWidth: 60,\n      alignItems: 'center'\n    },\n    characterButtonText: {\n      color: THEME.text.light,\n      fontSize: 12,\n      fontWeight: 'bold'\n    }\n  };\n  return _jsxs(SafeAreaView, {\n    style: [styles.container, isDarkMode && styles.darkMode],\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TokenModal, {\n        showTokenModal: showTokenModal,\n        setShowTokenModal: setShowTokenModal,\n        selectedToken: selectedToken,\n        setSelectedToken: setSelectedToken,\n        tokens: tokens,\n        firebaseRef: firebaseRef,\n        initialGameState: initialGameState,\n        layers: layers,\n        initiative: initiative,\n        inCombat: inCombat,\n        currentTurn: currentTurn,\n        THEME: THEME\n      }), _jsx(RoomModal, {\n        showRoomModal: showRoomModal,\n        setShowRoomModal: setShowRoomModal,\n        isConnected: isConnected,\n        roomCode: roomCode,\n        setRoomCode: setRoomCode,\n        isJoining: isJoining,\n        connectToRoom: connectToRoom\n      }), _jsx(PlayerNameModal, {\n        visible: showPlayerNameModal && !playerName,\n        onSubmit: function onSubmit(name) {\n          setPlayerName(name);\n          setShowPlayerNameModal(false);\n          setIsConnected(true);\n        }\n      }), _jsx(PartyLootModal, {\n        visible: showPartyLoot,\n        onClose: function onClose() {\n          return setShowPartyLoot(false);\n        },\n        partyLoot: partyLoot,\n        playerName: playerName,\n        onUpdate: function onUpdate(updatedLoot) {\n          setPartyLoot(updatedLoot);\n          if (firebaseRef.current) {\n            set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n              tokens: tokens,\n              layers: layers,\n              initiative: initiative,\n              inCombat: inCombat,\n              currentTurn: currentTurn,\n              partyLoot: updatedLoot\n            }));\n          }\n        }\n      }), _jsx(CharacterSheetModal, {\n        visible: showCharacterSheet,\n        onClose: function onClose() {\n          return setShowCharacterSheet(false);\n        },\n        character: selectedCharacter || {\n          name: '',\n          class: '',\n          level: 1,\n          owner: playerName,\n          proficiencyBonus: 2,\n          abilityScores: {\n            STR: 10,\n            DEX: 10,\n            CON: 10,\n            INT: 10,\n            WIS: 10,\n            CHA: 10\n          },\n          proficientSkills: [],\n          currency: {\n            CP: 0,\n            SP: 0,\n            EP: 0,\n            GP: 0,\n            PP: 0\n          },\n          items: [],\n          inventory: []\n        },\n        characters: characters,\n        onUpdate: (function () {\n          var _ref18 = _asyncToGenerator(function* (updatedCharacter) {\n            try {\n              if (!updatedCharacter) {\n                throw new Error('No character data to save');\n              }\n              var newCharacters = selectedCharacter ? characters.map(function (char) {\n                return char.name === selectedCharacter.name ? updatedCharacter : char;\n              }) : [].concat(_toConsumableArray(characters), [updatedCharacter]);\n              setCharacters(newCharacters);\n              var playerRef = ref(database, \"players/\" + playerName);\n              yield set(playerRef, {\n                characters: newCharacters,\n                lastUpdate: Date.now()\n              });\n              if (firebaseRef.current) {\n                var roomPlayerRef = ref(database, \"rooms/\" + roomCode + \"/players/\" + playerName);\n                yield set(roomPlayerRef, {\n                  characters: newCharacters,\n                  lastUpdate: Date.now()\n                });\n              }\n              setShowCharacterSheet(false);\n            } catch (error) {\n              console.error('Error saving character:', error);\n              Alert.alert('Error', 'Failed to save character');\n            }\n          });\n          return function (_x5) {\n            return _ref18.apply(this, arguments);\n          };\n        }())\n      }), _jsx(InventoryModal, {\n        visible: showInventory,\n        onClose: function onClose() {\n          return setShowInventory(false);\n        },\n        character: selectedCharacter,\n        onUpdate: (function () {\n          var _ref19 = _asyncToGenerator(function* (updatedCharacter) {\n            try {\n              var newCharacters = characters.map(function (char) {\n                return char.name === selectedCharacter.name ? updatedCharacter : char;\n              });\n              setCharacters(newCharacters);\n              yield savePlayerData(newCharacters);\n              setShowInventory(false);\n            } catch (error) {\n              console.error('Error saving inventory:', error);\n              Alert.alert('Error', 'Failed to save inventory');\n            }\n          });\n          return function (_x6) {\n            return _ref19.apply(this, arguments);\n          };\n        }())\n      }), !isConnected ? _jsx(View, {\n        style: styles.loadingContainer,\n        children: isLoading ? _jsxs(View, {\n          style: {\n            alignItems: 'center'\n          },\n          children: [_jsx(ActivityIndicator, {\n            size: \"large\",\n            color: THEME.accent\n          }), _jsx(Text, {\n            style: [styles.loadingText, {\n              marginTop: 20\n            }],\n            children: \"Connecting to room...\"\n          })]\n        }) : _jsx(Text, {\n          style: styles.loadingText,\n          children: \"Enter a room code to begin\"\n        })\n      }) : _jsxs(_Fragment, {\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"D&D Combat Tracker\"\n          }), _jsxs(ScrollView, {\n            horizontal: isSmallScreen,\n            showsHorizontalScrollIndicator: false,\n            contentContainerStyle: styles.controls,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.primary\n              }],\n              onPress: function onPress() {\n                return setShowRoomModal(true);\n              },\n              children: _jsxs(Text, {\n                style: styles.buttonText,\n                children: [\"Room: \", roomCode]\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.primary\n              }],\n              onPress: handleInitiativeRoll,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Roll Initiative\"\n              })\n            }), inCombat && _jsxs(_Fragment, {\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.controlButton, {\n                  backgroundColor: THEME.success\n                }],\n                onPress: function onPress() {\n                  var nextTurn = (currentTurn + 1) % initiative.length;\n                  setCurrentTurn(nextTurn);\n                  if (firebaseRef.current) {\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: tokens,\n                      layers: layers,\n                      initiative: initiative,\n                      inCombat: true,\n                      currentTurn: nextTurn\n                    }));\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Next Turn\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.controlButton, {\n                  backgroundColor: THEME.danger\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current) {\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: tokens,\n                      layers: layers,\n                      initiative: [],\n                      inCombat: false,\n                      currentTurn: 0\n                    }));\n                  }\n                  setInitiative([]);\n                  setInCombat(false);\n                  setCurrentTurn(0);\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"End Combat\"\n                })\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.danger\n              }],\n              onPress: function onPress() {\n                Alert.alert(\"Leave Room\", \"Are you sure you want to leave this room?\", [{\n                  text: \"Cancel\",\n                  style: \"cancel\"\n                }, {\n                  text: \"Leave\",\n                  style: \"destructive\",\n                  onPress: function onPress() {\n                    if (unsubscribeRef.current) {\n                      unsubscribeRef.current();\n                      unsubscribeRef.current = null;\n                    }\n                    if (firebaseRef.current) {\n                      off(firebaseRef.current);\n                      firebaseRef.current = null;\n                    }\n                    setIsConnected(false);\n                    setRoomCode('');\n                    setTokens({});\n                    setInitiative([]);\n                    setInCombat(false);\n                    setCurrentTurn(0);\n                    setPartyLoot(initialGameState.partyLoot);\n                    setShowRoomModal(true);\n                    setShowPlayerNameModal(true);\n                  }\n                }]);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Leave Room\"\n              })\n            })]\n          })]\n        }), _jsx(ScrollView, {\n          style: styles.content,\n          children: _jsxs(View, {\n            style: styles.mainArea,\n            children: [_jsxs(View, {\n              style: styles.gridSection,\n              children: [_jsx(ScrollView, {\n                horizontal: true,\n                contentContainerStyle: {\n                  minWidth: '100%'\n                },\n                children: _jsx(ScrollView, {\n                  children: _jsxs(View, {\n                    style: [styles.gridContainer, {\n                      transform: [{\n                        scale: zoomLevel\n                      }]\n                    }],\n                    children: [_jsx(View, {\n                      style: styles.colorPicker,\n                      children: COLORS.map(function (color) {\n                        return _jsx(TouchableOpacity, {\n                          style: [styles.colorButton, {\n                            backgroundColor: color\n                          }, color === currentColor && styles.selectedColor],\n                          onPress: function onPress() {\n                            return setCurrentColor(color);\n                          }\n                        }, color);\n                      })\n                    }), Array.from({\n                      length: GRID_SIZE\n                    }).map(function (_, row) {\n                      return _jsx(View, {\n                        style: styles.row,\n                        children: Array.from({\n                          length: GRID_SIZE\n                        }).map(function (_, col) {\n                          var _initiative$currentTu;\n                          var position = row + \"-\" + col;\n                          var token = tokens[position];\n                          var isCurrentTurn = inCombat && ((_initiative$currentTu = initiative[currentTurn]) == null ? void 0 : _initiative$currentTu.position) === position;\n                          return _jsx(TouchableOpacity, {\n                            style: [styles.cell, token && {\n                              backgroundColor: token.color\n                            }, isCurrentTurn && styles.currentTurn],\n                            onPress: function onPress() {\n                              return handleCellPress(row, col);\n                            },\n                            onLongPress: function onLongPress() {\n                              if (token) {\n                                setSelectedToken(_objectSpread(_objectSpread({}, token), {}, {\n                                  position: position\n                                }));\n                                setShowTokenModal(true);\n                              }\n                            },\n                            children: token && _jsxs(View, {\n                              style: styles.tokenContent,\n                              children: [_jsx(Text, {\n                                style: [styles.tokenText, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                numberOfLines: 1,\n                                children: token.name\n                              }), _jsxs(Text, {\n                                style: [styles.tokenHp, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                children: [token.hp, \"/\", token.maxHp]\n                              }), token.effects && token.effects.length > 0 && _jsx(View, {\n                                style: statusStyles.tokenEffects,\n                                children: token.effects.map(function (effect) {\n                                  var statusEffect = STATUS_EFFECTS.find(function (e) {\n                                    return e.id === effect;\n                                  });\n                                  return statusEffect ? _jsx(Text, {\n                                    style: statusStyles.effectIcon,\n                                    children: statusEffect.icon\n                                  }, effect) : null;\n                                })\n                              })]\n                            })\n                          }, col);\n                        })\n                      }, row);\n                    })]\n                  })\n                })\n              }), _jsx(GridZoomControls, {\n                zoomLevel: zoomLevel,\n                setZoomLevel: setZoomLevel\n              })]\n            }), _jsxs(View, {\n              style: styles.sidebar,\n              children: [_jsxs(View, {\n                style: layoutStyles.sidePanel,\n                children: [_jsx(Text, {\n                  style: layoutStyles.sidePanelTitle,\n                  children: \"Character Management\"\n                }), _jsxs(View, {\n                  style: layoutStyles.buttonRow,\n                  children: [_jsx(TouchableOpacity, {\n                    style: layoutStyles.panelButton,\n                    onPress: function onPress() {\n                      setSelectedCharacter(null);\n                      setShowCharacterSheet(true);\n                    },\n                    children: _jsx(Text, {\n                      style: layoutStyles.panelButtonText,\n                      children: \"New Character\"\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: layoutStyles.panelButton,\n                    onPress: function onPress() {\n                      return setShowPartyLoot(true);\n                    },\n                    children: _jsx(Text, {\n                      style: layoutStyles.panelButtonText,\n                      children: \"Party Loot\"\n                    })\n                  })]\n                }), _jsx(ScrollView, {\n                  style: {\n                    maxHeight: 200\n                  },\n                  children: characters.filter(function (char) {\n                    return char.owner === playerName;\n                  }).map(function (char, index) {\n                    return _jsxs(View, {\n                      style: [layoutStyles.characterItem, {\n                        marginBottom: 8\n                      }],\n                      children: [_jsxs(View, {\n                        style: layoutStyles.characterInfo,\n                        children: [_jsx(Text, {\n                          style: layoutStyles.characterName,\n                          children: char.name\n                        }), _jsxs(Text, {\n                          style: layoutStyles.characterDetails,\n                          children: [\"Level \", char.level, \" \", char.class]\n                        })]\n                      }), _jsxs(View, {\n                        style: layoutStyles.characterButtons,\n                        children: [_jsx(TouchableOpacity, {\n                          style: [layoutStyles.characterButton, {\n                            backgroundColor: THEME.accent\n                          }],\n                          onPress: function onPress() {\n                            setSelectedCharacter(char);\n                            setShowCharacterSheet(true);\n                          },\n                          children: _jsx(Text, {\n                            style: layoutStyles.characterButtonText,\n                            children: \"Sheet\"\n                          })\n                        }), _jsx(TouchableOpacity, {\n                          style: [layoutStyles.characterButton, {\n                            backgroundColor: THEME.success\n                          }],\n                          onPress: function onPress() {\n                            setSelectedCharacter(char);\n                            setShowInventory(true);\n                          },\n                          children: _jsx(Text, {\n                            style: layoutStyles.characterButtonText,\n                            children: \"Loot\"\n                          })\n                        })]\n                      })]\n                    }, index);\n                  })\n                })]\n              }), _jsxs(View, {\n                style: diceStyles.dicePanel,\n                children: [_jsx(Text, {\n                  style: diceStyles.diceTitle,\n                  children: \"Dice Roller\"\n                }), _jsxs(View, {\n                  style: diceStyles.diceControls,\n                  children: [_jsx(View, {\n                    style: diceStyles.controlsRow,\n                    children: _jsxs(View, {\n                      style: diceStyles.controlGroup,\n                      children: [_jsx(TouchableOpacity, {\n                        style: [diceStyles.controlButton, rollType === 'advantage' && diceStyles.controlActive, rollType === 'advantage' && {\n                          backgroundColor: THEME.success\n                        }],\n                        onPress: function onPress() {\n                          return setRollType(function (current) {\n                            return current === 'advantage' ? 'normal' : 'advantage';\n                          });\n                        },\n                        children: _jsx(Text, {\n                          style: styles.buttonText,\n                          children: \"Advantage\"\n                        })\n                      }), _jsx(TouchableOpacity, {\n                        style: [diceStyles.controlButton, rollType === 'disadvantage' && diceStyles.controlActive, rollType === 'disadvantage' && {\n                          backgroundColor: THEME.danger\n                        }],\n                        onPress: function onPress() {\n                          return setRollType(function (current) {\n                            return current === 'disadvantage' ? 'normal' : 'disadvantage';\n                          });\n                        },\n                        children: _jsx(Text, {\n                          style: styles.buttonText,\n                          children: \"Disadvantage\"\n                        })\n                      })]\n                    })\n                  }), _jsxs(View, {\n                    style: diceStyles.controlsRow,\n                    children: [_jsxs(View, {\n                      style: diceStyles.modifierGroup,\n                      children: [_jsx(Text, {\n                        style: diceStyles.modifierLabel,\n                        children: \"Modifier\"\n                      }), _jsx(TextInput, {\n                        style: diceStyles.modifierInput,\n                        value: String(modifier),\n                        onChangeText: function onChangeText(text) {\n                          var num = parseInt(text) || 0;\n                          setModifier(num);\n                        },\n                        keyboardType: \"numeric\",\n                        selectTextOnFocus: true\n                      })]\n                    }), _jsxs(View, {\n                      style: diceStyles.quantityGroup,\n                      children: [_jsx(Text, {\n                        style: diceStyles.quantityLabel,\n                        children: \"Quantity\"\n                      }), _jsx(TextInput, {\n                        style: diceStyles.quantityInput,\n                        value: String(diceQuantity),\n                        onChangeText: function onChangeText(text) {\n                          var num = parseInt(text) || 1;\n                          setDiceQuantity(Math.max(1, Math.min(num, 100)));\n                        },\n                        keyboardType: \"numeric\",\n                        selectTextOnFocus: true\n                      })]\n                    })]\n                  })]\n                }), _jsx(View, {\n                  style: diceStyles.diceGrid,\n                  children: DICE_TYPES.map(function (_ref20) {\n                    var sides = _ref20.sides,\n                      color = _ref20.color;\n                    return _jsx(TouchableOpacity, {\n                      style: [diceStyles.diceButton, {\n                        backgroundColor: color\n                      }],\n                      onPress: function onPress() {\n                        var allRolls = Array.from({\n                          length: diceQuantity\n                        }, function () {\n                          return Math.floor(Math.random() * sides) + 1;\n                        });\n                        var finalRolls = allRolls.map(function (roll) {\n                          if (rollType !== 'normal') {\n                            var secondRoll = Math.floor(Math.random() * sides) + 1;\n                            return rollType === 'advantage' ? Math.max(roll, secondRoll) : Math.min(roll, secondRoll);\n                          }\n                          return roll;\n                        });\n                        var total = finalRolls.reduce(function (sum, roll) {\n                          return sum + roll;\n                        }, 0) + modifier;\n                        var newResult = {\n                          dice: diceQuantity + \"d\" + sides,\n                          rolls: allRolls,\n                          individualTotals: finalRolls,\n                          modifier: modifier,\n                          rollType: rollType,\n                          total: total,\n                          timestamp: Date.now()\n                        };\n                        setCurrentRollResult(newResult);\n                        Vibration.vibrate(50);\n                      },\n                      children: _jsxs(Text, {\n                        style: diceStyles.diceButtonText,\n                        children: [\"d\", sides]\n                      })\n                    }, sides);\n                  })\n                })]\n              }), inCombat && initiative.length > 0 && _jsxs(View, {\n                style: styles.initiativeList,\n                children: [_jsx(Text, {\n                  style: styles.boxTitle,\n                  children: \"Initiative Order\"\n                }), _jsx(ScrollView, {\n                  style: styles.initiativeScroll,\n                  children: initiative.map(function (item, index) {\n                    return _jsx(View, {\n                      style: [styles.initiativeItem, index === currentTurn && styles.currentInitiative],\n                      children: _jsx(Text, {\n                        style: [styles.initiativeText, index === currentTurn && styles.currentInitiativeText],\n                        children: item.details\n                      })\n                    }, item.position);\n                  })\n                })]\n              })]\n            })]\n          })\n        })]\n      })]\n    }), _jsx(DiceResultOverlay, {\n      result: currentRollResult,\n      onClose: function onClose() {\n        return setCurrentRollResult(null);\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useCallback","useEffect","useRef","memo","StyleSheet","View","Text","TouchableOpacity","Pressable","TextInput","ScrollView","Alert","Modal","KeyboardAvoidingView","Platform","SafeAreaView","ActivityIndicator","Keyboard","Vibration","Dimensions","initializeApp","getDatabase","ref","onValue","set","get","off","debounce","GestureScrollView","DiceRoller","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","database","LETTERS","Array","from","length","_","i","String","fromCharCode","COLORS","GRID_SIZE","ABILITY_SCORES","SKILLS","STR","DEX","CON","INT","WIS","CHA","CURRENCY","DICE_TYPES","sides","color","STATUS_EFFECTS","id","name","icon","windowDimensions","isSmallScreen","width","THEME","primary","secondary","accent","gold","danger","success","text","light","dark","background","panel","initialGameState","tokens","layers","grid","terrain","effects","fog","initiative","inCombat","currentTurn","settings","gridSize","showCoordinates","partyLoot","currency","CP","SP","EP","GP","PP","items","currentViewer","characters","lastUpdate","Date","now","styles","create","container","flex","backgroundColor","height","header","padding","title","fontSize","fontWeight","marginBottom","controls","flexDirection","flexWrap","gap","justifyContent","controlButton","borderRadius","minWidth","alignItems","content","mainArea","minHeight","gridSection","sidebar","flexShrink","gridContainer","row","cell","borderWidth","borderColor","tokenContent","tokenText","textAlign","tokenHp","modalOverlay","modalContainer","modalContent","modalTitle","input","modalButtons","marginTop","modalButton","buttonText","loadingContainer","loadingText","loadingButtonContent","diceBox","diceControls","diceButtons","diceButton","diceHistory","maxHeight","diceResultContainer","borderBottomWidth","borderBottomColor","diceResult","diceTotal","diceRolls","initiativeList","initiativeScroll","initiativeItem","currentInitiative","initiativeText","currentInitiativeText","zoomControls","position","right","bottom","display","zoomButton","opacity","advantageButton","advantageActive","modifierInput","boxTitle","colorPicker","colorButton","margin","selectedColor","additionalStyles","characterSheet","maxWidth","sheetHeader","sheetSection","sectionTitle","abilityScores","abilityBox","abilityLabel","abilityScore","abilityMod","skillsList","skillItem","proficientDot","marginRight","skillName","skillMod","closeButton","top","closeButtonText","lootSection","currencyRow","currencyInput","currencyLabel","itemRow","itemInput","removeButton","addButton","lootHeader","itemInfo","addedBy","diceStyles","dicePanel","diceHeader","diceTitle","controlsRow","controlGroup","controlActive","modifierGroup","modifierLabel","quantityGroup","quantityLabel","quantityInput","diceGrid","diceButtonText","historyContainer","historyScroll","historyItem","paddingVertical","paddingHorizontal","historyLeft","historyInfo","historyDice","historyRolls","historyTotal","clearButton","statusStyles","effectsContainer","borderTopWidth","borderTopColor","paddingTop","effectsTitle","effectsGrid","effectButton","effectActive","effectText","tokenEffects","effectIcon","saveGameState","_ref","_asyncToGenerator","firebaseRef","current","error","console","alert","apply","arguments","CharacterSheetModal","_ref2","visible","onClose","character","onUpdate","_useState","class","level","owner","proficiencyBonus","proficientSkills","inventory","_useState2","_slicedToArray","editedCharacter","setEditedCharacter","calculateModifier","score","Math","floor","handleAbilityScoreChange","ability","value","newScore","parseInt","prev","_objectSpread","_defineProperty","toggleProficiency","skill","includes","filter","s","concat","_toConsumableArray","getSkillModifier","profBonus","handleSave","_ref3","updatedCharacter","transparent","animationType","onRequestClose","children","style","onPress","onChangeText","placeholder","placeholderTextColor","keyboardType","map","maxLength","selectTextOnFocus","Object","entries","_ref4","_ref5","skills","quantity","notes","item","index","newItems","TokenModal","_ref6","showTokenModal","setShowTokenModal","selectedToken","setSelectedToken","cursor","dismiss","behavior","select","ios","android","keyboardVerticalOffset","e","stopPropagation","blurOnSubmit","autoComplete","spellCheck","enablesReturnKeyAutomatically","hp","max","maxHp","initiativeBonus","effect","_selectedToken$effect","currentEffects","newEffects","newTokens","modalStyles","left","zIndex","RoomModal","_ref7","showRoomModal","setShowRoomModal","isConnected","roomCode","setRoomCode","isJoining","connectToRoom","pointerEvents","trim","toLowerCase","autoCapitalize","autoCorrect","editable","autoFocus","disabled","marginLeft","PartyLootModal","_ref8","playerName","_useState3","_useState4","editedLoot","setEditedLoot","type","toString","buttonRow","button","GridZoomControls","_ref9","zoomLevel","setZoomLevel","debouncedZoom","newZoom","min","InventoryModal","_ref10","_useState5","_useState6","editedInventory","setEditedInventory","newInventory","PlayerNameModal","_ref11","onSubmit","_useState7","_useState8","setName","viewerStyles","viewersList","viewersTitle","viewerName","DiceResultOverlay","_ref12","result","timer","setTimeout","clearTimeout","overlayStyles","diceInfo","dice","modifier","rollType","individualTotals","rolls","join","total","App","_useState9","_useState10","_useState11","_useState12","setIsConnected","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","setIsJoining","_useState17","_useState18","isUpdating","setIsUpdating","_useState19","_useState20","_useState21","_useState22","isDarkMode","setIsDarkMode","_useState23","_useState24","_useState25","_useState26","setTokens","_useState27","_useState28","currentColor","setCurrentColor","_useState29","_useState30","setInitiative","_useState31","_useState32","setInCombat","_useState33","_useState34","setCurrentTurn","_useState35","_useState36","setLayers","_useState37","_useState38","setDiceHistory","_useState39","_useState40","advantage","setAdvantage","_useState41","_useState42","setModifier","_useState43","_useState44","_useState45","_useState46","_useState47","_useState48","setPartyLoot","_useState49","_useState50","showPartyLoot","setShowPartyLoot","_useState51","_useState52","diceQuantity","setDiceQuantity","_useState53","_useState54","setCharacters","_useState55","_useState56","showCharacterSheet","setShowCharacterSheet","_useState57","_useState58","selectedCharacter","setSelectedCharacter","_useState59","_useState60","showInventory","setShowInventory","_useState61","_useState62","setPlayerName","_useState63","_useState64","showPlayerNameModal","setShowPlayerNameModal","_useState65","_useState66","setRollType","_useState67","_useState68","currentRollResult","setCurrentRollResult","unsubscribeRef","handleDisconnect","handleInitiativeRoll","keys","_ref13","_ref14","token","roll","random","details","sort","a","b","rollDice","allRolls","d","numRolls","push","finalRoll","grandTotal","reduce","sum","newResult","r","flat","timestamp","slice","vibrate","handleCellPress","_ref15","col","_x","_x2","savePlayerData","_ref16","updatedCharacters","roomPlayerRef","globalPlayerRef","playerData","Promise","all","_x3","_ref17","code","playerSnapshot","exists","val","gameRef","snapshot","unsubscribe","data","players","_x4","handleOffline","window","addEventListener","removeEventListener","layoutStyles","sidePanel","sidePanelTitle","panelButton","panelButtonText","characterItem","characterInfo","characterName","characterDetails","characterButtons","characterButton","characterButtonText","darkMode","updatedLoot","_ref18","Error","newCharacters","char","playerRef","_x5","_ref19","_x6","size","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","nextTurn","transform","scale","_initiative$currentTu","isCurrentTurn","onLongPress","numberOfLines","statusEffect","find","num","_ref20","finalRolls","secondRoll"],"sources":["C:/Users/Daniel/Desktop/New folder (6)/3d-dice-main/App.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect, useRef, memo } from 'react';\nimport { \n  StyleSheet, \n  View, \n  Text, \n  TouchableOpacity, \n  Pressable,\n  TextInput, \n  ScrollView, \n  Alert, \n  Modal,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  ActivityIndicator,\n  Keyboard,\n  Vibration,\n  Dimensions\n} from 'react-native';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getDatabase, \n  ref, \n  onValue, \n  set, \n  get, \n  off \n} from 'firebase/database';\nimport { debounce } from 'lodash';\nimport { ScrollView as GestureScrollView } from 'react-native-gesture-handler';\nimport { DiceRoller } from './components/DiceModel';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBSy8ia6vKnq95_gbO7lnohVbyAQzqBtk4\",\n  authDomain: \"dndcombattracker-572b0.firebaseapp.com\",\n  databaseURL: \"https://dndcombattracker-572b0-default-rtdb.firebaseio.com\",\n  projectId: \"dndcombattracker-572b0\",\n  storageBucket: \"dndcombattracker-572b0.firebasestorage.app\",\n  messagingSenderId: \"812186225431\",\n  appId: \"1:812186225431:web:8da48e238d10db01d14552\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\n// Constants\nconst LETTERS = Array.from({ length: 26 }, (_, i) => String.fromCharCode(65 + i));\nconst COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f', '#9b59b6', '#1abc9c', '#e67e22', '#ffffff'];\nconst GRID_SIZE = 10;\nconst ABILITY_SCORES = ['STR', 'DEX', 'CON', 'INT', 'WIS', 'CHA'];\nconst SKILLS = {\n  STR: ['Athletics'],\n  DEX: ['Acrobatics', 'Sleight of Hand', 'Stealth'],\n  CON: [],\n  INT: ['Arcana', 'History', 'Investigation', 'Nature', 'Religion'],\n  WIS: ['Animal Handling', 'Insight', 'Medicine', 'Perception', 'Survival'],\n  CHA: ['Deception', 'Intimidation', 'Performance', 'Persuasion']\n};\nconst CURRENCY = ['CP', 'SP', 'EP', 'GP', 'PP'];\nconst DICE_TYPES = [\n  { sides: 4, color: '#FF6B6B' },\n  { sides: 6, color: '#4ECDC4' },\n  { sides: 8, color: '#45B7D1' },\n  { sides: 10, color: '#96CEB4' },\n  { sides: 12, color: '#FFEEAD' },\n  { sides: 20, color: '#D4A5A5' },\n  { sides: 100, color: '#9B59B6' }\n];\nconst STATUS_EFFECTS = [\n  { id: 'blinded', name: 'Blinded', icon: '👁️' },\n  { id: 'charmed', name: 'Charmed', icon: '💕' },\n  { id: 'deafened', name: 'Deafened', icon: '👂' },\n  { id: 'frightened', name: 'Frightened', icon: '😨' },\n  { id: 'grappled', name: 'Grappled', icon: '🤼' },\n  { id: 'incapacitated', name: 'Incapacitated', icon: '💫' },\n  { id: 'invisible', name: 'Invisible', icon: '👻' },\n  { id: 'paralyzed', name: 'Paralyzed', icon: '⚡' },\n  { id: 'petrified', name: 'Petrified', icon: '🗿' },\n  { id: 'poisoned', name: 'Poisoned', icon: '🤢' },\n  { id: 'prone', name: 'Prone', icon: '⬇️' },\n  { id: 'restrained', name: 'Restrained', icon: '⛓️' },\n  { id: 'stunned', name: 'Stunned', icon: '💫' },\n  { id: 'unconscious', name: 'Unconscious', icon: '💤' }\n];\n\n// Get window dimensions\nconst windowDimensions = Dimensions.get('window');\nconst isSmallScreen = windowDimensions.width < 768;\n\n// Theme configuration\nconst THEME = {\n  primary: '#1E1E1E',\n  secondary: '#2D2D2D',\n  accent: '#7289DA',\n  gold: '#FFD700',\n  danger: '#ED4245',\n  success: '#3BA55C',\n  text: {\n    light: '#FFFFFF',\n    dark: '#1E1E1E'\n  },\n  background: {\n    primary: '#1E1E1E',\n    secondary: '#2D2D2D',\n    dark: '#141414',\n    panel: '#363636'\n  }\n};\n\n// Initial game state\nconst initialGameState = {\n  tokens: {},\n  layers: {\n    grid: true,\n    terrain: {},\n    tokens: {},\n    effects: {},\n    fog: {}\n  },\n  initiative: [],\n  inCombat: false,\n  currentTurn: 0,\n  settings: {\n    gridSize: GRID_SIZE,\n    showCoordinates: true,\n  },\n  partyLoot: {\n    currency: { CP: 0, SP: 0, EP: 0, GP: 0, PP: 0 },\n    items: [],\n    currentViewer: null\n  },\n  characters: [],\n  lastUpdate: Date.now()\n};\n\n// Styles\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.background.primary,\n    height: '100%',\n    width: '100%',\n  },\n  header: {\n    padding: isSmallScreen ? 10 : 20,\n    backgroundColor: THEME.background.panel,\n    width: '100%',\n  },\n  title: {\n    fontSize: isSmallScreen ? 18 : 24,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10,\n  },\n  controls: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    justifyContent: isSmallScreen ? 'center' : 'flex-start',\n  },\n  controlButton: {\n    padding: isSmallScreen ? 8 : 10,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? 80 : 100,\n    alignItems: 'center',\n  },\n  content: {\n    flex: 1,\n    width: '100%',\n  },\n  mainArea: {\n    flex: 1,\n    flexDirection: isSmallScreen ? 'column' : 'row',\n    padding: isSmallScreen ? 10 : 20,\n    gap: 20,\n    minHeight: '100%',\n  },\n  gridSection: {\n    flex: 1,\n    minHeight: isSmallScreen ? 400 : '100%',\n  },\n  sidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0,\n  },\n  gridContainer: {\n    padding: isSmallScreen ? 5 : 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  cell: {\n    width: isSmallScreen ? 35 : 60,\n    height: isSmallScreen ? 35 : 60,\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.secondary,\n  },\n  tokenContent: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: isSmallScreen ? 1 : 2,\n  },\n  tokenText: {\n    fontSize: isSmallScreen ? 10 : 12,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tokenHp: {\n    fontSize: isSmallScreen ? 8 : 10,\n    textAlign: 'center',\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '90%' : 400,\n  },\n  modalTitle: {\n    fontSize: isSmallScreen ? 18 : 20,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 15,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    color: THEME.text.light,\n    backgroundColor: THEME.background.primary,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 15,\n  },\n  modalButton: {\n    padding: 10,\n    borderRadius: 5,\n    minWidth: 100,\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n    fontSize: isSmallScreen ? 12 : 14,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    width: '100%',\n    height: '100%',\n  },\n  loadingText: {\n    color: THEME.text.light,\n    fontSize: 16,\n    marginTop: 10,\n  },\n  loadingButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  diceBox: {\n    width: '100%',\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  diceButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 5,\n    justifyContent: 'center',\n  },\n  diceButton: {\n    padding: isSmallScreen ? 5 : 10,\n    backgroundColor: THEME.primary,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: isSmallScreen ? 30 : 60,\n  },\n  diceHistory: {\n    maxHeight: isSmallScreen ? 100 : 200,\n    marginTop: 10,\n  },\n  diceResultContainer: {\n    padding: 5,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.accent + '40',\n  },\n  diceResult: {\n    color: THEME.text.light,\n  },\n  diceTotal: {\n    fontWeight: 'bold',\n    color: THEME.accent,\n  },\n  diceRolls: {\n    color: THEME.text.light + '80',\n    fontSize: 12,\n  },\n  initiativeList: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n    width: '100%',\n  },\n  initiativeScroll: {\n    maxHeight: isSmallScreen ? 150 : 200,\n  },\n  initiativeItem: {\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n    backgroundColor: THEME.background.primary,\n  },\n  currentInitiative: {\n    backgroundColor: THEME.accent,\n  },\n  initiativeText: {\n    color: THEME.text.light,\n  },\n  currentInitiativeText: {\n    color: THEME.text.dark,\n    fontWeight: 'bold',\n  },\n  zoomControls: {\n    position: 'absolute',\n    right: 10,\n    bottom: 10,\n    flexDirection: 'row',\n    gap: 10,\n    display: isSmallScreen ? 'flex' : 'none',\n  },\n  zoomButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: THEME.background.panel,\n    justifyContent: 'center',\n    alignItems: 'center',\n    opacity: 0.8,\n  },\n  advantageButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n  },\n  advantageActive: {\n    backgroundColor: THEME.accent,\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.primary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 60,\n    textAlign: 'center',\n  },\n  boxTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  colorPicker: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    gap: isSmallScreen ? 2 : 5,\n    marginBottom: isSmallScreen ? 5 : 10,\n  },\n  colorButton: {\n    width: isSmallScreen ? 20 : 30,\n    height: isSmallScreen ? 20 : 30,\n    borderRadius: isSmallScreen ? 10 : 15,\n    margin: isSmallScreen ? 1 : 2,\n  },\n  selectedColor: {\n    borderWidth: 2,\n    borderColor: THEME.accent,\n  },\n});\n\nconst additionalStyles = StyleSheet.create({\n  characterSheet: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '95%' : '80%',\n    maxWidth: 800,\n    maxHeight: '90%',\n  },\n  sheetHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n  },\n  sheetSection: {\n    marginBottom: 20,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10,\n  },\n  abilityScores: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    gap: 10,\n  },\n  abilityBox: {\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: isSmallScreen ? '30%' : 100,\n    marginBottom: 10,\n  },\n  abilityLabel: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n  },\n  abilityScore: {\n    color: THEME.accent,\n    fontSize: 24,\n    fontWeight: 'bold',\n    width: '100%',\n    textAlign: 'center',\n    padding: 5,\n  },\n  abilityMod: {\n    color: THEME.text.light,\n  },\n  skillsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n  },\n  skillItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? '45%' : 200,\n  },\n  proficientDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginRight: 5,\n  },\n  skillName: {\n    color: THEME.text.light,\n    flex: 1,\n  },\n  skillMod: {\n    color: THEME.accent,\n    fontWeight: 'bold',\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    padding: 10,\n  },\n  closeButtonText: {\n    color: THEME.text.light,\n    fontSize: 20,\n  },\n  lootSection: {\n    backgroundColor: THEME.background.primary,\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 15,\n  },\n  currencyRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  currencyInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 80,\n    textAlign: 'center',\n  },\n  currencyLabel: {\n    color: THEME.text.light,\n    width: 30,\n  },\n  itemRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n    gap: 10,\n  },\n  itemInput: {\n    flex: 1,\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n  },\n  removeButton: {\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: THEME.danger,\n  },\n  addButton: {\n    backgroundColor: THEME.success,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  lootHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  itemInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n    flex: 1,\n  },\n  addedBy: {\n    color: THEME.text.light,\n    opacity: 0.6,\n    fontSize: 12,\n    marginTop: 4,\n  },\n});\n\nconst diceStyles = StyleSheet.create({\n  dicePanel: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15,\n  },\n  diceHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  diceTitle: {\n    color: THEME.text.light,\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  diceControls: {\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n    gap: 10,\n  },\n  controlsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  controlGroup: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  controlButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: 80,\n    alignItems: 'center',\n  },\n  controlActive: {\n    backgroundColor: THEME.accent,\n  },\n  modifierGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  modifierLabel: {\n    color: THEME.text.light,\n    fontSize: 14,\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center',\n  },\n  quantityGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  quantityLabel: {\n    color: THEME.text.light,\n    fontSize: 14,\n  },\n  quantityInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center',\n  },\n  diceGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    justifyContent: 'center',\n    marginBottom: 15,\n  },\n  diceButton: {\n    width: isSmallScreen ? 45 : 60,\n    height: isSmallScreen ? 45 : 60,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  diceButtonText: {\n    color: THEME.text.light,\n    fontSize: isSmallScreen ? 14 : 16,\n    fontWeight: 'bold',\n  },\n  historyContainer: {\n    backgroundColor: THEME.background.primary,\n    borderRadius: 8,\n    maxHeight: 200,\n  },\n  historyScroll: {\n    padding: 10,\n  },\n  historyItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.background.secondary,\n  },\n  historyLeft: {\n    flex: 1,\n  },\n  historyInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  historyDice: {\n    color: THEME.text.light,\n    opacity: 0.7,\n  },\n  historyRolls: {\n    color: THEME.text.light,\n    fontSize: 12,\n    opacity: 0.5,\n  },\n  historyTotal: {\n    color: THEME.accent,\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  clearButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n});\n\nconst statusStyles = StyleSheet.create({\n  effectsContainer: {\n    marginTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: THEME.accent + '40',\n    paddingTop: 15,\n  },\n  effectsTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  effectsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  effectButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: 80,\n  },\n  effectActive: {\n    backgroundColor: THEME.accent,\n  },\n  effectText: {\n    color: THEME.text.light,\n    fontSize: 12,\n  },\n  tokenEffects: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 2,\n    marginTop: 2,\n  },\n  effectIcon: {\n    fontSize: isSmallScreen ? 10 : 12,\n  },\n});\n\n// Create a helper function to save game state\nconst saveGameState = async () => {\n  if (firebaseRef.current) {\n    try {\n      await set(firebaseRef.current, {\n        tokens,\n        layers,\n        initiative,\n        inCombat,\n        currentTurn,\n        partyLoot,\n        characters,\n        settings: initialGameState.settings,\n        lastUpdate: Date.now()\n      });\n    } catch (error) {\n      console.error('Error saving game state:', error);\n      Alert.alert('Error', 'Failed to save game state');\n    }\n  }\n};\n\n// Add this component definition before the TokenModal component\nconst CharacterSheetModal = memo(({ visible, onClose, character, characters, onUpdate }) => {\n  const [editedCharacter, setEditedCharacter] = useState(() => ({\n    name: character?.name || '',\n    class: character?.class || '',\n    level: character?.level || 1,\n    owner: character?.owner || '',\n    proficiencyBonus: character?.proficiencyBonus || 2,\n    abilityScores: character?.abilityScores || {\n      STR: 10,\n      DEX: 10,\n      CON: 10,\n      INT: 10,\n      WIS: 10,\n      CHA: 10\n    },\n    proficientSkills: character?.proficientSkills || [],\n    currency: character?.currency || {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: character?.items || [],\n    inventory: character?.inventory || []\n  }));\n\n  useEffect(() => {\n    if (visible && character) {\n      setEditedCharacter({\n        name: character.name || '',\n        class: character.class || '',\n        level: character.level || 1,\n        owner: character.owner || '',\n        proficiencyBonus: character.proficiencyBonus || 2,\n        abilityScores: character.abilityScores || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: character.proficientSkills || [],\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: character.items || [],\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n\n  // Add error boundary\n  if (!character) {\n    console.error('No character data provided to CharacterSheetModal');\n    return null;\n  }\n\n  const calculateModifier = (score) => {\n    return Math.floor((score - 10) / 2);\n  };\n\n  const handleAbilityScoreChange = (ability, value) => {\n    const newScore = parseInt(value) || 0;\n    setEditedCharacter(prev => ({\n      ...prev,\n      abilityScores: {\n        ...prev.abilityScores,\n        [ability]: newScore\n      }\n    }));\n  };\n\n  const toggleProficiency = (skill) => {\n    setEditedCharacter(prev => ({\n      ...prev,\n      proficientSkills: prev.proficientSkills.includes(skill)\n        ? prev.proficientSkills.filter(s => s !== skill)\n        : [...prev.proficientSkills, skill]\n    }));\n  };\n\n  const getSkillModifier = (skill, ability) => {\n    const abilityMod = calculateModifier(editedCharacter.abilityScores[ability]);\n    const profBonus = editedCharacter.proficientSkills.includes(skill) ? editedCharacter.proficiencyBonus : 0;\n    return abilityMod + profBonus;\n  };\n\n  const handleSave = async () => {\n    try {\n      const updatedCharacter = {\n        ...character,\n        ...editedCharacter\n      };\n\n      onUpdate(updatedCharacter);\n    } catch (error) {\n      console.error('Error saving character:', error);\n      Alert.alert('Error', 'Failed to save character');\n    }\n  };\n\n  if (!visible) return null;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={additionalStyles.characterSheet}>\n          <TouchableOpacity \n            style={additionalStyles.closeButton}\n            onPress={onClose}\n          >\n            <Text style={additionalStyles.closeButtonText}>×</Text>\n          </TouchableOpacity>\n\n          <GestureScrollView>\n            {/* Basic Info */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Character Info</Text>\n              <TextInput\n                style={styles.input}\n                value={editedCharacter.name}\n                onChangeText={(text) => setEditedCharacter(prev => ({...prev, name: text}))}\n                placeholder=\"Character Name\"\n                placeholderTextColor={THEME.text.light + '80'}\n              />\n              <View style={{ flexDirection: 'row', gap: 10 }}>\n                <TextInput\n                  style={[styles.input, { flex: 1 }]}\n                  value={editedCharacter.class}\n                  onChangeText={(text) => setEditedCharacter(prev => ({...prev, class: text}))}\n                  placeholder=\"Class\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                />\n                <TextInput\n                  style={[styles.input, { flex: 1 }]}\n                  value={String(editedCharacter.level)}\n                  onChangeText={(text) => setEditedCharacter(prev => ({...prev, level: parseInt(text) || 1}))}\n                  placeholder=\"Level\"\n                  keyboardType=\"numeric\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                />\n              </View>\n            </View>\n\n            {/* Ability Scores */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Ability Scores</Text>\n              <View style={additionalStyles.abilityScores}>\n                {ABILITY_SCORES.map(ability => (\n                  <View key={ability} style={additionalStyles.abilityBox}>\n                    <Text style={additionalStyles.abilityLabel}>{ability}</Text>\n                    <TextInput\n                      style={additionalStyles.abilityScore}\n                      value={String(editedCharacter.abilityScores[ability])}\n                      onChangeText={(text) => handleAbilityScoreChange(ability, text)}\n                      keyboardType=\"numeric\"\n                      maxLength={2}\n                      selectTextOnFocus={true}\n                    />\n                    <Text style={additionalStyles.abilityMod}>\n                      {calculateModifier(editedCharacter.abilityScores[ability]) >= 0 ? '+' : ''}\n                      {calculateModifier(editedCharacter.abilityScores[ability])}\n                    </Text>\n                  </View>\n                ))}\n              </View>\n            </View>\n\n            {/* Skills */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Skills</Text>\n              <View style={additionalStyles.skillsList}>\n                {Object.entries(SKILLS).map(([ability, skills]) =>\n                  skills.map(skill => (\n                    <TouchableOpacity\n                      key={skill}\n                      style={additionalStyles.skillItem}\n                      onPress={() => toggleProficiency(skill)}\n                    >\n                      <View style={[\n                        additionalStyles.proficientDot,\n                        {\n                          backgroundColor: editedCharacter.proficientSkills.includes(skill)\n                            ? THEME.accent\n                            : THEME.background.secondary\n                        }\n                      ]} />\n                      <Text style={additionalStyles.skillName}>{skill}</Text>\n                      <Text style={additionalStyles.skillMod}>\n                        {getSkillModifier(skill, ability) >= 0 ? '+' : ''}\n                        {getSkillModifier(skill, ability)}\n                      </Text>\n                    </TouchableOpacity>\n                  ))\n                )}\n              </View>\n            </View>\n\n            {/* Inventory */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Inventory</Text>\n              \n              <View style={additionalStyles.lootSection}>\n                {/* Currency */}\n                {CURRENCY.map(currency => (\n                  <View key={currency} style={additionalStyles.currencyRow}>\n                    <Text style={additionalStyles.currencyLabel}>{currency}</Text>\n                    <TextInput\n                      style={additionalStyles.currencyInput}\n                      value={String(editedCharacter.currency[currency] || 0)}\n                      onChangeText={(text) => {\n                        const value = parseInt(text) || 0;\n                        setEditedCharacter(prev => ({\n                          ...prev,\n                          currency: {\n                            ...prev.currency,\n                            [currency]: value\n                          }\n                        }));\n                      }}\n                      keyboardType=\"numeric\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                  </View>\n                ))}\n              </View>\n\n              <View style={additionalStyles.lootSection}>\n                <View style={additionalStyles.lootHeader}>\n                  <Text style={additionalStyles.sectionTitle}>Items</Text>\n                  <TouchableOpacity\n                    style={additionalStyles.addButton}\n                    onPress={() => {\n                      setEditedCharacter(prev => ({\n                        ...prev,\n                        items: [...prev.items, { name: '', quantity: 1, notes: '', addedBy: character.name }]\n                      }));\n                    }}\n                  >\n                    <Text style={styles.buttonText}>Add Item</Text>\n                  </TouchableOpacity>\n                </View>\n\n                {editedCharacter.items.map((item, index) => (\n                  <View key={index} style={additionalStyles.itemRow}>\n                    <View style={additionalStyles.itemInfo}>\n                      <TextInput\n                        style={[additionalStyles.itemInput, { flex: 2 }]}\n                        value={item.name}\n                        onChangeText={(text) => {\n                          const newItems = [...editedCharacter.items];\n                          newItems[index] = { ...item, name: text };\n                          setEditedCharacter(prev => ({ ...prev, items: newItems }));\n                        }}\n                        placeholder=\"Item name\"\n                        placeholderTextColor={THEME.text.light + '80'}\n                      />\n                      <TextInput\n                        style={[additionalStyles.itemInput, { width: 60 }]}\n                        value={String(item.quantity)}\n                        onChangeText={(text) => {\n                          const newItems = [...editedCharacter.items];\n                          newItems[index] = { ...item, quantity: parseInt(text) || 1 };\n                          setEditedCharacter(prev => ({ ...prev, items: newItems }));\n                        }}\n                        keyboardType=\"numeric\"\n                        placeholder=\"Qty\"\n                        placeholderTextColor={THEME.text.light + '80'}\n                      />\n                      {item.addedBy === character.name && (\n                        <TouchableOpacity\n                          style={additionalStyles.removeButton}\n                          onPress={() => {\n                            setEditedCharacter(prev => ({\n                              ...prev,\n                              items: prev.items.filter((_, i) => i !== index)\n                            }));\n                          }}\n                        >\n                          <Text style={styles.buttonText}>×</Text>\n                        </TouchableOpacity>\n                      )}\n                    </View>\n                    <Text style={additionalStyles.addedBy}>Added by: {item.addedBy}</Text>\n                  </View>\n                ))}\n              </View>\n\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.success }]}\n                onPress={handleSave}\n              >\n                <Text style={styles.buttonText}>Save Changes</Text>\n              </TouchableOpacity>\n            </View>\n          </GestureScrollView>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Memoized Modal Components\nconst TokenModal = memo(({ \n  showTokenModal, \n  setShowTokenModal, \n  selectedToken, \n  setSelectedToken, \n  tokens, \n  firebaseRef, \n  initialGameState, \n  layers, \n  initiative, \n  inCombat, \n  currentTurn, \n  THEME \n}) => (\n  <Modal\n    visible={showTokenModal}\n    transparent={true}\n    animationType=\"fade\"\n    onRequestClose={() => setShowTokenModal(false)}\n  >\n    <Pressable \n      style={[styles.modalOverlay, { cursor: 'default' }]}\n      onPress={() => Keyboard.dismiss()}\n    >\n      <View style={styles.modalContent}>\n        <KeyboardAvoidingView \n          behavior={Platform.select({ ios: 'padding', android: 'height' })}\n          style={styles.modalContainer}\n          keyboardVerticalOffset={Platform.select({ ios: 64, android: 0 })}\n        >\n          <Pressable onPress={e => e.stopPropagation()}>\n            <Text style={styles.modalTitle}>Edit Token</Text>\n            <TextInput\n              style={styles.input}\n              value={selectedToken?.name}\n              onChangeText={(text) => {\n                setSelectedToken(prev => ({\n                  ...prev,\n                  name: text\n                }));\n              }}\n              placeholder=\"Token Name\"\n              placeholderTextColor={THEME.text.light + '80'}\n              blurOnSubmit={false}\n              autoComplete=\"off\"\n              spellCheck={false}\n              selectTextOnFocus={true}\n              enablesReturnKeyAutomatically={true}\n            />\n            \n            <View style={{ flexDirection: 'row', gap: 10, marginBottom: 10 }}>\n              <View style={{ flex: 1 }}>\n                <TextInput\n                  style={styles.input}\n                  value={String(selectedToken?.hp || '')}\n                  onChangeText={(text) => {\n                    const hp = parseInt(text) || 0;\n                    setSelectedToken(prev => ({\n                      ...prev,\n                      hp: Math.max(0, hp)\n                    }));\n                  }}\n                  keyboardType=\"numeric\"\n                  placeholder=\"Current HP\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                  blurOnSubmit={false}\n                  autoComplete=\"off\"\n                  selectTextOnFocus={true}\n                  enablesReturnKeyAutomatically={true}\n                />\n              </View>\n              <View style={{ flex: 1 }}>\n                <TextInput\n                  style={styles.input}\n                  value={String(selectedToken?.maxHp || '')}\n                  onChangeText={(text) => {\n                    const maxHp = parseInt(text) || 1;\n                    setSelectedToken(prev => ({\n                      ...prev,\n                      maxHp: Math.max(1, maxHp)\n                    }));\n                  }}\n                  keyboardType=\"numeric\"\n                  placeholder=\"Max HP\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                  blurOnSubmit={false}\n                  autoComplete=\"off\"\n                  selectTextOnFocus={true}\n                  enablesReturnKeyAutomatically={true}\n                />\n              </View>\n            </View>\n\n            <TextInput\n              style={styles.input}\n              value={String(selectedToken?.initiativeBonus || '0')}\n              onChangeText={(text) => {\n                setSelectedToken(prev => ({\n                  ...prev,\n                  initiativeBonus: parseInt(text) || 0\n                }));\n              }}\n              keyboardType=\"numeric\"\n              placeholder=\"Initiative Bonus\"\n              placeholderTextColor={THEME.text.light + '80'}\n              blurOnSubmit={false}\n              autoComplete=\"off\"\n              selectTextOnFocus={true}\n              enablesReturnKeyAutomatically={true}\n            />\n\n            <View style={statusStyles.effectsContainer}>\n              <Text style={statusStyles.effectsTitle}>Status Effects</Text>\n              <View style={statusStyles.effectsGrid}>\n                {STATUS_EFFECTS.map(effect => (\n                  <TouchableOpacity\n                    key={effect.id}\n                    style={[\n                      statusStyles.effectButton,\n                      selectedToken?.effects?.includes(effect.id) && statusStyles.effectActive\n                    ]}\n                    onPress={() => {\n                      setSelectedToken(prev => {\n                        const currentEffects = prev.effects || [];\n                        const newEffects = currentEffects.includes(effect.id)\n                          ? currentEffects.filter(e => e !== effect.id)\n                          : [...currentEffects, effect.id];\n                        return {\n                          ...prev,\n                          effects: newEffects\n                        };\n                      });\n                    }}\n                  >\n                    <Text style={statusStyles.effectText}>\n                      {effect.icon} {effect.name}\n                    </Text>\n                  </TouchableOpacity>\n                ))}\n              </View>\n            </View>\n\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.danger }]}\n                onPress={() => {\n                  if (firebaseRef.current && selectedToken) {\n                    const newTokens = { ...tokens };\n                    delete newTokens[selectedToken.position];\n                    set(firebaseRef.current, { \n                      ...initialGameState,\n                      tokens: newTokens,\n                      layers,\n                      initiative,\n                      inCombat,\n                      currentTurn\n                    });\n                    setShowTokenModal(false);\n                  }\n                }}\n              >\n                <Text style={styles.buttonText}>Delete</Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.success }]}\n                onPress={() => {\n                  if (firebaseRef.current && selectedToken) {\n                    const newTokens = {\n                      ...tokens,\n                      [selectedToken.position]: selectedToken\n                    };\n                    set(firebaseRef.current, {\n                      ...initialGameState,\n                      tokens: newTokens,\n                      layers,\n                      initiative,\n                      inCombat,\n                      currentTurn\n                    });\n                    setShowTokenModal(false);\n                  }\n                }}\n              >\n                <Text style={styles.buttonText}>Save</Text>\n              </TouchableOpacity>\n            </View>\n          </Pressable>\n        </KeyboardAvoidingView>\n      </View>\n    </Pressable>\n  </Modal>\n));\n\n// Update the RoomModal styles\nconst modalStyles = StyleSheet.create({\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000, // Add high z-index\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: '90%',\n    maxWidth: 400,\n    zIndex: 1001, // Even higher z-index\n  },\n});\n\n// Update the RoomModal component\nconst RoomModal = memo(({ \n  showRoomModal, \n  setShowRoomModal, \n  isConnected, \n  roomCode, \n  setRoomCode, \n  isJoining, \n  connectToRoom \n}) => (\n  <Modal\n    visible={showRoomModal}\n    transparent={true}\n    animationType=\"fade\"\n    onRequestClose={() => {}}\n    style={{ zIndex: 999 }} // Add z-index to Modal\n  >\n    <View style={[modalStyles.modalOverlay, { pointerEvents: 'auto' }]}>\n      <View style={modalStyles.modalContent}>\n        <Text style={styles.modalTitle}>Join Room</Text>\n        <TextInput\n          style={[styles.input, { marginBottom: 15, zIndex: 1002 }]} // Add z-index to input\n          value={roomCode}\n          onChangeText={(text) => {\n            setRoomCode(text.trim().toLowerCase());\n          }}\n          placeholder=\"Enter room code...\"\n          placeholderTextColor={THEME.text.light + '80'}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          editable={!isJoining}\n          autoFocus={true}\n          blurOnSubmit={false}\n        />\n        <TouchableOpacity\n          style={[\n            styles.modalButton,\n            { \n              backgroundColor: isJoining ? THEME.background.secondary : THEME.success,\n              width: '100%',\n              zIndex: 1002 // Add z-index to button\n            }\n          ]}\n          onPress={() => {\n            Keyboard.dismiss();\n            connectToRoom(roomCode);\n          }}\n          disabled={isJoining}\n        >\n          {isJoining ? (\n            <View style={styles.loadingButtonContent}>\n              <ActivityIndicator color={THEME.text.light} />\n              <Text style={[styles.buttonText, { marginLeft: 10 }]}>\n                Connecting...\n              </Text>\n            </View>\n          ) : (\n            <Text style={styles.buttonText}>Join Room</Text>\n          )}\n        </TouchableOpacity>\n      </View>\n    </View>\n  </Modal>\n));\n\nconst PartyLootModal = memo(({ visible, onClose, partyLoot, onUpdate, playerName }) => {\n  const [editedLoot, setEditedLoot] = useState({\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: []\n  });\n\n  useEffect(() => {\n    if (visible && partyLoot) {\n      setEditedLoot({\n        currency: partyLoot.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: partyLoot.items || []\n      });\n    }\n  }, [visible, partyLoot]);\n\n  if (!visible) return null;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={[styles.modalContent, { maxHeight: '90%' }]}>\n          <Text style={styles.modalTitle}>Party Loot</Text>\n          \n          <ScrollView>\n            {/* Currency Section */}\n            <View style={additionalStyles.lootSection}>\n              {CURRENCY.map(type => (\n                <View key={type} style={additionalStyles.currencyRow}>\n                  <Text style={additionalStyles.currencyLabel}>{type}</Text>\n                  <TextInput\n                    style={additionalStyles.currencyInput}\n                    value={String(editedLoot.currency[type] || 0)}\n                    onChangeText={(text) => {\n                      const value = parseInt(text) || 0;\n                      setEditedLoot(prev => ({\n                        ...prev,\n                        currency: {\n                          ...prev.currency,\n                          [type]: value\n                        }\n                      }));\n                    }}\n                    keyboardType=\"numeric\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                </View>\n              ))}\n            </View>\n\n            {/* Items Section */}\n            <View style={additionalStyles.lootSection}>\n              <View style={additionalStyles.lootHeader}>\n                <Text style={additionalStyles.sectionTitle}>Items</Text>\n                <TouchableOpacity\n                  style={additionalStyles.addButton}\n                  onPress={() => {\n                    setEditedLoot(prev => ({\n                      ...prev,\n                      items: [...prev.items, { \n                        id: Date.now().toString(),\n                        name: '',\n                        quantity: 1,\n                        addedBy: playerName \n                      }]\n                    }));\n                  }}\n                >\n                  <Text style={styles.buttonText}>Add Item</Text>\n                </TouchableOpacity>\n              </View>\n\n              {editedLoot.items.map((item, index) => (\n                <View key={item.id || index} style={additionalStyles.itemRow}>\n                  <TextInput\n                    style={[additionalStyles.itemInput, { flex: 2 }]}\n                    value={item.name}\n                    onChangeText={(text) => {\n                      const newItems = [...editedLoot.items];\n                      newItems[index] = { ...item, name: text };\n                      setEditedLoot(prev => ({ ...prev, items: newItems }));\n                    }}\n                    placeholder=\"Item name\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                  <TextInput\n                    style={[additionalStyles.itemInput, { width: 60 }]}\n                    value={String(item.quantity)}\n                    onChangeText={(text) => {\n                      const newItems = [...editedLoot.items];\n                      newItems[index] = { ...item, quantity: parseInt(text) || 1 };\n                      setEditedLoot(prev => ({ ...prev, items: newItems }));\n                    }}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Qty\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                  <TouchableOpacity\n                    style={additionalStyles.removeButton}\n                    onPress={() => {\n                      setEditedLoot(prev => ({\n                        ...prev,\n                        items: prev.items.filter((_, i) => i !== index)\n                      }));\n                    }}\n                  >\n                    <Text style={styles.buttonText}>×</Text>\n                  </TouchableOpacity>\n                </View>\n              ))}\n            </View>\n          </ScrollView>\n\n          <View style={styles.buttonRow}>\n            <TouchableOpacity\n              style={[styles.button, styles.closeButton]}\n              onPress={onClose}\n            >\n              <Text style={styles.buttonText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.button, { backgroundColor: THEME.success }]}\n              onPress={() => {\n                onUpdate(editedLoot);\n                onClose();\n              }}\n            >\n              <Text style={styles.buttonText}>Save Changes</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add this component definition before the App component\nconst GridZoomControls = memo(({ zoomLevel, setZoomLevel }) => {\n  const debouncedZoom = debounce((newZoom) => {\n    setZoomLevel(newZoom);\n  }, 100);\n\n  return (\n    <View style={styles.zoomControls}>\n      <TouchableOpacity\n        style={styles.zoomButton}\n        onPress={() => debouncedZoom(Math.max(0.5, zoomLevel - 0.1))}\n      >\n        <Text style={styles.buttonText}>-</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.zoomButton}\n        onPress={() => debouncedZoom(Math.min(2, zoomLevel + 0.1))}\n      >\n        <Text style={styles.buttonText}>+</Text>\n      </TouchableOpacity>\n    </View>\n  );\n});\n\n// Add InventoryModal component\nconst InventoryModal = memo(({ visible, onClose, character, onUpdate }) => {\n  const [editedInventory, setEditedInventory] = useState({\n    currency: character?.currency || {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    inventory: character?.inventory || []\n  });\n\n  useEffect(() => {\n    if (visible && character) {\n      setEditedInventory({\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n\n  if (!visible || !character) return null;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={additionalStyles.characterSheet}>\n          <TouchableOpacity \n            style={additionalStyles.closeButton}\n            onPress={onClose}\n          >\n            <Text style={additionalStyles.closeButtonText}>×</Text>\n          </TouchableOpacity>\n\n          <Text style={additionalStyles.sectionTitle}>{character.name}'s Inventory</Text>\n\n          <GestureScrollView>\n            <View style={additionalStyles.lootSection}>\n              {/* Currency */}\n              {CURRENCY.map(currency => (\n                <View key={currency} style={additionalStyles.currencyRow}>\n                  <Text style={additionalStyles.currencyLabel}>{currency}</Text>\n                  <TextInput\n                    style={additionalStyles.currencyInput}\n                    value={String(editedInventory.currency[currency] || 0)}\n                    onChangeText={(text) => {\n                      const value = parseInt(text) || 0;\n                      setEditedInventory(prev => ({\n                        ...prev,\n                        currency: {\n                          ...prev.currency,\n                          [currency]: value\n                        }\n                      }));\n                    }}\n                    keyboardType=\"numeric\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                </View>\n              ))}\n            </View>\n\n            <View style={additionalStyles.lootSection}>\n              <View style={additionalStyles.lootHeader}>\n                <Text style={additionalStyles.sectionTitle}>Items</Text>\n                <TouchableOpacity\n                  style={additionalStyles.addButton}\n                  onPress={() => {\n                    setEditedInventory(prev => ({\n                      ...prev,\n                      inventory: [...prev.inventory, { name: '', quantity: 1, notes: '', addedBy: character.name }]\n                    }));\n                  }}\n                >\n                  <Text style={styles.buttonText}>Add Item</Text>\n                </TouchableOpacity>\n              </View>\n\n              {editedInventory.inventory.map((item, index) => (\n                <View key={index} style={additionalStyles.itemRow}>\n                  <View style={additionalStyles.itemInfo}>\n                    <TextInput\n                      style={[additionalStyles.itemInput, { flex: 2 }]}\n                      value={item.name}\n                      onChangeText={(text) => {\n                        const newInventory = [...editedInventory.inventory];\n                        newInventory[index] = { ...item, name: text };\n                        setEditedInventory(prev => ({ ...prev, inventory: newInventory }));\n                      }}\n                      placeholder=\"Item name\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    <TextInput\n                      style={[additionalStyles.itemInput, { width: 60 }]}\n                      value={String(item.quantity)}\n                      onChangeText={(text) => {\n                        const newInventory = [...editedInventory.inventory];\n                        newInventory[index] = { ...item, quantity: parseInt(text) || 1 };\n                        setEditedInventory(prev => ({ ...prev, inventory: newInventory }));\n                      }}\n                      keyboardType=\"numeric\"\n                      placeholder=\"Qty\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    {item.addedBy === character.name && (\n                      <TouchableOpacity\n                        style={additionalStyles.removeButton}\n                        onPress={() => {\n                          setEditedInventory(prev => ({\n                            ...prev,\n                            inventory: prev.inventory.filter((_, i) => i !== index)\n                          }));\n                        }}\n                      >\n                        <Text style={styles.buttonText}>×</Text>\n                      </TouchableOpacity>\n                    )}\n                  </View>\n                  <Text style={additionalStyles.addedBy}>Added by: {item.addedBy}</Text>\n                </View>\n              ))}\n            </View>\n\n            <TouchableOpacity\n              style={[styles.modalButton, { backgroundColor: THEME.success }]}\n              onPress={() => {\n                onUpdate({\n                  ...character,\n                  currency: editedInventory.currency,\n                  inventory: editedInventory.inventory\n                });\n                onClose();\n              }}\n            >\n              <Text style={styles.buttonText}>Save Changes</Text>\n            </TouchableOpacity>\n          </GestureScrollView>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add PlayerNameModal component\nconst PlayerNameModal = memo(({ visible, onSubmit }) => {\n  const [name, setName] = useState('');\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={() => {}}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Enter Your Name</Text>\n          <TextInput\n            style={styles.input}\n            value={name}\n            onChangeText={setName}\n            placeholder=\"Your name\"\n            placeholderTextColor={THEME.text.light + '80'}\n            autoCapitalize=\"words\"\n          />\n          <TouchableOpacity\n            style={[styles.modalButton, { \n              backgroundColor: THEME.success,\n              width: '100%',\n              marginTop: 10\n            }]}\n            onPress={() => onSubmit(name)}\n            disabled={!name.trim()}\n          >\n            <Text style={styles.buttonText}>Continue</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add to styles\nconst viewerStyles = StyleSheet.create({\n  viewersList: {\n    marginTop: 15,\n    padding: 10,\n    backgroundColor: THEME.background.primary,\n    borderRadius: 5,\n  },\n  viewersTitle: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  viewerName: {\n    color: THEME.text.light,\n    opacity: 0.8,\n    fontSize: 12,\n    marginBottom: 2,\n  },\n});\n\n// Add this new component near the top with other components\nconst DiceResultOverlay = memo(({ result, onClose }) => {\n  useEffect(() => {\n    const timer = setTimeout(onClose, 2000); // Auto-hide after 2 seconds\n    return () => clearTimeout(timer);\n  }, [onClose]);\n\n  if (!result) return null;\n\n  return (\n    <View style={overlayStyles.container}>\n      <View style={overlayStyles.content}>\n        <Text style={overlayStyles.diceInfo}>\n          {result.dice}\n          {result.modifier ? ` + ${result.modifier}` : ''}\n          {result.rollType === 'advantage' ? ' (Adv)' : \n           result.rollType === 'disadvantage' ? ' (Dis)' : ''}\n        </Text>\n        {result.individualTotals && result.individualTotals.length > 1 && (\n          <Text style={overlayStyles.rolls}>\n            [{result.individualTotals.join(', ')}]\n          </Text>\n        )}\n        <Text style={overlayStyles.total}>{result.total}</Text>\n      </View>\n    </View>\n  );\n});\n\n// Add these styles\nconst overlayStyles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n  content: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    alignItems: 'center',\n    minWidth: 150,\n  },\n  diceInfo: {\n    color: THEME.text.light,\n    fontSize: 18,\n    marginBottom: 5,\n  },\n  rolls: {\n    color: THEME.text.light,\n    opacity: 0.7,\n    marginBottom: 5,\n  },\n  total: {\n    color: THEME.accent,\n    fontSize: 32,\n    fontWeight: 'bold',\n  },\n});\n\nexport default function App() {\n  // State declarations\n  const [roomCode, setRoomCode] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isJoining, setIsJoining] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [showRoomModal, setShowRoomModal] = useState(true);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [zoomLevel, setZoomLevel] = useState(isSmallScreen ? 0.8 : 1);\n  const [tokens, setTokens] = useState({});\n  const [currentColor, setCurrentColor] = useState(COLORS[0]);\n  const [initiative, setInitiative] = useState([]);\n  const [inCombat, setInCombat] = useState(false);\n  const [currentTurn, setCurrentTurn] = useState(0);\n  const [layers, setLayers] = useState(initialGameState.layers);\n  const [diceHistory, setDiceHistory] = useState([]);\n  const [advantage, setAdvantage] = useState(false);\n  const [modifier, setModifier] = useState(0);\n  const [selectedToken, setSelectedToken] = useState(null);\n  const [showTokenModal, setShowTokenModal] = useState(false);\n  const [partyLoot, setPartyLoot] = useState({\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: [],\n    currentViewer: null\n  });\n  const [showPartyLoot, setShowPartyLoot] = useState(false);\n  const [diceQuantity, setDiceQuantity] = useState(1);\n  const [characters, setCharacters] = useState([]);\n  const [showCharacterSheet, setShowCharacterSheet] = useState(false);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [showInventory, setShowInventory] = useState(false);\n  const [playerName, setPlayerName] = useState('');\n  const [showPlayerNameModal, setShowPlayerNameModal] = useState(true);\n  const [rollType, setRollType] = useState('normal'); // 'normal', 'advantage', or 'disadvantage'\n  const [currentRollResult, setCurrentRollResult] = useState(null);\n\n  // Refs\n  const firebaseRef = useRef(null);\n  const unsubscribeRef = useRef(null);\n\n  // Helper Functions\n  const handleDisconnect = useCallback(() => {\n    try {\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n        unsubscribeRef.current = null;\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n        firebaseRef.current = null;\n      }\n\n      // Reset room-specific state\n      setIsConnected(false);\n      setRoomCode('');\n      setTokens({});\n      setLayers(initialGameState.layers);\n      setInitiative([]);\n      setInCombat(false);\n      setCurrentTurn(0);\n      setDiceHistory([]);\n      setAdvantage(false);\n      setModifier(0);\n      setSelectedToken(null);\n      setShowTokenModal(false);\n      setPartyLoot(initialGameState.partyLoot);\n      setZoomLevel(isSmallScreen ? 0.8 : 1);\n      // Don't clear characters or player name\n      \n    } catch (error) {\n      console.error('Error during disconnect:', error);\n      Alert.alert('Error', 'Failed to leave room properly. Please try again.');\n    }\n  }, []);\n\n  const handleInitiativeRoll = useCallback(() => {\n    if (!tokens || Object.keys(tokens).length === 0) {\n      Alert.alert('Error', 'No tokens on the board');\n      return;\n    }\n\n    const rolls = Object.entries(tokens).map(([position, token]) => {\n      const roll = Math.floor(Math.random() * 20) + 1;\n      const initiative = roll + (token.initiativeBonus || 0);\n      return {\n        position,\n        initiative,\n        details: `${token.name} (${initiative})`\n      };\n    });\n\n    rolls.sort((a, b) => b.initiative - a.initiative);\n    \n    if (firebaseRef.current) {\n      set(firebaseRef.current, {\n        ...initialGameState,\n        tokens,\n        layers,\n        initiative: rolls,\n        inCombat: true,\n        currentTurn: 0\n      });\n    }\n\n    setInitiative(rolls);\n    setInCombat(true);\n    setCurrentTurn(0);\n  }, [tokens, layers]);\n\n  const rollDice = useCallback((sides) => {\n    const allRolls = [];\n    \n    // Roll for each die in quantity\n    for (let d = 0; d < diceQuantity; d++) {\n      const rolls = [];\n      const numRolls = rollType !== 'normal' ? 2 : 1;\n      \n      // Roll with advantage/disadvantage if enabled\n      for (let i = 0; i < numRolls; i++) {\n        rolls.push(Math.floor(Math.random() * sides) + 1);\n      }\n      \n      const finalRoll = rollType === 'advantage' \n        ? Math.max(...rolls) \n        : rollType === 'disadvantage'\n          ? Math.min(...rolls)\n          : rolls[0];\n\n      allRolls.push({\n        rolls,\n        total: finalRoll\n      });\n    }\n    \n    // Calculate grand total including modifier\n    const grandTotal = allRolls.reduce((sum, roll) => sum + roll.total, 0) + modifier;\n    \n    const newResult = {\n      dice: `${diceQuantity}d${sides}`,\n      rolls: allRolls.map(r => r.rolls).flat(),\n      individualTotals: allRolls.map(r => r.total),\n      modifier,\n      rollType,\n      total: grandTotal,\n      timestamp: Date.now()\n    };\n    \n    setDiceHistory(prev => [newResult, ...prev.slice(0, 49)]);\n    Vibration.vibrate(50);\n  }, [rollType, modifier, diceQuantity]);\n\n  const handleCellPress = useCallback(async (row, col) => {\n    if (!firebaseRef.current) return;\n    \n    try {\n      const position = `${row}-${col}`;\n      const newTokens = { ...tokens };\n      \n      if (tokens[position]) {\n        delete newTokens[position];\n      } else {\n        newTokens[position] = {\n          name: `Token ${Object.keys(tokens).length + 1}`,\n          color: currentColor,\n          hp: 10,\n          maxHp: 10,\n          initiativeBonus: 0,\n          effects: [],\n          position\n        };\n      }\n\n      // Update Firebase first\n      await set(firebaseRef.current, {\n        tokens: newTokens,\n        layers,\n        initiative,\n        inCombat,\n        currentTurn,\n        partyLoot,\n        lastUpdate: Date.now()\n      });\n\n      // Then update local state\n      setTokens(newTokens);\n\n    } catch (error) {\n      console.error('Error updating tokens:', error);\n      Alert.alert('Error', 'Failed to update token');\n    }\n  }, [tokens, currentColor, layers, initiative, inCombat, currentTurn, partyLoot]);\n\n  // Update the savePlayerData function\n  const savePlayerData = useCallback(async (updatedCharacters) => {\n    if (!playerName || !roomCode) return;\n    \n    try {\n      // Save to both the room and a separate players collection\n      const roomPlayerRef = ref(database, `rooms/${roomCode}/players/${playerName}`);\n      const globalPlayerRef = ref(database, `players/${playerName}`);\n      \n      const playerData = {\n        characters: updatedCharacters,\n        lastUpdate: Date.now()\n      };\n\n      // Update both locations\n      await Promise.all([\n        set(roomPlayerRef, playerData),\n        set(globalPlayerRef, playerData)\n      ]);\n    } catch (error) {\n      console.error('Error saving player data:', error);\n      Alert.alert('Error', 'Failed to save character data');\n    }\n  }, [playerName, roomCode]);\n\n  // Update the connectToRoom function\n  const connectToRoom = useCallback(async (code) => {\n    if (!code.trim() || !playerName) {\n      Alert.alert(\"Error\", \"Please enter a room code and player name\");\n      return;\n    }\n\n    setIsJoining(true);\n    setIsLoading(true);\n\n    try {\n      // First try to load player's global data\n      const globalPlayerRef = ref(database, `players/${playerName}`);\n      const playerSnapshot = await get(globalPlayerRef);\n      if (playerSnapshot.exists()) {\n        const playerData = playerSnapshot.val();\n        setCharacters(playerData.characters || []);\n      }\n\n      const gameRef = ref(database, `rooms/${code}`);\n      firebaseRef.current = gameRef;\n\n      // Check if room exists\n      const snapshot = await get(gameRef);\n      if (!snapshot.exists()) {\n        await set(gameRef, initialGameState);\n      }\n\n      // Set up real-time listener\n      const unsubscribe = onValue(gameRef, (snapshot) => {\n        const data = snapshot.val();\n        if (data) {\n          setTokens(data.tokens || {});\n          setLayers(data.layers || initialGameState.layers);\n          setInitiative(data.initiative || []);\n          setInCombat(data.inCombat || false);\n          setCurrentTurn(data.currentTurn || 0);\n          setPartyLoot(data.partyLoot || initialGameState.partyLoot);\n          \n          // Update characters from room data if they exist\n          if (data.players && data.players[playerName]) {\n            setCharacters(data.players[playerName].characters || []);\n          }\n        }\n      });\n\n      unsubscribeRef.current = unsubscribe;\n      setRoomCode(code);\n      setShowRoomModal(false);\n      setIsConnected(true);\n\n    } catch (error) {\n      console.error('Connection error:', error);\n      Alert.alert(\"Error\", \"Failed to join room. Please try again.\");\n      setIsConnected(false);\n    } finally {\n      setIsJoining(false);\n      setIsLoading(false);\n    }\n  }, [playerName]);\n\n  // Effects\n  useEffect(() => {\n    const handleOffline = () => {\n      Alert.alert(\n        'Connection Lost',\n        'Please check your internet connection',\n        [{ text: 'OK' }]\n      );\n    };\n\n    window.addEventListener('offline', handleOffline);\n    return () => {\n      window.removeEventListener('offline', handleOffline);\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n      }\n    };\n  }, []);\n\n  // Add to styles\n  const layoutStyles = {\n    sidePanel: {\n      backgroundColor: THEME.background.panel,\n      padding: 15,\n      borderRadius: 10,\n      marginBottom: 15,\n      width: '100%',\n    },\n    sidePanelTitle: {\n      color: THEME.text.light,\n      fontSize: 18,\n      fontWeight: 'bold',\n      marginBottom: 10,\n    },\n    buttonRow: {\n      flexDirection: 'row',\n      gap: 10,\n      marginBottom: 10,\n    },\n    panelButton: {\n      backgroundColor: THEME.background.primary,\n      padding: 10,\n      borderRadius: 5,\n      alignItems: 'center',\n      flex: 1,\n    },\n    panelButtonText: {\n      color: THEME.text.light,\n      fontWeight: 'bold',\n    },\n    characterItem: {\n      backgroundColor: THEME.background.primary,\n      padding: 10,\n      borderRadius: 5,\n      marginBottom: 8,\n    },\n    characterInfo: {\n      marginBottom: 5,\n    },\n    characterName: {\n      color: THEME.text.light,\n      fontSize: 16,\n      fontWeight: 'bold',\n    },\n    characterDetails: {\n      color: THEME.text.light + '80',\n      fontSize: 12,\n    },\n    characterButtons: {\n      flexDirection: 'row',\n      gap: 8,\n    },\n    characterButton: {\n      padding: 8,\n      borderRadius: 5,\n      minWidth: 60,\n      alignItems: 'center',\n    },\n    characterButtonText: {\n      color: THEME.text.light,\n      fontSize: 12,\n      fontWeight: 'bold',\n    },\n  };\n\n  // Main render return\n  return (\n    <SafeAreaView style={[styles.container, isDarkMode && styles.darkMode]}>\n      <View style={styles.container}>\n        {/* Modals stay at the top level */}\n        <TokenModal \n          showTokenModal={showTokenModal}\n          setShowTokenModal={setShowTokenModal}\n          selectedToken={selectedToken}\n          setSelectedToken={setSelectedToken}\n          tokens={tokens}\n          firebaseRef={firebaseRef}\n          initialGameState={initialGameState}\n          layers={layers}\n          initiative={initiative}\n          inCombat={inCombat}\n          currentTurn={currentTurn}\n          THEME={THEME}\n        />\n        \n        <RoomModal \n          showRoomModal={showRoomModal}\n          setShowRoomModal={setShowRoomModal}\n          isConnected={isConnected}\n          roomCode={roomCode}\n          setRoomCode={setRoomCode}\n          isJoining={isJoining}\n          connectToRoom={connectToRoom}\n        />\n\n        <PlayerNameModal\n          visible={showPlayerNameModal && !playerName}\n          onSubmit={(name) => {\n            setPlayerName(name);\n            setShowPlayerNameModal(false);\n            setIsConnected(true);\n          }}\n        />\n\n        <PartyLootModal\n          visible={showPartyLoot}\n          onClose={() => setShowPartyLoot(false)}\n          partyLoot={partyLoot}\n          playerName={playerName}\n          onUpdate={(updatedLoot) => {\n            setPartyLoot(updatedLoot);\n            if (firebaseRef.current) {\n              set(firebaseRef.current, {\n                ...initialGameState,\n                tokens,\n                layers,\n                initiative,\n                inCombat,\n                currentTurn,\n                partyLoot: updatedLoot\n              });\n            }\n          }}\n        />\n\n        <CharacterSheetModal\n          visible={showCharacterSheet}\n          onClose={() => setShowCharacterSheet(false)}\n          character={selectedCharacter || {\n            name: '',\n            class: '',\n            level: 1,\n            owner: playerName,\n            proficiencyBonus: 2,\n            abilityScores: {\n              STR: 10,\n              DEX: 10,\n              CON: 10,\n              INT: 10,\n              WIS: 10,\n              CHA: 10\n            },\n            proficientSkills: [],\n            currency: {\n              CP: 0,\n              SP: 0,\n              EP: 0,\n              GP: 0,\n              PP: 0\n            },\n            items: [],\n            inventory: []\n          }}\n          characters={characters}\n          onUpdate={async (updatedCharacter) => {\n            try {\n              if (!updatedCharacter) {\n                throw new Error('No character data to save');\n              }\n\n              // Create new array with updated character\n              const newCharacters = selectedCharacter\n                ? characters.map(char => \n                    char.name === selectedCharacter.name ? updatedCharacter : char\n                  )\n                : [...characters, updatedCharacter];\n              \n              // Update local state first\n              setCharacters(newCharacters);\n\n              // Save to Firebase\n              const playerRef = ref(database, `players/${playerName}`);\n              await set(playerRef, {\n                characters: newCharacters,\n                lastUpdate: Date.now()\n              });\n\n              // Also save to room data\n              if (firebaseRef.current) {\n                const roomPlayerRef = ref(database, `rooms/${roomCode}/players/${playerName}`);\n                await set(roomPlayerRef, {\n                  characters: newCharacters,\n                  lastUpdate: Date.now()\n                });\n              }\n\n              setShowCharacterSheet(false);\n              \n            } catch (error) {\n              console.error('Error saving character:', error);\n              Alert.alert('Error', 'Failed to save character');\n            }\n          }}\n        />\n\n        <InventoryModal\n          visible={showInventory}\n          onClose={() => setShowInventory(false)}\n          character={selectedCharacter}\n          onUpdate={async (updatedCharacter) => {\n            try {\n              const newCharacters = characters.map(char => \n                char.name === selectedCharacter.name ? updatedCharacter : char\n              );\n              \n              setCharacters(newCharacters);\n              await savePlayerData(newCharacters);\n              setShowInventory(false);\n            } catch (error) {\n              console.error('Error saving inventory:', error);\n              Alert.alert('Error', 'Failed to save inventory');\n            }\n          }}\n        />\n\n        {!isConnected ? (\n          <View style={styles.loadingContainer}>\n            {isLoading ? (\n              <View style={{ alignItems: 'center' }}>\n                <ActivityIndicator size=\"large\" color={THEME.accent} />\n                <Text style={[styles.loadingText, { marginTop: 20 }]}>\n                  Connecting to room...\n                </Text>\n              </View>\n            ) : (\n              <Text style={styles.loadingText}>\n                Enter a room code to begin\n              </Text>\n            )}\n          </View>\n        ) : (\n          <>\n            <View style={styles.header}>\n              <Text style={styles.title}>D&D Combat Tracker</Text>\n              <ScrollView \n                horizontal={isSmallScreen} \n                showsHorizontalScrollIndicator={false}\n                contentContainerStyle={styles.controls}\n              >\n                <TouchableOpacity \n                  style={[styles.controlButton, { backgroundColor: THEME.primary }]}\n                  onPress={() => setShowRoomModal(true)}\n                >\n                  <Text style={styles.buttonText}>Room: {roomCode}</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  style={[styles.controlButton, { backgroundColor: THEME.primary }]}\n                  onPress={handleInitiativeRoll}\n                >\n                  <Text style={styles.buttonText}>Roll Initiative</Text>\n                </TouchableOpacity>\n\n                {inCombat && (\n                  <>\n                    <TouchableOpacity\n                      style={[styles.controlButton, { backgroundColor: THEME.success }]}\n                      onPress={() => {\n                        const nextTurn = (currentTurn + 1) % initiative.length;\n                        setCurrentTurn(nextTurn);\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, {\n                            ...initialGameState,\n                            tokens,\n                            layers,\n                            initiative,\n                            inCombat: true,\n                            currentTurn: nextTurn\n                          });\n                        }\n                      }}\n                    >\n                      <Text style={styles.buttonText}>Next Turn</Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                      style={[styles.controlButton, { backgroundColor: THEME.danger }]}\n                      onPress={() => {\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, {\n                            ...initialGameState,\n                            tokens,\n                            layers,\n                            initiative: [],\n                            inCombat: false,\n                            currentTurn: 0\n                          });\n                        }\n                        setInitiative([]);\n                        setInCombat(false);\n                        setCurrentTurn(0);\n                      }}\n                    >\n                      <Text style={styles.buttonText}>End Combat</Text>\n                    </TouchableOpacity>\n                  </>\n                )}\n\n                <TouchableOpacity\n                  style={[styles.controlButton, { backgroundColor: THEME.danger }]}\n                  onPress={() => {\n                    Alert.alert(\n                      \"Leave Room\",\n                      \"Are you sure you want to leave this room?\",\n                      [\n                        { text: \"Cancel\", style: \"cancel\" },\n                        { \n                          text: \"Leave\", \n                          style: \"destructive\",\n                          onPress: () => {\n                            // Disconnect from Firebase\n                            if (unsubscribeRef.current) {\n                              unsubscribeRef.current();\n                              unsubscribeRef.current = null;\n                            }\n                            if (firebaseRef.current) {\n                              off(firebaseRef.current);\n                              firebaseRef.current = null;\n                            }\n\n                            // Reset state\n                            setIsConnected(false);\n                            setRoomCode('');\n                            setTokens({});\n                            setInitiative([]);\n                            setInCombat(false);\n                            setCurrentTurn(0);\n                            setPartyLoot(initialGameState.partyLoot);\n                            setShowRoomModal(true);\n                            setShowPlayerNameModal(true);\n                          }\n                        }\n                      ]\n                    );\n                  }}\n                >\n                  <Text style={styles.buttonText}>Leave Room</Text>\n                </TouchableOpacity>\n              </ScrollView>\n            </View>\n            <ScrollView style={styles.content}>\n              <View style={styles.mainArea}>\n                {/* Grid Section */}\n                <View style={styles.gridSection}>\n                  <ScrollView \n                    horizontal \n                    contentContainerStyle={{ minWidth: '100%' }}\n                  >\n                    <ScrollView>\n                      <View style={[\n                        styles.gridContainer,\n                        { transform: [{ scale: zoomLevel }] }\n                      ]}>\n                        {/* Color Picker */}\n                        <View style={styles.colorPicker}>\n                          {COLORS.map(color => (\n                            <TouchableOpacity\n                              key={color}\n                              style={[\n                                styles.colorButton,\n                                { backgroundColor: color },\n                                color === currentColor && styles.selectedColor\n                              ]}\n                              onPress={() => setCurrentColor(color)}\n                            />\n                          ))}\n                        </View>\n\n                        {/* Grid */}\n                        {Array.from({ length: GRID_SIZE }).map((_, row) => (\n                          <View key={row} style={styles.row}>\n                            {Array.from({ length: GRID_SIZE }).map((_, col) => {\n                              const position = `${row}-${col}`;\n                              const token = tokens[position];\n                              const isCurrentTurn = inCombat && \n                                initiative[currentTurn]?.position === position;\n\n                              return (\n                                <TouchableOpacity\n                                  key={col}\n                                  style={[\n                                    styles.cell,\n                                    token && { backgroundColor: token.color },\n                                    isCurrentTurn && styles.currentTurn\n                                  ]}\n                                  onPress={() => handleCellPress(row, col)}\n                                  onLongPress={() => {\n                                    if (token) {\n                                      setSelectedToken({ ...token, position });\n                                      setShowTokenModal(true);\n                                    }\n                                  }}\n                                >\n                                  {token && (\n                                    <View style={styles.tokenContent}>\n                                      <Text style={[\n                                        styles.tokenText,\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\n                                      ]} numberOfLines={1}>\n                                        {token.name}\n                                      </Text>\n                                      <Text style={[\n                                        styles.tokenHp,\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\n                                      ]}>\n                                        {token.hp}/{token.maxHp}\n                                      </Text>\n                                      {token.effects && token.effects.length > 0 && (\n                                        <View style={statusStyles.tokenEffects}>\n                                          {token.effects.map(effect => {\n                                            const statusEffect = STATUS_EFFECTS.find(e => e.id === effect);\n                                            return statusEffect ? (\n                                              <Text key={effect} style={statusStyles.effectIcon}>\n                                                {statusEffect.icon}\n                                              </Text>\n                                            ) : null;\n                                          })}\n                                        </View>\n                                      )}\n                                    </View>\n                                  )}\n                                </TouchableOpacity>\n                              );\n                            })}\n                          </View>\n                        ))}\n                      </View>\n                    </ScrollView>\n                  </ScrollView>\n                  <GridZoomControls \n                    zoomLevel={zoomLevel}\n                    setZoomLevel={setZoomLevel}\n                  />\n                </View>\n\n                {/* Sidebar */}\n                <View style={styles.sidebar}>\n                  {/* Character Management Panel */}\n                  <View style={layoutStyles.sidePanel}>\n                    <Text style={layoutStyles.sidePanelTitle}>Character Management</Text>\n                    <View style={layoutStyles.buttonRow}>\n                      <TouchableOpacity\n                        style={layoutStyles.panelButton}\n                        onPress={() => {\n                          setSelectedCharacter(null);\n                          setShowCharacterSheet(true);\n                        }}\n                      >\n                        <Text style={layoutStyles.panelButtonText}>New Character</Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={layoutStyles.panelButton}\n                        onPress={() => setShowPartyLoot(true)}\n                      >\n                        <Text style={layoutStyles.panelButtonText}>Party Loot</Text>\n                      </TouchableOpacity>\n                    </View>\n\n                    {/* Character List */}\n                    <ScrollView style={{ maxHeight: 200 }}>\n                      {characters\n                        .filter(char => char.owner === playerName)\n                        .map((char, index) => (\n                          <View key={index} style={[layoutStyles.characterItem, { marginBottom: 8 }]}>\n                            <View style={layoutStyles.characterInfo}>\n                              <Text style={layoutStyles.characterName}>{char.name}</Text>\n                              <Text style={layoutStyles.characterDetails}>\n                                Level {char.level} {char.class}\n                              </Text>\n                            </View>\n                            <View style={layoutStyles.characterButtons}>\n                              <TouchableOpacity\n                                style={[layoutStyles.characterButton, { backgroundColor: THEME.accent }]}\n                                onPress={() => {\n                                  setSelectedCharacter(char);\n                                  setShowCharacterSheet(true);\n                                }}\n                              >\n                                <Text style={layoutStyles.characterButtonText}>Sheet</Text>\n                              </TouchableOpacity>\n                              <TouchableOpacity\n                                style={[layoutStyles.characterButton, { backgroundColor: THEME.success }]}\n                                onPress={() => {\n                                  setSelectedCharacter(char);\n                                  setShowInventory(true);\n                                }}\n                              >\n                                <Text style={layoutStyles.characterButtonText}>Loot</Text>\n                              </TouchableOpacity>\n                            </View>\n                          </View>\n                        ))}\n                    </ScrollView>\n                  </View>\n\n                  {/* Dice Roller Panel */}\n                  <View style={diceStyles.dicePanel}>\n                    <Text style={diceStyles.diceTitle}>Dice Roller</Text>\n\n                    <View style={diceStyles.diceControls}>\n                      <View style={diceStyles.controlsRow}>\n                        <View style={diceStyles.controlGroup}>\n                          <TouchableOpacity\n                            style={[\n                              diceStyles.controlButton,\n                              rollType === 'advantage' && diceStyles.controlActive,\n                              rollType === 'advantage' && { backgroundColor: THEME.success }\n                            ]}\n                            onPress={() => setRollType(current => \n                              current === 'advantage' ? 'normal' : 'advantage'\n                            )}\n                          >\n                            <Text style={styles.buttonText}>Advantage</Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={[\n                              diceStyles.controlButton,\n                              rollType === 'disadvantage' && diceStyles.controlActive,\n                              rollType === 'disadvantage' && { backgroundColor: THEME.danger }\n                            ]}\n                            onPress={() => setRollType(current => \n                              current === 'disadvantage' ? 'normal' : 'disadvantage'\n                            )}\n                          >\n                            <Text style={styles.buttonText}>Disadvantage</Text>\n                          </TouchableOpacity>\n                        </View>\n                      </View>\n                      \n                      <View style={diceStyles.controlsRow}>\n                        <View style={diceStyles.modifierGroup}>\n                          <Text style={diceStyles.modifierLabel}>Modifier</Text>\n                          <TextInput\n                            style={diceStyles.modifierInput}\n                            value={String(modifier)}\n                            onChangeText={text => {\n                              const num = parseInt(text) || 0;\n                              setModifier(num);\n                            }}\n                            keyboardType=\"numeric\"\n                            selectTextOnFocus={true}\n                          />\n                        </View>\n                        <View style={diceStyles.quantityGroup}>\n                          <Text style={diceStyles.quantityLabel}>Quantity</Text>\n                          <TextInput\n                            style={diceStyles.quantityInput}\n                            value={String(diceQuantity)}\n                            onChangeText={text => {\n                              const num = parseInt(text) || 1;\n                              setDiceQuantity(Math.max(1, Math.min(num, 100)));\n                            }}\n                            keyboardType=\"numeric\"\n                            selectTextOnFocus={true}\n                          />\n                        </View>\n                      </View>\n                    </View>\n\n                    <View style={diceStyles.diceGrid}>\n                      {DICE_TYPES.map(({ sides, color }) => (\n                        <TouchableOpacity\n                          key={sides}\n                          style={[diceStyles.diceButton, { backgroundColor: color }]}\n                          onPress={() => {\n                            const allRolls = Array.from({ length: diceQuantity }, () => \n                              Math.floor(Math.random() * sides) + 1\n                            );\n\n                            const finalRolls = allRolls.map(roll => {\n                              if (rollType !== 'normal') {\n                                const secondRoll = Math.floor(Math.random() * sides) + 1;\n                                return rollType === 'advantage'\n                                  ? Math.max(roll, secondRoll)\n                                  : Math.min(roll, secondRoll);\n                              }\n                              return roll;\n                            });\n\n                            const total = finalRolls.reduce((sum, roll) => sum + roll, 0) + modifier;\n\n                            const newResult = {\n                              dice: `${diceQuantity}d${sides}`,\n                              rolls: allRolls,\n                              individualTotals: finalRolls,\n                              modifier,\n                              rollType,\n                              total: total,\n                              timestamp: Date.now()\n                            };\n                            \n                            setCurrentRollResult(newResult);\n                            Vibration.vibrate(50);\n                          }}\n                        >\n                          <Text style={diceStyles.diceButtonText}>d{sides}</Text>\n                        </TouchableOpacity>\n                      ))}\n                    </View>\n                  </View>\n\n                  {/* Initiative Panel */}\n                  {inCombat && initiative.length > 0 && (\n                    <View style={styles.initiativeList}>\n                      <Text style={styles.boxTitle}>Initiative Order</Text>\n                      <ScrollView style={styles.initiativeScroll}>\n                        {initiative.map((item, index) => (\n                          <View \n                            key={item.position}\n                            style={[\n                              styles.initiativeItem,\n                              index === currentTurn && styles.currentInitiative\n                            ]}\n                          >\n                            <Text style={[\n                              styles.initiativeText,\n                              index === currentTurn && styles.currentInitiativeText\n                            ]}>\n                              {item.details}\n                            </Text>\n                          </View>\n                        ))}\n                      </ScrollView>\n                    </View>\n                  )}\n                </View>\n              </View>\n            </ScrollView>\n          </>\n        )}\n      </View>\n\n      {/* Add the overlay component at the root level of your app */}\n      <DiceResultOverlay \n        result={currentRollResult}\n        onClose={() => setCurrentRollResult(null)}\n      />\n    </SafeAreaView>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}