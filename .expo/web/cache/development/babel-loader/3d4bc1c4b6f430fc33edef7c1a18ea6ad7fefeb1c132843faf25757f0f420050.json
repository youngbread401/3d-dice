{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useCallback, useEffect, useRef, memo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue, set, get, off } from 'firebase/database';\nimport { debounce } from 'lodash';\nimport { ScrollView as GestureScrollView } from 'react-native-gesture-handler';\nimport { DiceRoller } from \"./components/DiceModel\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBSy8ia6vKnq95_gbO7lnohVbyAQzqBtk4\",\n  authDomain: \"dndcombattracker-572b0.firebaseapp.com\",\n  databaseURL: \"https://dndcombattracker-572b0-default-rtdb.firebaseio.com\",\n  projectId: \"dndcombattracker-572b0\",\n  storageBucket: \"dndcombattracker-572b0.firebasestorage.app\",\n  messagingSenderId: \"812186225431\",\n  appId: \"1:812186225431:web:8da48e238d10db01d14552\"\n};\nvar app = initializeApp(firebaseConfig);\nvar database = getDatabase(app);\nvar LETTERS = Array.from({\n  length: 26\n}, function (_, i) {\n  return String.fromCharCode(65 + i);\n});\nvar COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f', '#9b59b6', '#1abc9c', '#e67e22', '#ffffff'];\nvar GRID_SIZE = 10;\nvar ABILITY_SCORES = ['STR', 'DEX', 'CON', 'INT', 'WIS', 'CHA'];\nvar SKILLS = {\n  STR: ['Athletics'],\n  DEX: ['Acrobatics', 'Sleight of Hand', 'Stealth'],\n  CON: [],\n  INT: ['Arcana', 'History', 'Investigation', 'Nature', 'Religion'],\n  WIS: ['Animal Handling', 'Insight', 'Medicine', 'Perception', 'Survival'],\n  CHA: ['Deception', 'Intimidation', 'Performance', 'Persuasion']\n};\nvar CURRENCY = ['CP', 'SP', 'EP', 'GP', 'PP'];\nvar DICE_TYPES = [{\n  sides: 4,\n  color: '#FF6B6B'\n}, {\n  sides: 6,\n  color: '#4ECDC4'\n}, {\n  sides: 8,\n  color: '#45B7D1'\n}, {\n  sides: 10,\n  color: '#96CEB4'\n}, {\n  sides: 12,\n  color: '#FFEEAD'\n}, {\n  sides: 20,\n  color: '#D4A5A5'\n}, {\n  sides: 100,\n  color: '#9B59B6'\n}];\nvar STATUS_EFFECTS = [{\n  id: 'blinded',\n  name: 'Blinded',\n  icon: '👁️'\n}, {\n  id: 'charmed',\n  name: 'Charmed',\n  icon: '💕'\n}, {\n  id: 'deafened',\n  name: 'Deafened',\n  icon: '👂'\n}, {\n  id: 'frightened',\n  name: 'Frightened',\n  icon: '😨'\n}, {\n  id: 'grappled',\n  name: 'Grappled',\n  icon: '🤼'\n}, {\n  id: 'incapacitated',\n  name: 'Incapacitated',\n  icon: '💫'\n}, {\n  id: 'invisible',\n  name: 'Invisible',\n  icon: '👻'\n}, {\n  id: 'paralyzed',\n  name: 'Paralyzed',\n  icon: '⚡'\n}, {\n  id: 'petrified',\n  name: 'Petrified',\n  icon: '🗿'\n}, {\n  id: 'poisoned',\n  name: 'Poisoned',\n  icon: '🤢'\n}, {\n  id: 'prone',\n  name: 'Prone',\n  icon: '⬇️'\n}, {\n  id: 'restrained',\n  name: 'Restrained',\n  icon: '⛓️'\n}, {\n  id: 'stunned',\n  name: 'Stunned',\n  icon: '💫'\n}, {\n  id: 'unconscious',\n  name: 'Unconscious',\n  icon: '💤'\n}];\nvar windowDimensions = Dimensions.get('window');\nvar isSmallScreen = windowDimensions.width < 768;\nvar THEME = {\n  primary: '#1E1E1E',\n  secondary: '#2D2D2D',\n  accent: '#7289DA',\n  gold: '#FFD700',\n  danger: '#ED4245',\n  success: '#3BA55C',\n  text: {\n    light: '#FFFFFF',\n    dark: '#1E1E1E'\n  },\n  background: {\n    primary: '#1E1E1E',\n    secondary: '#2D2D2D',\n    dark: '#141414',\n    panel: '#363636'\n  }\n};\nvar initialGameState = {\n  tokens: {},\n  layers: {\n    grid: true,\n    terrain: {},\n    tokens: {},\n    effects: {},\n    fog: {}\n  },\n  initiative: [],\n  inCombat: false,\n  currentTurn: 0,\n  settings: {\n    gridSize: GRID_SIZE,\n    showCoordinates: true\n  },\n  partyLoot: {\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: [],\n    currentViewer: null\n  },\n  characters: [],\n  lastUpdate: Date.now()\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.background.primary,\n    height: '100%',\n    width: '100%'\n  },\n  header: {\n    padding: isSmallScreen ? 10 : 20,\n    backgroundColor: THEME.background.panel,\n    width: '100%'\n  },\n  title: {\n    fontSize: isSmallScreen ? 18 : 24,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10\n  },\n  controls: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    justifyContent: isSmallScreen ? 'center' : 'flex-start'\n  },\n  controlButton: {\n    padding: isSmallScreen ? 8 : 10,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? 80 : 100,\n    alignItems: 'center'\n  },\n  content: {\n    flex: 1,\n    width: '100%'\n  },\n  mainArea: {\n    flex: 1,\n    flexDirection: isSmallScreen ? 'column' : 'row',\n    padding: isSmallScreen ? 10 : 20,\n    gap: 20,\n    minHeight: '100%'\n  },\n  gridSection: {\n    flex: 1,\n    minHeight: isSmallScreen ? 400 : '100%'\n  },\n  sidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0\n  },\n  gridContainer: {\n    padding: isSmallScreen ? 5 : 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  cell: {\n    width: isSmallScreen ? 35 : 60,\n    height: isSmallScreen ? 35 : 60,\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.secondary\n  },\n  tokenContent: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: isSmallScreen ? 1 : 2\n  },\n  tokenText: {\n    fontSize: isSmallScreen ? 10 : 12,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  tokenHp: {\n    fontSize: isSmallScreen ? 8 : 10,\n    textAlign: 'center'\n  },\n  tokenAc: {\n    fontSize: isSmallScreen ? 8 : 10,\n    textAlign: 'center',\n    opacity: 0.8\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modalContainer: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '90%' : 400\n  },\n  modalTitle: {\n    fontSize: isSmallScreen ? 18 : 20,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 15\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    color: THEME.text.light,\n    backgroundColor: THEME.background.primary\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 15\n  },\n  modalButton: {\n    padding: 10,\n    borderRadius: 5,\n    minWidth: 100,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n    fontSize: isSmallScreen ? 12 : 14\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    width: '100%',\n    height: '100%'\n  },\n  loadingText: {\n    color: THEME.text.light,\n    fontSize: 16,\n    marginTop: 10\n  },\n  loadingButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  diceBox: {\n    width: '100%',\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  diceButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 5,\n    justifyContent: 'center'\n  },\n  diceButton: {\n    padding: isSmallScreen ? 5 : 10,\n    backgroundColor: THEME.primary,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: isSmallScreen ? 30 : 60\n  },\n  diceHistory: {\n    maxHeight: isSmallScreen ? 100 : 200,\n    marginTop: 10\n  },\n  diceResultContainer: {\n    padding: 5,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.accent + '40'\n  },\n  diceResult: {\n    color: THEME.text.light\n  },\n  diceTotal: {\n    fontWeight: 'bold',\n    color: THEME.accent\n  },\n  diceRolls: {\n    color: THEME.text.light + '80',\n    fontSize: 12\n  },\n  initiativeList: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n    width: '100%'\n  },\n  initiativeScroll: {\n    maxHeight: isSmallScreen ? 150 : 200\n  },\n  initiativeItem: {\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n    backgroundColor: THEME.background.primary\n  },\n  currentInitiative: {\n    backgroundColor: THEME.accent\n  },\n  initiativeText: {\n    color: THEME.text.light\n  },\n  currentInitiativeText: {\n    color: THEME.text.dark,\n    fontWeight: 'bold'\n  },\n  zoomControls: {\n    position: 'absolute',\n    right: 10,\n    bottom: 10,\n    flexDirection: 'row',\n    gap: 10,\n    display: isSmallScreen ? 'flex' : 'none'\n  },\n  zoomButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: THEME.background.panel,\n    justifyContent: 'center',\n    alignItems: 'center',\n    opacity: 0.8\n  },\n  advantageButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5\n  },\n  advantageActive: {\n    backgroundColor: THEME.accent\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.primary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 60,\n    textAlign: 'center'\n  },\n  boxTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  colorPicker: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    gap: isSmallScreen ? 2 : 5,\n    marginBottom: isSmallScreen ? 5 : 10\n  },\n  colorButton: {\n    width: isSmallScreen ? 20 : 30,\n    height: isSmallScreen ? 20 : 30,\n    borderRadius: isSmallScreen ? 10 : 15,\n    margin: isSmallScreen ? 1 : 2\n  },\n  selectedColor: {\n    borderWidth: 2,\n    borderColor: THEME.accent\n  }\n});\nvar additionalStyles = StyleSheet.create({\n  characterSheet: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '95%' : '80%',\n    maxWidth: 800,\n    maxHeight: '90%'\n  },\n  sheetHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20\n  },\n  sheetSection: {\n    marginBottom: 20\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10\n  },\n  abilityScores: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    gap: 10\n  },\n  abilityBox: {\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: isSmallScreen ? '30%' : 100,\n    marginBottom: 10\n  },\n  abilityLabel: {\n    color: THEME.text.light,\n    fontWeight: 'bold'\n  },\n  abilityScore: {\n    color: THEME.accent,\n    fontSize: 24,\n    fontWeight: 'bold',\n    width: '100%',\n    textAlign: 'center',\n    padding: 5\n  },\n  abilityMod: {\n    color: THEME.text.light\n  },\n  skillsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10\n  },\n  skillItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? '45%' : 200\n  },\n  proficientDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginRight: 5\n  },\n  skillName: {\n    color: THEME.text.light,\n    flex: 1\n  },\n  skillMod: {\n    color: THEME.accent,\n    fontWeight: 'bold'\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    padding: 10\n  },\n  closeButtonText: {\n    color: THEME.text.light,\n    fontSize: 20\n  },\n  lootSection: {\n    backgroundColor: THEME.background.primary,\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 15\n  },\n  currencyRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  currencyInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 80,\n    textAlign: 'center'\n  },\n  currencyLabel: {\n    color: THEME.text.light,\n    width: 30\n  },\n  itemRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n    gap: 10\n  },\n  itemInput: {\n    flex: 1,\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5\n  },\n  removeButton: {\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: THEME.danger\n  },\n  addButton: {\n    backgroundColor: THEME.success,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  lootHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  itemInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n    flex: 1\n  },\n  addedBy: {\n    color: THEME.text.light,\n    opacity: 0.6,\n    fontSize: 12,\n    marginTop: 4\n  },\n  statsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 20,\n    gap: 10\n  },\n  statBox: {\n    backgroundColor: THEME.background.primary,\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    minWidth: isSmallScreen ? '30%' : 100\n  },\n  statLabel: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  statValue: {\n    color: THEME.accent,\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  statInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: '100%',\n    textAlign: 'center',\n    fontSize: 20,\n    marginTop: 5\n  },\n  currentHp: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  hpSeparator: {\n    color: THEME.text.light,\n    fontSize: 20\n  }\n});\nvar diceStyles = StyleSheet.create({\n  dicePanel: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15\n  },\n  diceHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  diceTitle: {\n    color: THEME.text.light,\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  diceControls: {\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n    gap: 10\n  },\n  controlsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  controlGroup: {\n    flexDirection: 'row',\n    gap: 8\n  },\n  controlButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: 80,\n    alignItems: 'center'\n  },\n  controlActive: {\n    backgroundColor: THEME.accent\n  },\n  modifierGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  modifierLabel: {\n    color: THEME.text.light,\n    fontSize: 14\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center'\n  },\n  quantityGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  quantityLabel: {\n    color: THEME.text.light,\n    fontSize: 14\n  },\n  quantityInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center'\n  },\n  diceGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    justifyContent: 'center',\n    marginBottom: 15\n  },\n  diceButton: {\n    width: isSmallScreen ? 45 : 60,\n    height: isSmallScreen ? 45 : 60,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  diceButtonText: {\n    color: THEME.text.light,\n    fontSize: isSmallScreen ? 14 : 16,\n    fontWeight: 'bold'\n  },\n  historyContainer: {\n    backgroundColor: THEME.background.primary,\n    borderRadius: 8,\n    maxHeight: 200\n  },\n  historyScroll: {\n    padding: 10\n  },\n  historyItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.background.secondary\n  },\n  historyLeft: {\n    flex: 1\n  },\n  historyInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5\n  },\n  historyDice: {\n    color: THEME.text.light,\n    opacity: 0.7\n  },\n  historyRolls: {\n    color: THEME.text.light,\n    fontSize: 12,\n    opacity: 0.5\n  },\n  historyTotal: {\n    color: THEME.accent,\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  clearButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center'\n  }\n});\nvar statusStyles = StyleSheet.create({\n  effectsContainer: {\n    marginTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: THEME.accent + '40',\n    paddingTop: 15\n  },\n  effectsTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  effectsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8\n  },\n  effectButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: 80\n  },\n  effectActive: {\n    backgroundColor: THEME.accent\n  },\n  effectText: {\n    color: THEME.text.light,\n    fontSize: 12\n  },\n  tokenEffects: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 2,\n    marginTop: 2\n  },\n  effectIcon: {\n    fontSize: isSmallScreen ? 10 : 12\n  }\n});\nvar saveGameState = function () {\n  var _ref = _asyncToGenerator(function* () {\n    if (firebaseRef.current) {\n      try {\n        yield set(firebaseRef.current, {\n          tokens: tokens,\n          layers: layers,\n          initiative: initiative,\n          inCombat: inCombat,\n          currentTurn: currentTurn,\n          partyLoot: partyLoot,\n          characters: characters,\n          settings: initialGameState.settings,\n          lastUpdate: Date.now()\n        });\n      } catch (error) {\n        console.error('Error saving game state:', error);\n        Alert.alert('Error', 'Failed to save game state');\n      }\n    }\n  });\n  return function saveGameState() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar CharacterSheetModal = memo(function (_ref2) {\n  var visible = _ref2.visible,\n    onClose = _ref2.onClose,\n    character = _ref2.character,\n    characters = _ref2.characters,\n    onUpdate = _ref2.onUpdate;\n  var _useState = useState(function () {\n      return {\n        name: (character == null ? void 0 : character.name) || '',\n        class: (character == null ? void 0 : character.class) || '',\n        level: (character == null ? void 0 : character.level) || 1,\n        owner: (character == null ? void 0 : character.owner) || '',\n        proficiencyBonus: (character == null ? void 0 : character.proficiencyBonus) || 2,\n        abilityScores: (character == null ? void 0 : character.abilityScores) || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: (character == null ? void 0 : character.proficientSkills) || [],\n        currency: (character == null ? void 0 : character.currency) || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: (character == null ? void 0 : character.items) || [],\n        inventory: (character == null ? void 0 : character.inventory) || [],\n        hp: (character == null ? void 0 : character.hp) || 0,\n        maxHp: (character == null ? void 0 : character.maxHp) || 0,\n        ac: (character == null ? void 0 : character.ac) || 10\n      };\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    editedCharacter = _useState2[0],\n    setEditedCharacter = _useState2[1];\n  useEffect(function () {\n    if (visible && character) {\n      setEditedCharacter({\n        name: character.name || '',\n        class: character.class || '',\n        level: character.level || 1,\n        owner: character.owner || '',\n        proficiencyBonus: character.proficiencyBonus || 2,\n        abilityScores: character.abilityScores || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: character.proficientSkills || [],\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: character.items || [],\n        inventory: character.inventory || [],\n        hp: character.hp || 0,\n        maxHp: character.maxHp || 0,\n        ac: character.ac || 10\n      });\n    }\n  }, [visible, character]);\n  if (!character) {\n    console.error('No character data provided to CharacterSheetModal');\n    return null;\n  }\n  var calculateModifier = function calculateModifier(score) {\n    return Math.floor((score - 10) / 2);\n  };\n  var handleAbilityScoreChange = function handleAbilityScoreChange(ability, value) {\n    var newScore = parseInt(value) || 0;\n    setEditedCharacter(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        abilityScores: _objectSpread(_objectSpread({}, prev.abilityScores), {}, _defineProperty({}, ability, newScore))\n      });\n    });\n  };\n  var toggleProficiency = function toggleProficiency(skill) {\n    setEditedCharacter(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        proficientSkills: prev.proficientSkills.includes(skill) ? prev.proficientSkills.filter(function (s) {\n          return s !== skill;\n        }) : [].concat(_toConsumableArray(prev.proficientSkills), [skill])\n      });\n    });\n  };\n  var getSkillModifier = function getSkillModifier(skill, ability) {\n    var abilityMod = calculateModifier(editedCharacter.abilityScores[ability]);\n    var profBonus = editedCharacter.proficientSkills.includes(skill) ? editedCharacter.proficiencyBonus : 0;\n    return abilityMod + profBonus;\n  };\n  var handleSave = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var updatedCharacter = _objectSpread(_objectSpread({}, character), editedCharacter);\n        onUpdate(updatedCharacter);\n      } catch (error) {\n        console.error('Error saving character:', error);\n        Alert.alert('Error', 'Failed to save character');\n      }\n    });\n    return function handleSave() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (!visible) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: additionalStyles.characterSheet,\n        children: [_jsx(TouchableOpacity, {\n          style: additionalStyles.closeButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: additionalStyles.closeButtonText,\n            children: \"\\xD7\"\n          })\n        }), _jsxs(GestureScrollView, {\n          children: [_jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Character Info\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: editedCharacter.name,\n              onChangeText: function onChangeText(text) {\n                return setEditedCharacter(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    name: text\n                  });\n                });\n              },\n              placeholder: \"Character Name\",\n              placeholderTextColor: THEME.text.light + '80'\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                gap: 10\n              },\n              children: [_jsx(TextInput, {\n                style: [styles.input, {\n                  flex: 1\n                }],\n                value: editedCharacter.class,\n                onChangeText: function onChangeText(text) {\n                  return setEditedCharacter(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      class: text\n                    });\n                  });\n                },\n                placeholder: \"Class\",\n                placeholderTextColor: THEME.text.light + '80'\n              }), _jsx(TextInput, {\n                style: [styles.input, {\n                  flex: 1\n                }],\n                value: String(editedCharacter.level),\n                onChangeText: function onChangeText(text) {\n                  return setEditedCharacter(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      level: parseInt(text) || 1\n                    });\n                  });\n                },\n                placeholder: \"Level\",\n                keyboardType: \"numeric\",\n                placeholderTextColor: THEME.text.light + '80'\n              })]\n            })]\n          }), _jsx(View, {\n            style: additionalStyles.sheetSection,\n            children: _jsxs(View, {\n              style: additionalStyles.statsRow,\n              children: [_jsxs(View, {\n                style: additionalStyles.statBox,\n                children: [_jsx(Text, {\n                  style: additionalStyles.statLabel,\n                  children: \"Hit Points\"\n                }), _jsxs(View, {\n                  style: additionalStyles.currentHp,\n                  children: [_jsx(TextInput, {\n                    style: additionalStyles.statInput,\n                    value: String(editedCharacter.hp),\n                    onChangeText: function onChangeText(text) {\n                      var value = parseInt(text) || 0;\n                      setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          hp: value\n                        });\n                      });\n                    },\n                    keyboardType: \"numeric\",\n                    selectTextOnFocus: true,\n                    placeholder: \"Current\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), _jsx(Text, {\n                    style: additionalStyles.hpSeparator,\n                    children: \"/\"\n                  }), _jsx(TextInput, {\n                    style: additionalStyles.statInput,\n                    value: String(editedCharacter.maxHp),\n                    onChangeText: function onChangeText(text) {\n                      var value = parseInt(text) || 0;\n                      setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          maxHp: value\n                        });\n                      });\n                    },\n                    keyboardType: \"numeric\",\n                    selectTextOnFocus: true,\n                    placeholder: \"Max\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  })]\n                })]\n              }), _jsxs(View, {\n                style: additionalStyles.statBox,\n                children: [_jsx(Text, {\n                  style: additionalStyles.statLabel,\n                  children: \"Armor Class\"\n                }), _jsx(TextInput, {\n                  style: additionalStyles.statInput,\n                  value: String(editedCharacter.ac),\n                  onChangeText: function onChangeText(text) {\n                    var value = parseInt(text) || 0;\n                    setEditedCharacter(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        ac: value\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  selectTextOnFocus: true,\n                  placeholder: \"AC\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              })]\n            })\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Ability Scores\"\n            }), _jsx(View, {\n              style: additionalStyles.abilityScores,\n              children: ABILITY_SCORES.map(function (ability) {\n                return _jsxs(View, {\n                  style: additionalStyles.abilityBox,\n                  children: [_jsx(Text, {\n                    style: additionalStyles.abilityLabel,\n                    children: ability\n                  }), _jsx(TextInput, {\n                    style: additionalStyles.abilityScore,\n                    value: String(editedCharacter.abilityScores[ability]),\n                    onChangeText: function onChangeText(text) {\n                      return handleAbilityScoreChange(ability, text);\n                    },\n                    keyboardType: \"numeric\",\n                    maxLength: 2,\n                    selectTextOnFocus: true\n                  }), _jsxs(Text, {\n                    style: additionalStyles.abilityMod,\n                    children: [calculateModifier(editedCharacter.abilityScores[ability]) >= 0 ? '+' : '', calculateModifier(editedCharacter.abilityScores[ability])]\n                  })]\n                }, ability);\n              })\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Skills\"\n            }), _jsx(View, {\n              style: additionalStyles.skillsList,\n              children: Object.entries(SKILLS).map(function (_ref4) {\n                var _ref5 = _slicedToArray(_ref4, 2),\n                  ability = _ref5[0],\n                  skills = _ref5[1];\n                return skills.map(function (skill) {\n                  return _jsxs(TouchableOpacity, {\n                    style: additionalStyles.skillItem,\n                    onPress: function onPress() {\n                      return toggleProficiency(skill);\n                    },\n                    children: [_jsx(View, {\n                      style: [additionalStyles.proficientDot, {\n                        backgroundColor: editedCharacter.proficientSkills.includes(skill) ? THEME.accent : THEME.background.secondary\n                      }]\n                    }), _jsx(Text, {\n                      style: additionalStyles.skillName,\n                      children: skill\n                    }), _jsxs(Text, {\n                      style: additionalStyles.skillMod,\n                      children: [getSkillModifier(skill, ability) >= 0 ? '+' : '', getSkillModifier(skill, ability)]\n                    })]\n                  }, skill);\n                });\n              })\n            })]\n          }), _jsxs(View, {\n            style: additionalStyles.sheetSection,\n            children: [_jsx(Text, {\n              style: additionalStyles.sectionTitle,\n              children: \"Inventory\"\n            }), _jsx(View, {\n              style: additionalStyles.lootSection,\n              children: CURRENCY.map(function (currency) {\n                return _jsxs(View, {\n                  style: additionalStyles.currencyRow,\n                  children: [_jsx(Text, {\n                    style: additionalStyles.currencyLabel,\n                    children: currency\n                  }), _jsx(TextInput, {\n                    style: additionalStyles.currencyInput,\n                    value: String(editedCharacter.currency[currency] || 0),\n                    onChangeText: function onChangeText(text) {\n                      var value = parseInt(text) || 0;\n                      setEditedCharacter(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, currency, value))\n                        });\n                      });\n                    },\n                    keyboardType: \"numeric\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  })]\n                }, currency);\n              })\n            }), _jsxs(View, {\n              style: additionalStyles.lootSection,\n              children: [_jsxs(View, {\n                style: additionalStyles.lootHeader,\n                children: [_jsx(Text, {\n                  style: additionalStyles.sectionTitle,\n                  children: \"Items\"\n                }), _jsx(TouchableOpacity, {\n                  style: additionalStyles.addButton,\n                  onPress: function onPress() {\n                    setEditedCharacter(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: [].concat(_toConsumableArray(prev.items), [{\n                          name: '',\n                          quantity: 1,\n                          notes: '',\n                          addedBy: character.name\n                        }])\n                      });\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: styles.buttonText,\n                    children: \"Add Item\"\n                  })\n                })]\n              }), editedCharacter.items.map(function (item, index) {\n                return _jsxs(View, {\n                  style: additionalStyles.itemRow,\n                  children: [_jsxs(View, {\n                    style: additionalStyles.itemInfo,\n                    children: [_jsx(TextInput, {\n                      style: [additionalStyles.itemInput, {\n                        flex: 2\n                      }],\n                      value: item.name,\n                      onChangeText: function onChangeText(text) {\n                        var newItems = _toConsumableArray(editedCharacter.items);\n                        newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                          name: text\n                        });\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: newItems\n                          });\n                        });\n                      },\n                      placeholder: \"Item name\",\n                      placeholderTextColor: THEME.text.light + '80'\n                    }), _jsx(TextInput, {\n                      style: [additionalStyles.itemInput, {\n                        width: 60\n                      }],\n                      value: String(item.quantity),\n                      onChangeText: function onChangeText(text) {\n                        var newItems = _toConsumableArray(editedCharacter.items);\n                        newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                          quantity: parseInt(text) || 1\n                        });\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: newItems\n                          });\n                        });\n                      },\n                      keyboardType: \"numeric\",\n                      placeholder: \"Qty\",\n                      placeholderTextColor: THEME.text.light + '80'\n                    }), item.addedBy === character.name && _jsx(TouchableOpacity, {\n                      style: additionalStyles.removeButton,\n                      onPress: function onPress() {\n                        setEditedCharacter(function (prev) {\n                          return _objectSpread(_objectSpread({}, prev), {}, {\n                            items: prev.items.filter(function (_, i) {\n                              return i !== index;\n                            })\n                          });\n                        });\n                      },\n                      children: _jsx(Text, {\n                        style: styles.buttonText,\n                        children: \"\\xD7\"\n                      })\n                    })]\n                  }), _jsxs(Text, {\n                    style: additionalStyles.addedBy,\n                    children: [\"Added by: \", item.addedBy]\n                  })]\n                }, index);\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: [styles.modalButton, {\n                backgroundColor: THEME.success\n              }],\n              onPress: handleSave,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Save Changes\"\n              })\n            })]\n          })]\n        })]\n      })\n    })\n  });\n});\nvar TokenModal = memo(function (_ref6) {\n  var showTokenModal = _ref6.showTokenModal,\n    setShowTokenModal = _ref6.setShowTokenModal,\n    selectedToken = _ref6.selectedToken,\n    setSelectedToken = _ref6.setSelectedToken,\n    tokens = _ref6.tokens,\n    firebaseRef = _ref6.firebaseRef,\n    initialGameState = _ref6.initialGameState,\n    layers = _ref6.layers,\n    initiative = _ref6.initiative,\n    inCombat = _ref6.inCombat,\n    currentTurn = _ref6.currentTurn,\n    THEME = _ref6.THEME;\n  return _jsx(Modal, {\n    visible: showTokenModal,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {\n      return setShowTokenModal(false);\n    },\n    children: _jsx(Pressable, {\n      style: [styles.modalOverlay, {\n        cursor: 'default'\n      }],\n      onPress: function onPress() {\n        return Keyboard.dismiss();\n      },\n      children: _jsx(View, {\n        style: styles.modalContent,\n        children: _jsx(KeyboardAvoidingView, {\n          behavior: Platform.select({\n            ios: 'padding',\n            android: 'height'\n          }),\n          style: styles.modalContainer,\n          keyboardVerticalOffset: Platform.select({\n            ios: 64,\n            android: 0\n          }),\n          children: _jsxs(Pressable, {\n            onPress: function onPress(e) {\n              return e.stopPropagation();\n            },\n            children: [_jsx(Text, {\n              style: styles.modalTitle,\n              children: \"Edit Token\"\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: selectedToken == null ? void 0 : selectedToken.name,\n              onChangeText: function onChangeText(text) {\n                setSelectedToken(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    name: text\n                  });\n                });\n              },\n              placeholder: \"Token Name\",\n              placeholderTextColor: THEME.text.light + '80',\n              blurOnSubmit: false,\n              autoComplete: \"off\",\n              spellCheck: false,\n              selectTextOnFocus: true,\n              enablesReturnKeyAutomatically: true\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                gap: 10,\n                marginBottom: 10\n              },\n              children: [_jsx(View, {\n                style: {\n                  flex: 1\n                },\n                children: _jsx(TextInput, {\n                  style: styles.input,\n                  value: String((selectedToken == null ? void 0 : selectedToken.hp) || ''),\n                  onChangeText: function onChangeText(text) {\n                    var hp = parseInt(text) || 0;\n                    setSelectedToken(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        hp: Math.max(0, hp)\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Current HP\",\n                  placeholderTextColor: THEME.text.light + '80',\n                  blurOnSubmit: false,\n                  autoComplete: \"off\",\n                  selectTextOnFocus: true,\n                  enablesReturnKeyAutomatically: true\n                })\n              }), _jsx(View, {\n                style: {\n                  flex: 1\n                },\n                children: _jsx(TextInput, {\n                  style: styles.input,\n                  value: String((selectedToken == null ? void 0 : selectedToken.maxHp) || ''),\n                  onChangeText: function onChangeText(text) {\n                    var maxHp = parseInt(text) || 1;\n                    setSelectedToken(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        maxHp: Math.max(1, maxHp)\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Max HP\",\n                  placeholderTextColor: THEME.text.light + '80',\n                  blurOnSubmit: false,\n                  autoComplete: \"off\",\n                  selectTextOnFocus: true,\n                  enablesReturnKeyAutomatically: true\n                })\n              })]\n            }), _jsx(TextInput, {\n              style: styles.input,\n              value: String((selectedToken == null ? void 0 : selectedToken.initiativeBonus) || '0'),\n              onChangeText: function onChangeText(text) {\n                setSelectedToken(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    initiativeBonus: parseInt(text) || 0\n                  });\n                });\n              },\n              keyboardType: \"numeric\",\n              placeholder: \"Initiative Bonus\",\n              placeholderTextColor: THEME.text.light + '80',\n              blurOnSubmit: false,\n              autoComplete: \"off\",\n              selectTextOnFocus: true,\n              enablesReturnKeyAutomatically: true\n            }), _jsxs(View, {\n              style: statusStyles.effectsContainer,\n              children: [_jsx(Text, {\n                style: statusStyles.effectsTitle,\n                children: \"Status Effects\"\n              }), _jsx(View, {\n                style: statusStyles.effectsGrid,\n                children: STATUS_EFFECTS.map(function (effect) {\n                  var _selectedToken$effect;\n                  return _jsx(TouchableOpacity, {\n                    style: [statusStyles.effectButton, (selectedToken == null ? void 0 : (_selectedToken$effect = selectedToken.effects) == null ? void 0 : _selectedToken$effect.includes(effect.id)) && statusStyles.effectActive],\n                    onPress: function onPress() {\n                      setSelectedToken(function (prev) {\n                        var currentEffects = prev.effects || [];\n                        var newEffects = currentEffects.includes(effect.id) ? currentEffects.filter(function (e) {\n                          return e !== effect.id;\n                        }) : [].concat(_toConsumableArray(currentEffects), [effect.id]);\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          effects: newEffects\n                        });\n                      });\n                    },\n                    children: _jsxs(Text, {\n                      style: statusStyles.effectText,\n                      children: [effect.icon, \" \", effect.name]\n                    })\n                  }, effect.id);\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.modalButtons,\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.modalButton, {\n                  backgroundColor: THEME.danger\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current && selectedToken) {\n                    var newTokens = _objectSpread({}, tokens);\n                    delete newTokens[selectedToken.position];\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: newTokens,\n                      layers: layers,\n                      initiative: initiative,\n                      inCombat: inCombat,\n                      currentTurn: currentTurn\n                    }));\n                    setShowTokenModal(false);\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Delete\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.modalButton, {\n                  backgroundColor: THEME.success\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current && selectedToken) {\n                    var newTokens = _objectSpread(_objectSpread({}, tokens), {}, _defineProperty({}, selectedToken.position, selectedToken));\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: newTokens,\n                      layers: layers,\n                      initiative: initiative,\n                      inCombat: inCombat,\n                      currentTurn: currentTurn\n                    }));\n                    setShowTokenModal(false);\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Save\"\n                })\n              })]\n            })]\n          })\n        })\n      })\n    })\n  });\n});\nvar modalStyles = StyleSheet.create({\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: '90%',\n    maxWidth: 400,\n    zIndex: 1001\n  }\n});\nvar RoomModal = memo(function (_ref7) {\n  var showRoomModal = _ref7.showRoomModal,\n    setShowRoomModal = _ref7.setShowRoomModal,\n    isConnected = _ref7.isConnected,\n    roomCode = _ref7.roomCode,\n    setRoomCode = _ref7.setRoomCode,\n    isJoining = _ref7.isJoining,\n    connectToRoom = _ref7.connectToRoom;\n  return _jsx(Modal, {\n    visible: showRoomModal,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {},\n    style: {\n      zIndex: 999\n    },\n    children: _jsx(View, {\n      style: [modalStyles.modalOverlay, {\n        pointerEvents: 'auto'\n      }],\n      children: _jsxs(View, {\n        style: modalStyles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Join Room\"\n        }), _jsx(TextInput, {\n          style: [styles.input, {\n            marginBottom: 15,\n            zIndex: 1002\n          }],\n          value: roomCode,\n          onChangeText: function onChangeText(text) {\n            setRoomCode(text.trim().toLowerCase());\n          },\n          placeholder: \"Enter room code...\",\n          placeholderTextColor: THEME.text.light + '80',\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          editable: !isJoining,\n          autoFocus: true,\n          blurOnSubmit: false\n        }), _jsx(TouchableOpacity, {\n          style: [styles.modalButton, {\n            backgroundColor: isJoining ? THEME.background.secondary : THEME.success,\n            width: '100%',\n            zIndex: 1002\n          }],\n          onPress: function onPress() {\n            Keyboard.dismiss();\n            connectToRoom(roomCode);\n          },\n          disabled: isJoining,\n          children: isJoining ? _jsxs(View, {\n            style: styles.loadingButtonContent,\n            children: [_jsx(ActivityIndicator, {\n              color: THEME.text.light\n            }), _jsx(Text, {\n              style: [styles.buttonText, {\n                marginLeft: 10\n              }],\n              children: \"Connecting...\"\n            })]\n          }) : _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Join Room\"\n          })\n        })]\n      })\n    })\n  });\n});\nvar PartyLootModal = memo(function (_ref8) {\n  var visible = _ref8.visible,\n    onClose = _ref8.onClose,\n    partyLoot = _ref8.partyLoot,\n    onUpdate = _ref8.onUpdate,\n    playerName = _ref8.playerName;\n  var _useState3 = useState({\n      currency: {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      items: []\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editedLoot = _useState4[0],\n    setEditedLoot = _useState4[1];\n  useEffect(function () {\n    if (visible && partyLoot) {\n      setEditedLoot({\n        currency: partyLoot.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: partyLoot.items || []\n      });\n    }\n  }, [visible, partyLoot]);\n  if (!visible) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: [styles.modalContent, {\n          maxHeight: '90%'\n        }],\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Party Loot\"\n        }), _jsxs(ScrollView, {\n          children: [_jsx(View, {\n            style: additionalStyles.lootSection,\n            children: CURRENCY.map(function (type) {\n              return _jsxs(View, {\n                style: additionalStyles.currencyRow,\n                children: [_jsx(Text, {\n                  style: additionalStyles.currencyLabel,\n                  children: type\n                }), _jsx(TextInput, {\n                  style: additionalStyles.currencyInput,\n                  value: String(editedLoot.currency[type] || 0),\n                  onChangeText: function onChangeText(text) {\n                    var value = parseInt(text) || 0;\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, type, value))\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              }, type);\n            })\n          }), _jsxs(View, {\n            style: additionalStyles.lootSection,\n            children: [_jsxs(View, {\n              style: additionalStyles.lootHeader,\n              children: [_jsx(Text, {\n                style: additionalStyles.sectionTitle,\n                children: \"Items\"\n              }), _jsx(TouchableOpacity, {\n                style: additionalStyles.addButton,\n                onPress: function onPress() {\n                  setEditedLoot(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      items: [].concat(_toConsumableArray(prev.items), [{\n                        id: Date.now().toString(),\n                        name: '',\n                        quantity: 1,\n                        addedBy: playerName\n                      }])\n                    });\n                  });\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Add Item\"\n                })\n              })]\n            }), editedLoot.items.map(function (item, index) {\n              return _jsxs(View, {\n                style: additionalStyles.itemRow,\n                children: [_jsx(TextInput, {\n                  style: [additionalStyles.itemInput, {\n                    flex: 2\n                  }],\n                  value: item.name,\n                  onChangeText: function onChangeText(text) {\n                    var newItems = _toConsumableArray(editedLoot.items);\n                    newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                      name: text\n                    });\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: newItems\n                      });\n                    });\n                  },\n                  placeholder: \"Item name\",\n                  placeholderTextColor: THEME.text.light + '80'\n                }), _jsx(TextInput, {\n                  style: [additionalStyles.itemInput, {\n                    width: 60\n                  }],\n                  value: String(item.quantity),\n                  onChangeText: function onChangeText(text) {\n                    var newItems = _toConsumableArray(editedLoot.items);\n                    newItems[index] = _objectSpread(_objectSpread({}, item), {}, {\n                      quantity: parseInt(text) || 1\n                    });\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: newItems\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholder: \"Qty\",\n                  placeholderTextColor: THEME.text.light + '80'\n                }), _jsx(TouchableOpacity, {\n                  style: additionalStyles.removeButton,\n                  onPress: function onPress() {\n                    setEditedLoot(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        items: prev.items.filter(function (_, i) {\n                          return i !== index;\n                        })\n                      });\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: styles.buttonText,\n                    children: \"\\xD7\"\n                  })\n                })]\n              }, item.id || index);\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.buttonRow,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.button, styles.closeButton],\n            onPress: onClose,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Cancel\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.button, {\n              backgroundColor: THEME.success\n            }],\n            onPress: function onPress() {\n              onUpdate(editedLoot);\n              onClose();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Save Changes\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar GridZoomControls = memo(function (_ref9) {\n  var zoomLevel = _ref9.zoomLevel,\n    setZoomLevel = _ref9.setZoomLevel;\n  var debouncedZoom = debounce(function (newZoom) {\n    setZoomLevel(newZoom);\n  }, 100);\n  return _jsxs(View, {\n    style: styles.zoomControls,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.zoomButton,\n      onPress: function onPress() {\n        return debouncedZoom(Math.max(0.5, zoomLevel - 0.1));\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"-\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.zoomButton,\n      onPress: function onPress() {\n        return debouncedZoom(Math.min(2, zoomLevel + 0.1));\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"+\"\n      })\n    })]\n  });\n});\nvar InventoryModal = memo(function (_ref10) {\n  var visible = _ref10.visible,\n    onClose = _ref10.onClose,\n    character = _ref10.character,\n    onUpdate = _ref10.onUpdate;\n  var _useState5 = useState({\n      currency: (character == null ? void 0 : character.currency) || {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      inventory: (character == null ? void 0 : character.inventory) || []\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    editedInventory = _useState6[0],\n    setEditedInventory = _useState6[1];\n  useEffect(function () {\n    if (visible && character) {\n      setEditedInventory({\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n  if (!visible || !character) return null;\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: additionalStyles.characterSheet,\n        children: [_jsx(TouchableOpacity, {\n          style: additionalStyles.closeButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: additionalStyles.closeButtonText,\n            children: \"\\xD7\"\n          })\n        }), _jsxs(Text, {\n          style: additionalStyles.sectionTitle,\n          children: [character.name, \"'s Inventory\"]\n        }), _jsxs(GestureScrollView, {\n          children: [_jsx(View, {\n            style: additionalStyles.lootSection,\n            children: CURRENCY.map(function (currency) {\n              return _jsxs(View, {\n                style: additionalStyles.currencyRow,\n                children: [_jsx(Text, {\n                  style: additionalStyles.currencyLabel,\n                  children: currency\n                }), _jsx(TextInput, {\n                  style: additionalStyles.currencyInput,\n                  value: String(editedInventory.currency[currency] || 0),\n                  onChangeText: function onChangeText(text) {\n                    var value = parseInt(text) || 0;\n                    setEditedInventory(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        currency: _objectSpread(_objectSpread({}, prev.currency), {}, _defineProperty({}, currency, value))\n                      });\n                    });\n                  },\n                  keyboardType: \"numeric\",\n                  placeholderTextColor: THEME.text.light + '80'\n                })]\n              }, currency);\n            })\n          }), _jsxs(View, {\n            style: additionalStyles.lootSection,\n            children: [_jsxs(View, {\n              style: additionalStyles.lootHeader,\n              children: [_jsx(Text, {\n                style: additionalStyles.sectionTitle,\n                children: \"Items\"\n              }), _jsx(TouchableOpacity, {\n                style: additionalStyles.addButton,\n                onPress: function onPress() {\n                  setEditedInventory(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      inventory: [].concat(_toConsumableArray(prev.inventory), [{\n                        name: '',\n                        quantity: 1,\n                        notes: '',\n                        addedBy: character.name\n                      }])\n                    });\n                  });\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Add Item\"\n                })\n              })]\n            }), editedInventory.inventory.map(function (item, index) {\n              return _jsxs(View, {\n                style: additionalStyles.itemRow,\n                children: [_jsxs(View, {\n                  style: additionalStyles.itemInfo,\n                  children: [_jsx(TextInput, {\n                    style: [additionalStyles.itemInput, {\n                      flex: 2\n                    }],\n                    value: item.name,\n                    onChangeText: function onChangeText(text) {\n                      var newInventory = _toConsumableArray(editedInventory.inventory);\n                      newInventory[index] = _objectSpread(_objectSpread({}, item), {}, {\n                        name: text\n                      });\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: newInventory\n                        });\n                      });\n                    },\n                    placeholder: \"Item name\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), _jsx(TextInput, {\n                    style: [additionalStyles.itemInput, {\n                      width: 60\n                    }],\n                    value: String(item.quantity),\n                    onChangeText: function onChangeText(text) {\n                      var newInventory = _toConsumableArray(editedInventory.inventory);\n                      newInventory[index] = _objectSpread(_objectSpread({}, item), {}, {\n                        quantity: parseInt(text) || 1\n                      });\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: newInventory\n                        });\n                      });\n                    },\n                    keyboardType: \"numeric\",\n                    placeholder: \"Qty\",\n                    placeholderTextColor: THEME.text.light + '80'\n                  }), item.addedBy === character.name && _jsx(TouchableOpacity, {\n                    style: additionalStyles.removeButton,\n                    onPress: function onPress() {\n                      setEditedInventory(function (prev) {\n                        return _objectSpread(_objectSpread({}, prev), {}, {\n                          inventory: prev.inventory.filter(function (_, i) {\n                            return i !== index;\n                          })\n                        });\n                      });\n                    },\n                    children: _jsx(Text, {\n                      style: styles.buttonText,\n                      children: \"\\xD7\"\n                    })\n                  })]\n                }), _jsxs(Text, {\n                  style: additionalStyles.addedBy,\n                  children: [\"Added by: \", item.addedBy]\n                })]\n              }, index);\n            })]\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, {\n              backgroundColor: THEME.success\n            }],\n            onPress: function onPress() {\n              onUpdate(_objectSpread(_objectSpread({}, character), {}, {\n                currency: editedInventory.currency,\n                inventory: editedInventory.inventory\n              }));\n              onClose();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Save Changes\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n});\nvar PlayerNameModal = memo(function (_ref11) {\n  var visible = _ref11.visible,\n    onSubmit = _ref11.onSubmit;\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    name = _useState8[0],\n    setName = _useState8[1];\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: function onRequestClose() {},\n    children: _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Enter Your Name\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: name,\n          onChangeText: setName,\n          placeholder: \"Your name\",\n          placeholderTextColor: THEME.text.light + '80',\n          autoCapitalize: \"words\"\n        }), _jsx(TouchableOpacity, {\n          style: [styles.modalButton, {\n            backgroundColor: THEME.success,\n            width: '100%',\n            marginTop: 10\n          }],\n          onPress: function onPress() {\n            return onSubmit(name);\n          },\n          disabled: !name.trim(),\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Continue\"\n          })\n        })]\n      })\n    })\n  });\n});\nvar viewerStyles = StyleSheet.create({\n  viewersList: {\n    marginTop: 15,\n    padding: 10,\n    backgroundColor: THEME.background.primary,\n    borderRadius: 5\n  },\n  viewersTitle: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  viewerName: {\n    color: THEME.text.light,\n    opacity: 0.8,\n    fontSize: 12,\n    marginBottom: 2\n  }\n});\nvar DiceResultOverlay = memo(function (_ref12) {\n  var result = _ref12.result,\n    onClose = _ref12.onClose;\n  useEffect(function () {\n    var timer = setTimeout(onClose, 2000);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [onClose]);\n  if (!result) return null;\n  return _jsx(View, {\n    style: overlayStyles.container,\n    children: _jsxs(View, {\n      style: overlayStyles.content,\n      children: [_jsxs(Text, {\n        style: overlayStyles.diceInfo,\n        children: [result.dice, result.modifier ? \" + \" + result.modifier : '', result.rollType === 'advantage' ? ' (Adv)' : result.rollType === 'disadvantage' ? ' (Dis)' : '']\n      }), result.individualTotals && result.individualTotals.length > 1 && _jsxs(Text, {\n        style: overlayStyles.rolls,\n        children: [\"[\", result.individualTotals.join(', '), \"]\"]\n      }), _jsx(Text, {\n        style: overlayStyles.total,\n        children: result.total\n      })]\n    })\n  });\n});\nvar overlayStyles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000,\n    backgroundColor: 'rgba(0,0,0,0.5)'\n  },\n  content: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    alignItems: 'center',\n    minWidth: 150\n  },\n  diceInfo: {\n    color: THEME.text.light,\n    fontSize: 18,\n    marginBottom: 5\n  },\n  rolls: {\n    color: THEME.text.light,\n    opacity: 0.7,\n    marginBottom: 5\n  },\n  total: {\n    color: THEME.accent,\n    fontSize: 32,\n    fontWeight: 'bold'\n  }\n});\nexport default function App() {\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    roomCode = _useState10[0],\n    setRoomCode = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isConnected = _useState12[0],\n    setIsConnected = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isLoading = _useState14[0],\n    setIsLoading = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isJoining = _useState16[0],\n    setIsJoining = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isUpdating = _useState18[0],\n    setIsUpdating = _useState18[1];\n  var _useState19 = useState(true),\n    _useState20 = _slicedToArray(_useState19, 2),\n    showRoomModal = _useState20[0],\n    setShowRoomModal = _useState20[1];\n  var _useState21 = useState(true),\n    _useState22 = _slicedToArray(_useState21, 2),\n    isDarkMode = _useState22[0],\n    setIsDarkMode = _useState22[1];\n  var _useState23 = useState(isSmallScreen ? 0.8 : 1),\n    _useState24 = _slicedToArray(_useState23, 2),\n    zoomLevel = _useState24[0],\n    setZoomLevel = _useState24[1];\n  var _useState25 = useState({}),\n    _useState26 = _slicedToArray(_useState25, 2),\n    tokens = _useState26[0],\n    setTokens = _useState26[1];\n  var _useState27 = useState(COLORS[0]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    currentColor = _useState28[0],\n    setCurrentColor = _useState28[1];\n  var _useState29 = useState([]),\n    _useState30 = _slicedToArray(_useState29, 2),\n    initiative = _useState30[0],\n    setInitiative = _useState30[1];\n  var _useState31 = useState(false),\n    _useState32 = _slicedToArray(_useState31, 2),\n    inCombat = _useState32[0],\n    setInCombat = _useState32[1];\n  var _useState33 = useState(0),\n    _useState34 = _slicedToArray(_useState33, 2),\n    currentTurn = _useState34[0],\n    setCurrentTurn = _useState34[1];\n  var _useState35 = useState(initialGameState.layers),\n    _useState36 = _slicedToArray(_useState35, 2),\n    layers = _useState36[0],\n    setLayers = _useState36[1];\n  var _useState37 = useState([]),\n    _useState38 = _slicedToArray(_useState37, 2),\n    diceHistory = _useState38[0],\n    setDiceHistory = _useState38[1];\n  var _useState39 = useState(false),\n    _useState40 = _slicedToArray(_useState39, 2),\n    advantage = _useState40[0],\n    setAdvantage = _useState40[1];\n  var _useState41 = useState(0),\n    _useState42 = _slicedToArray(_useState41, 2),\n    modifier = _useState42[0],\n    setModifier = _useState42[1];\n  var _useState43 = useState(null),\n    _useState44 = _slicedToArray(_useState43, 2),\n    selectedToken = _useState44[0],\n    setSelectedToken = _useState44[1];\n  var _useState45 = useState(false),\n    _useState46 = _slicedToArray(_useState45, 2),\n    showTokenModal = _useState46[0],\n    setShowTokenModal = _useState46[1];\n  var _useState47 = useState({\n      currency: {\n        CP: 0,\n        SP: 0,\n        EP: 0,\n        GP: 0,\n        PP: 0\n      },\n      items: [],\n      currentViewer: null\n    }),\n    _useState48 = _slicedToArray(_useState47, 2),\n    partyLoot = _useState48[0],\n    setPartyLoot = _useState48[1];\n  var _useState49 = useState(false),\n    _useState50 = _slicedToArray(_useState49, 2),\n    showPartyLoot = _useState50[0],\n    setShowPartyLoot = _useState50[1];\n  var _useState51 = useState(1),\n    _useState52 = _slicedToArray(_useState51, 2),\n    diceQuantity = _useState52[0],\n    setDiceQuantity = _useState52[1];\n  var _useState53 = useState([]),\n    _useState54 = _slicedToArray(_useState53, 2),\n    characters = _useState54[0],\n    setCharacters = _useState54[1];\n  var _useState55 = useState(false),\n    _useState56 = _slicedToArray(_useState55, 2),\n    showCharacterSheet = _useState56[0],\n    setShowCharacterSheet = _useState56[1];\n  var _useState57 = useState(null),\n    _useState58 = _slicedToArray(_useState57, 2),\n    selectedCharacter = _useState58[0],\n    setSelectedCharacter = _useState58[1];\n  var _useState59 = useState(false),\n    _useState60 = _slicedToArray(_useState59, 2),\n    showInventory = _useState60[0],\n    setShowInventory = _useState60[1];\n  var _useState61 = useState(''),\n    _useState62 = _slicedToArray(_useState61, 2),\n    playerName = _useState62[0],\n    setPlayerName = _useState62[1];\n  var _useState63 = useState(true),\n    _useState64 = _slicedToArray(_useState63, 2),\n    showPlayerNameModal = _useState64[0],\n    setShowPlayerNameModal = _useState64[1];\n  var _useState65 = useState('normal'),\n    _useState66 = _slicedToArray(_useState65, 2),\n    rollType = _useState66[0],\n    setRollType = _useState66[1];\n  var _useState67 = useState(null),\n    _useState68 = _slicedToArray(_useState67, 2),\n    currentRollResult = _useState68[0],\n    setCurrentRollResult = _useState68[1];\n  var firebaseRef = useRef(null);\n  var unsubscribeRef = useRef(null);\n  var handleDisconnect = useCallback(function () {\n    try {\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n        unsubscribeRef.current = null;\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n        firebaseRef.current = null;\n      }\n      setIsConnected(false);\n      setRoomCode('');\n      setTokens({});\n      setLayers(initialGameState.layers);\n      setInitiative([]);\n      setInCombat(false);\n      setCurrentTurn(0);\n      setDiceHistory([]);\n      setAdvantage(false);\n      setModifier(0);\n      setSelectedToken(null);\n      setShowTokenModal(false);\n      setPartyLoot(initialGameState.partyLoot);\n      setZoomLevel(isSmallScreen ? 0.8 : 1);\n    } catch (error) {\n      console.error('Error during disconnect:', error);\n      Alert.alert('Error', 'Failed to leave room properly. Please try again.');\n    }\n  }, []);\n  var handleInitiativeRoll = useCallback(function () {\n    if (!tokens || Object.keys(tokens).length === 0) {\n      Alert.alert('Error', 'No tokens on the board');\n      return;\n    }\n    var rolls = Object.entries(tokens).map(function (_ref13) {\n      var _ref14 = _slicedToArray(_ref13, 2),\n        position = _ref14[0],\n        token = _ref14[1];\n      var roll = Math.floor(Math.random() * 20) + 1;\n      var initiative = roll + (token.initiativeBonus || 0);\n      return {\n        position: position,\n        initiative: initiative,\n        details: token.name + \" (\" + initiative + \")\"\n      };\n    });\n    rolls.sort(function (a, b) {\n      return b.initiative - a.initiative;\n    });\n    if (firebaseRef.current) {\n      set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n        tokens: tokens,\n        layers: layers,\n        initiative: rolls,\n        inCombat: true,\n        currentTurn: 0\n      }));\n    }\n    setInitiative(rolls);\n    setInCombat(true);\n    setCurrentTurn(0);\n  }, [tokens, layers]);\n  var rollDice = useCallback(function (sides) {\n    var allRolls = [];\n    for (var d = 0; d < diceQuantity; d++) {\n      var rolls = [];\n      var numRolls = rollType !== 'normal' ? 2 : 1;\n      for (var i = 0; i < numRolls; i++) {\n        rolls.push(Math.floor(Math.random() * sides) + 1);\n      }\n      var finalRoll = rollType === 'advantage' ? Math.max.apply(Math, rolls) : rollType === 'disadvantage' ? Math.min.apply(Math, rolls) : rolls[0];\n      allRolls.push({\n        rolls: rolls,\n        total: finalRoll\n      });\n    }\n    var grandTotal = allRolls.reduce(function (sum, roll) {\n      return sum + roll.total;\n    }, 0) + modifier;\n    var newResult = {\n      dice: diceQuantity + \"d\" + sides,\n      rolls: allRolls.map(function (r) {\n        return r.rolls;\n      }).flat(),\n      individualTotals: allRolls.map(function (r) {\n        return r.total;\n      }),\n      modifier: modifier,\n      rollType: rollType,\n      total: grandTotal,\n      timestamp: Date.now()\n    };\n    setDiceHistory(function (prev) {\n      return [newResult].concat(_toConsumableArray(prev.slice(0, 49)));\n    });\n    Vibration.vibrate(50);\n  }, [rollType, modifier, diceQuantity]);\n  var handleCellPress = useCallback(function () {\n    var _ref15 = _asyncToGenerator(function* (row, col) {\n      if (!firebaseRef.current) return;\n      try {\n        var position = row + \"-\" + col;\n        var newTokens = _objectSpread({}, tokens);\n        if (tokens[position]) {\n          if (tokens[position].owner === playerName) {\n            delete newTokens[position];\n          } else {\n            Alert.alert('Error', 'You can only remove your own tokens');\n            return;\n          }\n        } else {\n          var playerCharacters = characters.filter(function (char) {\n            return char.owner === playerName;\n          });\n          if (playerCharacters.length === 0) {\n            Alert.alert('Error', 'Create a character first to place a token');\n            return;\n          }\n          if (playerCharacters.length === 1) {\n            var _character$abilitySco;\n            var character = playerCharacters[0];\n            newTokens[position] = {\n              name: character.name,\n              color: COLORS[0],\n              hp: character.hp || 0,\n              maxHp: character.maxHp || 0,\n              ac: character.ac || 10,\n              initiativeBonus: calculateModifier(((_character$abilitySco = character.abilityScores) == null ? void 0 : _character$abilitySco.DEX) || 10),\n              effects: [],\n              position: position,\n              owner: playerName,\n              characterId: character.name\n            };\n          } else {\n            Alert.alert('Select Character', 'Which character would you like to place?', playerCharacters.map(function (char) {\n              return {\n                text: char.name,\n                onPress: function onPress() {\n                  var _char$abilityScores;\n                  newTokens[position] = {\n                    name: char.name,\n                    color: COLORS[0],\n                    hp: char.hp || 0,\n                    maxHp: char.maxHp || 0,\n                    ac: char.ac || 10,\n                    initiativeBonus: calculateModifier(((_char$abilityScores = char.abilityScores) == null ? void 0 : _char$abilityScores.DEX) || 10),\n                    effects: [],\n                    position: position,\n                    owner: playerName,\n                    characterId: char.name\n                  };\n                  set(firebaseRef.current, {\n                    tokens: newTokens,\n                    layers: layers,\n                    initiative: initiative,\n                    inCombat: inCombat,\n                    currentTurn: currentTurn,\n                    partyLoot: partyLoot,\n                    lastUpdate: Date.now()\n                  });\n                  setTokens(newTokens);\n                }\n              };\n            }).concat([{\n              text: 'Cancel',\n              style: 'cancel'\n            }]));\n            return;\n          }\n        }\n        yield set(firebaseRef.current, {\n          tokens: newTokens,\n          layers: layers,\n          initiative: initiative,\n          inCombat: inCombat,\n          currentTurn: currentTurn,\n          partyLoot: partyLoot,\n          lastUpdate: Date.now()\n        });\n        setTokens(newTokens);\n      } catch (error) {\n        console.error('Error updating tokens:', error);\n        Alert.alert('Error', 'Failed to update token');\n      }\n    });\n    return function (_x, _x2) {\n      return _ref15.apply(this, arguments);\n    };\n  }(), [tokens, characters, playerName, layers, initiative, inCombat, currentTurn, partyLoot]);\n  var calculateModifier = function calculateModifier(score) {\n    return Math.floor((score - 10) / 2);\n  };\n  var savePlayerData = useCallback(function () {\n    var _ref16 = _asyncToGenerator(function* (updatedCharacters) {\n      if (!playerName || !roomCode) return;\n      try {\n        var roomPlayerRef = ref(database, \"rooms/\" + roomCode + \"/players/\" + playerName);\n        var globalPlayerRef = ref(database, \"players/\" + playerName);\n        var playerData = {\n          characters: updatedCharacters,\n          lastUpdate: Date.now()\n        };\n        yield Promise.all([set(roomPlayerRef, playerData), set(globalPlayerRef, playerData)]);\n      } catch (error) {\n        console.error('Error saving player data:', error);\n        Alert.alert('Error', 'Failed to save character data');\n      }\n    });\n    return function (_x3) {\n      return _ref16.apply(this, arguments);\n    };\n  }(), [playerName, roomCode]);\n  var connectToRoom = useCallback(function () {\n    var _ref17 = _asyncToGenerator(function* (code) {\n      if (!code.trim() || !playerName) {\n        Alert.alert(\"Error\", \"Please enter a room code and player name\");\n        return;\n      }\n      setIsJoining(true);\n      setIsLoading(true);\n      try {\n        var globalPlayerRef = ref(database, \"players/\" + playerName);\n        var playerSnapshot = yield get(globalPlayerRef);\n        if (playerSnapshot.exists()) {\n          var playerData = playerSnapshot.val();\n          setCharacters(playerData.characters || []);\n        }\n        var gameRef = ref(database, \"rooms/\" + code);\n        firebaseRef.current = gameRef;\n        var snapshot = yield get(gameRef);\n        if (!snapshot.exists()) {\n          yield set(gameRef, initialGameState);\n        }\n        var unsubscribe = onValue(gameRef, function (snapshot) {\n          var data = snapshot.val();\n          if (data) {\n            setTokens(data.tokens || {});\n            setLayers(data.layers || initialGameState.layers);\n            setInitiative(data.initiative || []);\n            setInCombat(data.inCombat || false);\n            setCurrentTurn(data.currentTurn || 0);\n            setPartyLoot(data.partyLoot || initialGameState.partyLoot);\n            if (data.players && data.players[playerName]) {\n              setCharacters(data.players[playerName].characters || []);\n            }\n          }\n        });\n        unsubscribeRef.current = unsubscribe;\n        setRoomCode(code);\n        setShowRoomModal(false);\n        setIsConnected(true);\n      } catch (error) {\n        console.error('Connection error:', error);\n        Alert.alert(\"Error\", \"Failed to join room. Please try again.\");\n        setIsConnected(false);\n      } finally {\n        setIsJoining(false);\n        setIsLoading(false);\n      }\n    });\n    return function (_x4) {\n      return _ref17.apply(this, arguments);\n    };\n  }(), [playerName]);\n  useEffect(function () {\n    var handleOffline = function handleOffline() {\n      Alert.alert('Connection Lost', 'Please check your internet connection', [{\n        text: 'OK'\n      }]);\n    };\n    window.addEventListener('offline', handleOffline);\n    return function () {\n      window.removeEventListener('offline', handleOffline);\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n      }\n    };\n  }, []);\n  var layoutStyles = {\n    sidePanel: {\n      backgroundColor: THEME.background.panel,\n      padding: 15,\n      borderRadius: 10,\n      marginBottom: 15,\n      width: '100%'\n    },\n    sidePanelTitle: {\n      color: THEME.text.light,\n      fontSize: 18,\n      fontWeight: 'bold',\n      marginBottom: 10\n    },\n    buttonRow: {\n      flexDirection: 'row',\n      gap: 10,\n      marginBottom: 10\n    },\n    panelButton: {\n      backgroundColor: THEME.background.primary,\n      padding: 10,\n      borderRadius: 5,\n      alignItems: 'center',\n      flex: 1\n    },\n    panelButtonText: {\n      color: THEME.text.light,\n      fontWeight: 'bold'\n    },\n    characterItem: {\n      backgroundColor: THEME.background.primary,\n      padding: 10,\n      borderRadius: 5,\n      marginBottom: 8\n    },\n    characterInfo: {\n      marginBottom: 5\n    },\n    characterName: {\n      color: THEME.text.light,\n      fontSize: 16,\n      fontWeight: 'bold'\n    },\n    characterDetails: {\n      color: THEME.text.light + '80',\n      fontSize: 12\n    },\n    characterButtons: {\n      flexDirection: 'row',\n      gap: 8\n    },\n    characterButton: {\n      padding: 8,\n      borderRadius: 5,\n      minWidth: 60,\n      alignItems: 'center'\n    },\n    characterButtonText: {\n      color: THEME.text.light,\n      fontSize: 12,\n      fontWeight: 'bold'\n    }\n  };\n  return _jsxs(SafeAreaView, {\n    style: [styles.container, isDarkMode && styles.darkMode],\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(TokenModal, {\n        showTokenModal: showTokenModal,\n        setShowTokenModal: setShowTokenModal,\n        selectedToken: selectedToken,\n        setSelectedToken: setSelectedToken,\n        tokens: tokens,\n        firebaseRef: firebaseRef,\n        initialGameState: initialGameState,\n        layers: layers,\n        initiative: initiative,\n        inCombat: inCombat,\n        currentTurn: currentTurn,\n        THEME: THEME\n      }), _jsx(RoomModal, {\n        showRoomModal: showRoomModal,\n        setShowRoomModal: setShowRoomModal,\n        isConnected: isConnected,\n        roomCode: roomCode,\n        setRoomCode: setRoomCode,\n        isJoining: isJoining,\n        connectToRoom: connectToRoom\n      }), _jsx(PlayerNameModal, {\n        visible: showPlayerNameModal && !playerName,\n        onSubmit: function onSubmit(name) {\n          setPlayerName(name);\n          setShowPlayerNameModal(false);\n          setIsConnected(true);\n        }\n      }), _jsx(PartyLootModal, {\n        visible: showPartyLoot,\n        onClose: function onClose() {\n          return setShowPartyLoot(false);\n        },\n        partyLoot: partyLoot,\n        playerName: playerName,\n        onUpdate: function onUpdate(updatedLoot) {\n          setPartyLoot(updatedLoot);\n          if (firebaseRef.current) {\n            set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n              tokens: tokens,\n              layers: layers,\n              initiative: initiative,\n              inCombat: inCombat,\n              currentTurn: currentTurn,\n              partyLoot: updatedLoot\n            }));\n          }\n        }\n      }), _jsx(CharacterSheetModal, {\n        visible: showCharacterSheet,\n        onClose: function onClose() {\n          return setShowCharacterSheet(false);\n        },\n        character: selectedCharacter || {\n          name: '',\n          class: '',\n          level: 1,\n          owner: playerName,\n          proficiencyBonus: 2,\n          abilityScores: {\n            STR: 10,\n            DEX: 10,\n            CON: 10,\n            INT: 10,\n            WIS: 10,\n            CHA: 10\n          },\n          proficientSkills: [],\n          currency: {\n            CP: 0,\n            SP: 0,\n            EP: 0,\n            GP: 0,\n            PP: 0\n          },\n          items: [],\n          inventory: []\n        },\n        characters: characters,\n        onUpdate: (function () {\n          var _ref18 = _asyncToGenerator(function* (updatedCharacter) {\n            try {\n              if (!updatedCharacter) {\n                throw new Error('No character data to save');\n              }\n              var newCharacters = selectedCharacter ? characters.map(function (char) {\n                return char.name === selectedCharacter.name ? updatedCharacter : char;\n              }) : [].concat(_toConsumableArray(characters), [updatedCharacter]);\n              setCharacters(newCharacters);\n              var playerRef = ref(database, \"players/\" + playerName);\n              yield set(playerRef, {\n                characters: newCharacters,\n                lastUpdate: Date.now()\n              });\n              if (firebaseRef.current) {\n                var roomPlayerRef = ref(database, \"rooms/\" + roomCode + \"/players/\" + playerName);\n                yield set(roomPlayerRef, {\n                  characters: newCharacters,\n                  lastUpdate: Date.now()\n                });\n              }\n              setShowCharacterSheet(false);\n            } catch (error) {\n              console.error('Error saving character:', error);\n              Alert.alert('Error', 'Failed to save character');\n            }\n          });\n          return function (_x5) {\n            return _ref18.apply(this, arguments);\n          };\n        }())\n      }), _jsx(InventoryModal, {\n        visible: showInventory,\n        onClose: function onClose() {\n          return setShowInventory(false);\n        },\n        character: selectedCharacter,\n        onUpdate: (function () {\n          var _ref19 = _asyncToGenerator(function* (updatedCharacter) {\n            try {\n              var newCharacters = characters.map(function (char) {\n                return char.name === selectedCharacter.name ? updatedCharacter : char;\n              });\n              setCharacters(newCharacters);\n              yield savePlayerData(newCharacters);\n              setShowInventory(false);\n            } catch (error) {\n              console.error('Error saving inventory:', error);\n              Alert.alert('Error', 'Failed to save inventory');\n            }\n          });\n          return function (_x6) {\n            return _ref19.apply(this, arguments);\n          };\n        }())\n      }), !isConnected ? _jsx(View, {\n        style: styles.loadingContainer,\n        children: isLoading ? _jsxs(View, {\n          style: {\n            alignItems: 'center'\n          },\n          children: [_jsx(ActivityIndicator, {\n            size: \"large\",\n            color: THEME.accent\n          }), _jsx(Text, {\n            style: [styles.loadingText, {\n              marginTop: 20\n            }],\n            children: \"Connecting to room...\"\n          })]\n        }) : _jsx(Text, {\n          style: styles.loadingText,\n          children: \"Enter a room code to begin\"\n        })\n      }) : _jsxs(_Fragment, {\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"D&D Combat Tracker\"\n          }), _jsxs(ScrollView, {\n            horizontal: isSmallScreen,\n            showsHorizontalScrollIndicator: false,\n            contentContainerStyle: styles.controls,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.primary\n              }],\n              onPress: function onPress() {\n                return setShowRoomModal(true);\n              },\n              children: _jsxs(Text, {\n                style: styles.buttonText,\n                children: [\"Room: \", roomCode]\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.primary\n              }],\n              onPress: handleInitiativeRoll,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Roll Initiative\"\n              })\n            }), inCombat && _jsxs(_Fragment, {\n              children: [_jsx(TouchableOpacity, {\n                style: [styles.controlButton, {\n                  backgroundColor: THEME.success\n                }],\n                onPress: function onPress() {\n                  var nextTurn = (currentTurn + 1) % initiative.length;\n                  setCurrentTurn(nextTurn);\n                  if (firebaseRef.current) {\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: tokens,\n                      layers: layers,\n                      initiative: initiative,\n                      inCombat: true,\n                      currentTurn: nextTurn\n                    }));\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"Next Turn\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: [styles.controlButton, {\n                  backgroundColor: THEME.danger\n                }],\n                onPress: function onPress() {\n                  if (firebaseRef.current) {\n                    set(firebaseRef.current, _objectSpread(_objectSpread({}, initialGameState), {}, {\n                      tokens: tokens,\n                      layers: layers,\n                      initiative: [],\n                      inCombat: false,\n                      currentTurn: 0\n                    }));\n                  }\n                  setInitiative([]);\n                  setInCombat(false);\n                  setCurrentTurn(0);\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"End Combat\"\n                })\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: [styles.controlButton, {\n                backgroundColor: THEME.danger\n              }],\n              onPress: function onPress() {\n                Alert.alert(\"Leave Room\", \"Are you sure you want to leave this room?\", [{\n                  text: \"Cancel\",\n                  style: \"cancel\"\n                }, {\n                  text: \"Leave\",\n                  style: \"destructive\",\n                  onPress: function onPress() {\n                    if (unsubscribeRef.current) {\n                      unsubscribeRef.current();\n                      unsubscribeRef.current = null;\n                    }\n                    if (firebaseRef.current) {\n                      off(firebaseRef.current);\n                      firebaseRef.current = null;\n                    }\n                    setIsConnected(false);\n                    setRoomCode('');\n                    setTokens({});\n                    setInitiative([]);\n                    setInCombat(false);\n                    setCurrentTurn(0);\n                    setPartyLoot(initialGameState.partyLoot);\n                    setShowRoomModal(true);\n                    setShowPlayerNameModal(true);\n                  }\n                }]);\n              },\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Leave Room\"\n              })\n            })]\n          })]\n        }), _jsx(ScrollView, {\n          style: styles.content,\n          children: _jsxs(View, {\n            style: styles.mainArea,\n            children: [_jsxs(View, {\n              style: styles.gridSection,\n              children: [_jsx(ScrollView, {\n                horizontal: true,\n                contentContainerStyle: {\n                  minWidth: '100%'\n                },\n                children: _jsx(ScrollView, {\n                  children: _jsxs(View, {\n                    style: [styles.gridContainer, {\n                      transform: [{\n                        scale: zoomLevel\n                      }]\n                    }],\n                    children: [_jsx(View, {\n                      style: styles.colorPicker,\n                      children: COLORS.map(function (color) {\n                        return _jsx(TouchableOpacity, {\n                          style: [styles.colorButton, {\n                            backgroundColor: color\n                          }, color === currentColor && styles.selectedColor],\n                          onPress: function onPress() {\n                            return setCurrentColor(color);\n                          }\n                        }, color);\n                      })\n                    }), Array.from({\n                      length: GRID_SIZE\n                    }).map(function (_, row) {\n                      return _jsx(View, {\n                        style: styles.row,\n                        children: Array.from({\n                          length: GRID_SIZE\n                        }).map(function (_, col) {\n                          var _initiative$currentTu;\n                          var position = row + \"-\" + col;\n                          var token = tokens[position];\n                          var isCurrentTurn = inCombat && ((_initiative$currentTu = initiative[currentTurn]) == null ? void 0 : _initiative$currentTu.position) === position;\n                          return _jsx(TouchableOpacity, {\n                            style: [styles.cell, token && {\n                              backgroundColor: token.color\n                            }, isCurrentTurn && styles.currentTurn],\n                            onPress: function onPress() {\n                              return handleCellPress(row, col);\n                            },\n                            onLongPress: function onLongPress() {\n                              if (token) {\n                                setSelectedToken(_objectSpread(_objectSpread({}, token), {}, {\n                                  position: position\n                                }));\n                                setShowTokenModal(true);\n                              }\n                            },\n                            children: token && _jsxs(View, {\n                              style: styles.tokenContent,\n                              children: [_jsx(Text, {\n                                style: [styles.tokenText, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                numberOfLines: 1,\n                                children: token.name\n                              }), _jsxs(Text, {\n                                style: [styles.tokenHp, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                children: [token.hp, \"/\", token.maxHp]\n                              }), _jsxs(Text, {\n                                style: [styles.tokenAc, {\n                                  color: token.color === '#ffffff' ? '#000000' : '#ffffff'\n                                }],\n                                children: [\"AC: \", token.ac]\n                              }), token.effects && token.effects.length > 0 && _jsx(View, {\n                                style: statusStyles.tokenEffects,\n                                children: token.effects.map(function (effect) {\n                                  var statusEffect = STATUS_EFFECTS.find(function (e) {\n                                    return e.id === effect;\n                                  });\n                                  return statusEffect ? _jsx(Text, {\n                                    style: statusStyles.effectIcon,\n                                    children: statusEffect.icon\n                                  }, effect) : null;\n                                })\n                              })]\n                            })\n                          }, col);\n                        })\n                      }, row);\n                    })]\n                  })\n                })\n              }), _jsx(GridZoomControls, {\n                zoomLevel: zoomLevel,\n                setZoomLevel: setZoomLevel\n              })]\n            }), _jsxs(View, {\n              style: styles.sidebar,\n              children: [_jsxs(View, {\n                style: layoutStyles.sidePanel,\n                children: [_jsx(Text, {\n                  style: layoutStyles.sidePanelTitle,\n                  children: \"Character Management\"\n                }), _jsxs(View, {\n                  style: layoutStyles.buttonRow,\n                  children: [_jsx(TouchableOpacity, {\n                    style: layoutStyles.panelButton,\n                    onPress: function onPress() {\n                      setSelectedCharacter(null);\n                      setShowCharacterSheet(true);\n                    },\n                    children: _jsx(Text, {\n                      style: layoutStyles.panelButtonText,\n                      children: \"New Character\"\n                    })\n                  }), _jsx(TouchableOpacity, {\n                    style: layoutStyles.panelButton,\n                    onPress: function onPress() {\n                      return setShowPartyLoot(true);\n                    },\n                    children: _jsx(Text, {\n                      style: layoutStyles.panelButtonText,\n                      children: \"Party Loot\"\n                    })\n                  })]\n                }), _jsx(ScrollView, {\n                  style: {\n                    maxHeight: 200\n                  },\n                  children: characters.filter(function (char) {\n                    return char.owner === playerName;\n                  }).map(function (char, index) {\n                    return _jsxs(View, {\n                      style: [layoutStyles.characterItem, {\n                        marginBottom: 8\n                      }],\n                      children: [_jsxs(View, {\n                        style: layoutStyles.characterInfo,\n                        children: [_jsx(Text, {\n                          style: layoutStyles.characterName,\n                          children: char.name\n                        }), _jsxs(Text, {\n                          style: layoutStyles.characterDetails,\n                          children: [\"Level \", char.level, \" \", char.class]\n                        })]\n                      }), _jsxs(View, {\n                        style: layoutStyles.characterButtons,\n                        children: [_jsx(TouchableOpacity, {\n                          style: [layoutStyles.characterButton, {\n                            backgroundColor: THEME.accent\n                          }],\n                          onPress: function onPress() {\n                            setSelectedCharacter(char);\n                            setShowCharacterSheet(true);\n                          },\n                          children: _jsx(Text, {\n                            style: layoutStyles.characterButtonText,\n                            children: \"Sheet\"\n                          })\n                        }), _jsx(TouchableOpacity, {\n                          style: [layoutStyles.characterButton, {\n                            backgroundColor: THEME.success\n                          }],\n                          onPress: function onPress() {\n                            setSelectedCharacter(char);\n                            setShowInventory(true);\n                          },\n                          children: _jsx(Text, {\n                            style: layoutStyles.characterButtonText,\n                            children: \"Loot\"\n                          })\n                        })]\n                      })]\n                    }, index);\n                  })\n                })]\n              }), _jsxs(View, {\n                style: diceStyles.dicePanel,\n                children: [_jsx(Text, {\n                  style: diceStyles.diceTitle,\n                  children: \"Dice Roller\"\n                }), _jsxs(View, {\n                  style: diceStyles.diceControls,\n                  children: [_jsx(View, {\n                    style: diceStyles.controlsRow,\n                    children: _jsxs(View, {\n                      style: diceStyles.controlGroup,\n                      children: [_jsx(TouchableOpacity, {\n                        style: [diceStyles.controlButton, rollType === 'advantage' && diceStyles.controlActive, rollType === 'advantage' && {\n                          backgroundColor: THEME.success\n                        }],\n                        onPress: function onPress() {\n                          return setRollType(function (current) {\n                            return current === 'advantage' ? 'normal' : 'advantage';\n                          });\n                        },\n                        children: _jsx(Text, {\n                          style: styles.buttonText,\n                          children: \"Advantage\"\n                        })\n                      }), _jsx(TouchableOpacity, {\n                        style: [diceStyles.controlButton, rollType === 'disadvantage' && diceStyles.controlActive, rollType === 'disadvantage' && {\n                          backgroundColor: THEME.danger\n                        }],\n                        onPress: function onPress() {\n                          return setRollType(function (current) {\n                            return current === 'disadvantage' ? 'normal' : 'disadvantage';\n                          });\n                        },\n                        children: _jsx(Text, {\n                          style: styles.buttonText,\n                          children: \"Disadvantage\"\n                        })\n                      })]\n                    })\n                  }), _jsxs(View, {\n                    style: diceStyles.controlsRow,\n                    children: [_jsxs(View, {\n                      style: diceStyles.modifierGroup,\n                      children: [_jsx(Text, {\n                        style: diceStyles.modifierLabel,\n                        children: \"Modifier\"\n                      }), _jsx(TextInput, {\n                        style: diceStyles.modifierInput,\n                        value: String(modifier),\n                        onChangeText: function onChangeText(text) {\n                          var num = parseInt(text) || 0;\n                          setModifier(num);\n                        },\n                        keyboardType: \"numeric\",\n                        selectTextOnFocus: true\n                      })]\n                    }), _jsxs(View, {\n                      style: diceStyles.quantityGroup,\n                      children: [_jsx(Text, {\n                        style: diceStyles.quantityLabel,\n                        children: \"Quantity\"\n                      }), _jsx(TextInput, {\n                        style: diceStyles.quantityInput,\n                        value: String(diceQuantity),\n                        onChangeText: function onChangeText(text) {\n                          var num = parseInt(text) || 1;\n                          setDiceQuantity(Math.max(1, Math.min(num, 100)));\n                        },\n                        keyboardType: \"numeric\",\n                        selectTextOnFocus: true\n                      })]\n                    })]\n                  })]\n                }), _jsx(View, {\n                  style: diceStyles.diceGrid,\n                  children: DICE_TYPES.map(function (_ref20) {\n                    var sides = _ref20.sides,\n                      color = _ref20.color;\n                    return _jsx(TouchableOpacity, {\n                      style: [diceStyles.diceButton, {\n                        backgroundColor: color\n                      }],\n                      onPress: function onPress() {\n                        var allRolls = Array.from({\n                          length: diceQuantity\n                        }, function () {\n                          return Math.floor(Math.random() * sides) + 1;\n                        });\n                        var finalRolls = allRolls.map(function (roll) {\n                          if (rollType !== 'normal') {\n                            var secondRoll = Math.floor(Math.random() * sides) + 1;\n                            return rollType === 'advantage' ? Math.max(roll, secondRoll) : Math.min(roll, secondRoll);\n                          }\n                          return roll;\n                        });\n                        var total = finalRolls.reduce(function (sum, roll) {\n                          return sum + roll;\n                        }, 0) + modifier;\n                        var newResult = {\n                          dice: diceQuantity + \"d\" + sides,\n                          rolls: allRolls,\n                          individualTotals: finalRolls,\n                          modifier: modifier,\n                          rollType: rollType,\n                          total: total,\n                          timestamp: Date.now()\n                        };\n                        setCurrentRollResult(newResult);\n                        Vibration.vibrate(50);\n                      },\n                      children: _jsxs(Text, {\n                        style: diceStyles.diceButtonText,\n                        children: [\"d\", sides]\n                      })\n                    }, sides);\n                  })\n                })]\n              }), inCombat && initiative.length > 0 && _jsxs(View, {\n                style: styles.initiativeList,\n                children: [_jsx(Text, {\n                  style: styles.boxTitle,\n                  children: \"Initiative Order\"\n                }), _jsx(ScrollView, {\n                  style: styles.initiativeScroll,\n                  children: initiative.map(function (item, index) {\n                    return _jsx(View, {\n                      style: [styles.initiativeItem, index === currentTurn && styles.currentInitiative],\n                      children: _jsx(Text, {\n                        style: [styles.initiativeText, index === currentTurn && styles.currentInitiativeText],\n                        children: item.details\n                      })\n                    }, item.position);\n                  })\n                })]\n              })]\n            })]\n          })\n        })]\n      })]\n    }), _jsx(DiceResultOverlay, {\n      result: currentRollResult,\n      onClose: function onClose() {\n        return setCurrentRollResult(null);\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useCallback","useEffect","useRef","memo","StyleSheet","View","Text","TouchableOpacity","Pressable","TextInput","ScrollView","Alert","Modal","KeyboardAvoidingView","Platform","SafeAreaView","ActivityIndicator","Keyboard","Vibration","Dimensions","initializeApp","getDatabase","ref","onValue","set","get","off","debounce","GestureScrollView","DiceRoller","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","database","LETTERS","Array","from","length","_","i","String","fromCharCode","COLORS","GRID_SIZE","ABILITY_SCORES","SKILLS","STR","DEX","CON","INT","WIS","CHA","CURRENCY","DICE_TYPES","sides","color","STATUS_EFFECTS","id","name","icon","windowDimensions","isSmallScreen","width","THEME","primary","secondary","accent","gold","danger","success","text","light","dark","background","panel","initialGameState","tokens","layers","grid","terrain","effects","fog","initiative","inCombat","currentTurn","settings","gridSize","showCoordinates","partyLoot","currency","CP","SP","EP","GP","PP","items","currentViewer","characters","lastUpdate","Date","now","styles","create","container","flex","backgroundColor","height","header","padding","title","fontSize","fontWeight","marginBottom","controls","flexDirection","flexWrap","gap","justifyContent","controlButton","borderRadius","minWidth","alignItems","content","mainArea","minHeight","gridSection","sidebar","flexShrink","gridContainer","row","cell","borderWidth","borderColor","tokenContent","tokenText","textAlign","tokenHp","tokenAc","opacity","modalOverlay","modalContainer","modalContent","modalTitle","input","modalButtons","marginTop","modalButton","buttonText","loadingContainer","loadingText","loadingButtonContent","diceBox","diceControls","diceButtons","diceButton","diceHistory","maxHeight","diceResultContainer","borderBottomWidth","borderBottomColor","diceResult","diceTotal","diceRolls","initiativeList","initiativeScroll","initiativeItem","currentInitiative","initiativeText","currentInitiativeText","zoomControls","position","right","bottom","display","zoomButton","advantageButton","advantageActive","modifierInput","boxTitle","colorPicker","colorButton","margin","selectedColor","additionalStyles","characterSheet","maxWidth","sheetHeader","sheetSection","sectionTitle","abilityScores","abilityBox","abilityLabel","abilityScore","abilityMod","skillsList","skillItem","proficientDot","marginRight","skillName","skillMod","closeButton","top","closeButtonText","lootSection","currencyRow","currencyInput","currencyLabel","itemRow","itemInput","removeButton","addButton","lootHeader","itemInfo","addedBy","statsRow","statBox","statLabel","statValue","statInput","currentHp","hpSeparator","diceStyles","dicePanel","diceHeader","diceTitle","controlsRow","controlGroup","controlActive","modifierGroup","modifierLabel","quantityGroup","quantityLabel","quantityInput","diceGrid","diceButtonText","historyContainer","historyScroll","historyItem","paddingVertical","paddingHorizontal","historyLeft","historyInfo","historyDice","historyRolls","historyTotal","clearButton","statusStyles","effectsContainer","borderTopWidth","borderTopColor","paddingTop","effectsTitle","effectsGrid","effectButton","effectActive","effectText","tokenEffects","effectIcon","saveGameState","_ref","_asyncToGenerator","firebaseRef","current","error","console","alert","apply","arguments","CharacterSheetModal","_ref2","visible","onClose","character","onUpdate","_useState","class","level","owner","proficiencyBonus","proficientSkills","inventory","hp","maxHp","ac","_useState2","_slicedToArray","editedCharacter","setEditedCharacter","calculateModifier","score","Math","floor","handleAbilityScoreChange","ability","value","newScore","parseInt","prev","_objectSpread","_defineProperty","toggleProficiency","skill","includes","filter","s","concat","_toConsumableArray","getSkillModifier","profBonus","handleSave","_ref3","updatedCharacter","transparent","animationType","onRequestClose","children","style","onPress","onChangeText","placeholder","placeholderTextColor","keyboardType","selectTextOnFocus","map","maxLength","Object","entries","_ref4","_ref5","skills","quantity","notes","item","index","newItems","TokenModal","_ref6","showTokenModal","setShowTokenModal","selectedToken","setSelectedToken","cursor","dismiss","behavior","select","ios","android","keyboardVerticalOffset","e","stopPropagation","blurOnSubmit","autoComplete","spellCheck","enablesReturnKeyAutomatically","max","initiativeBonus","effect","_selectedToken$effect","currentEffects","newEffects","newTokens","modalStyles","left","zIndex","RoomModal","_ref7","showRoomModal","setShowRoomModal","isConnected","roomCode","setRoomCode","isJoining","connectToRoom","pointerEvents","trim","toLowerCase","autoCapitalize","autoCorrect","editable","autoFocus","disabled","marginLeft","PartyLootModal","_ref8","playerName","_useState3","_useState4","editedLoot","setEditedLoot","type","toString","buttonRow","button","GridZoomControls","_ref9","zoomLevel","setZoomLevel","debouncedZoom","newZoom","min","InventoryModal","_ref10","_useState5","_useState6","editedInventory","setEditedInventory","newInventory","PlayerNameModal","_ref11","onSubmit","_useState7","_useState8","setName","viewerStyles","viewersList","viewersTitle","viewerName","DiceResultOverlay","_ref12","result","timer","setTimeout","clearTimeout","overlayStyles","diceInfo","dice","modifier","rollType","individualTotals","rolls","join","total","App","_useState9","_useState10","_useState11","_useState12","setIsConnected","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","setIsJoining","_useState17","_useState18","isUpdating","setIsUpdating","_useState19","_useState20","_useState21","_useState22","isDarkMode","setIsDarkMode","_useState23","_useState24","_useState25","_useState26","setTokens","_useState27","_useState28","currentColor","setCurrentColor","_useState29","_useState30","setInitiative","_useState31","_useState32","setInCombat","_useState33","_useState34","setCurrentTurn","_useState35","_useState36","setLayers","_useState37","_useState38","setDiceHistory","_useState39","_useState40","advantage","setAdvantage","_useState41","_useState42","setModifier","_useState43","_useState44","_useState45","_useState46","_useState47","_useState48","setPartyLoot","_useState49","_useState50","showPartyLoot","setShowPartyLoot","_useState51","_useState52","diceQuantity","setDiceQuantity","_useState53","_useState54","setCharacters","_useState55","_useState56","showCharacterSheet","setShowCharacterSheet","_useState57","_useState58","selectedCharacter","setSelectedCharacter","_useState59","_useState60","showInventory","setShowInventory","_useState61","_useState62","setPlayerName","_useState63","_useState64","showPlayerNameModal","setShowPlayerNameModal","_useState65","_useState66","setRollType","_useState67","_useState68","currentRollResult","setCurrentRollResult","unsubscribeRef","handleDisconnect","handleInitiativeRoll","keys","_ref13","_ref14","token","roll","random","details","sort","a","b","rollDice","allRolls","d","numRolls","push","finalRoll","grandTotal","reduce","sum","newResult","r","flat","timestamp","slice","vibrate","handleCellPress","_ref15","col","playerCharacters","char","_character$abilitySco","characterId","_char$abilityScores","_x","_x2","savePlayerData","_ref16","updatedCharacters","roomPlayerRef","globalPlayerRef","playerData","Promise","all","_x3","_ref17","code","playerSnapshot","exists","val","gameRef","snapshot","unsubscribe","data","players","_x4","handleOffline","window","addEventListener","removeEventListener","layoutStyles","sidePanel","sidePanelTitle","panelButton","panelButtonText","characterItem","characterInfo","characterName","characterDetails","characterButtons","characterButton","characterButtonText","darkMode","updatedLoot","_ref18","Error","newCharacters","playerRef","_x5","_ref19","_x6","size","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","nextTurn","transform","scale","_initiative$currentTu","isCurrentTurn","onLongPress","numberOfLines","statusEffect","find","num","_ref20","finalRolls","secondRoll"],"sources":["C:/Users/Daniel/Desktop/New folder (6)/3d-dice-main/App.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect, useRef, memo } from 'react';\nimport { \n  StyleSheet, \n  View, \n  Text, \n  TouchableOpacity, \n  Pressable,\n  TextInput, \n  ScrollView, \n  Alert, \n  Modal,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  ActivityIndicator,\n  Keyboard,\n  Vibration,\n  Dimensions\n} from 'react-native';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getDatabase, \n  ref, \n  onValue, \n  set, \n  get, \n  off \n} from 'firebase/database';\nimport { debounce } from 'lodash';\nimport { ScrollView as GestureScrollView } from 'react-native-gesture-handler';\nimport { DiceRoller } from './components/DiceModel';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBSy8ia6vKnq95_gbO7lnohVbyAQzqBtk4\",\n  authDomain: \"dndcombattracker-572b0.firebaseapp.com\",\n  databaseURL: \"https://dndcombattracker-572b0-default-rtdb.firebaseio.com\",\n  projectId: \"dndcombattracker-572b0\",\n  storageBucket: \"dndcombattracker-572b0.firebasestorage.app\",\n  messagingSenderId: \"812186225431\",\n  appId: \"1:812186225431:web:8da48e238d10db01d14552\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\n// Constants\nconst LETTERS = Array.from({ length: 26 }, (_, i) => String.fromCharCode(65 + i));\nconst COLORS = ['#e74c3c', '#3498db', '#2ecc71', '#f1c40f', '#9b59b6', '#1abc9c', '#e67e22', '#ffffff'];\nconst GRID_SIZE = 10;\nconst ABILITY_SCORES = ['STR', 'DEX', 'CON', 'INT', 'WIS', 'CHA'];\nconst SKILLS = {\n  STR: ['Athletics'],\n  DEX: ['Acrobatics', 'Sleight of Hand', 'Stealth'],\n  CON: [],\n  INT: ['Arcana', 'History', 'Investigation', 'Nature', 'Religion'],\n  WIS: ['Animal Handling', 'Insight', 'Medicine', 'Perception', 'Survival'],\n  CHA: ['Deception', 'Intimidation', 'Performance', 'Persuasion']\n};\nconst CURRENCY = ['CP', 'SP', 'EP', 'GP', 'PP'];\nconst DICE_TYPES = [\n  { sides: 4, color: '#FF6B6B' },\n  { sides: 6, color: '#4ECDC4' },\n  { sides: 8, color: '#45B7D1' },\n  { sides: 10, color: '#96CEB4' },\n  { sides: 12, color: '#FFEEAD' },\n  { sides: 20, color: '#D4A5A5' },\n  { sides: 100, color: '#9B59B6' }\n];\nconst STATUS_EFFECTS = [\n  { id: 'blinded', name: 'Blinded', icon: '👁️' },\n  { id: 'charmed', name: 'Charmed', icon: '💕' },\n  { id: 'deafened', name: 'Deafened', icon: '👂' },\n  { id: 'frightened', name: 'Frightened', icon: '😨' },\n  { id: 'grappled', name: 'Grappled', icon: '🤼' },\n  { id: 'incapacitated', name: 'Incapacitated', icon: '💫' },\n  { id: 'invisible', name: 'Invisible', icon: '👻' },\n  { id: 'paralyzed', name: 'Paralyzed', icon: '⚡' },\n  { id: 'petrified', name: 'Petrified', icon: '🗿' },\n  { id: 'poisoned', name: 'Poisoned', icon: '🤢' },\n  { id: 'prone', name: 'Prone', icon: '⬇️' },\n  { id: 'restrained', name: 'Restrained', icon: '⛓️' },\n  { id: 'stunned', name: 'Stunned', icon: '💫' },\n  { id: 'unconscious', name: 'Unconscious', icon: '💤' }\n];\n\n// Get window dimensions\nconst windowDimensions = Dimensions.get('window');\nconst isSmallScreen = windowDimensions.width < 768;\n\n// Theme configuration\nconst THEME = {\n  primary: '#1E1E1E',\n  secondary: '#2D2D2D',\n  accent: '#7289DA',\n  gold: '#FFD700',\n  danger: '#ED4245',\n  success: '#3BA55C',\n  text: {\n    light: '#FFFFFF',\n    dark: '#1E1E1E'\n  },\n  background: {\n    primary: '#1E1E1E',\n    secondary: '#2D2D2D',\n    dark: '#141414',\n    panel: '#363636'\n  }\n};\n\n// Initial game state\nconst initialGameState = {\n  tokens: {},\n  layers: {\n    grid: true,\n    terrain: {},\n    tokens: {},\n    effects: {},\n    fog: {}\n  },\n  initiative: [],\n  inCombat: false,\n  currentTurn: 0,\n  settings: {\n    gridSize: GRID_SIZE,\n    showCoordinates: true,\n  },\n  partyLoot: {\n    currency: { CP: 0, SP: 0, EP: 0, GP: 0, PP: 0 },\n    items: [],\n    currentViewer: null\n  },\n  characters: [],\n  lastUpdate: Date.now()\n};\n\n// Styles\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.background.primary,\n    height: '100%',\n    width: '100%',\n  },\n  header: {\n    padding: isSmallScreen ? 10 : 20,\n    backgroundColor: THEME.background.panel,\n    width: '100%',\n  },\n  title: {\n    fontSize: isSmallScreen ? 18 : 24,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10,\n  },\n  controls: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n    justifyContent: isSmallScreen ? 'center' : 'flex-start',\n  },\n  controlButton: {\n    padding: isSmallScreen ? 8 : 10,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? 80 : 100,\n    alignItems: 'center',\n  },\n  content: {\n    flex: 1,\n    width: '100%',\n  },\n  mainArea: {\n    flex: 1,\n    flexDirection: isSmallScreen ? 'column' : 'row',\n    padding: isSmallScreen ? 10 : 20,\n    gap: 20,\n    minHeight: '100%',\n  },\n  gridSection: {\n    flex: 1,\n    minHeight: isSmallScreen ? 400 : '100%',\n  },\n  sidebar: {\n    width: isSmallScreen ? '100%' : 350,\n    flexShrink: 0,\n  },\n  gridContainer: {\n    padding: isSmallScreen ? 5 : 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  cell: {\n    width: isSmallScreen ? 35 : 60,\n    height: isSmallScreen ? 35 : 60,\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.secondary,\n  },\n  tokenContent: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: isSmallScreen ? 1 : 2,\n  },\n  tokenText: {\n    fontSize: isSmallScreen ? 10 : 12,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tokenHp: {\n    fontSize: isSmallScreen ? 8 : 10,\n    textAlign: 'center',\n  },\n  tokenAc: {\n    fontSize: isSmallScreen ? 8 : 10,\n    textAlign: 'center',\n    opacity: 0.8,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '90%' : 400,\n  },\n  modalTitle: {\n    fontSize: isSmallScreen ? 18 : 20,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 15,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: THEME.accent,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    color: THEME.text.light,\n    backgroundColor: THEME.background.primary,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 15,\n  },\n  modalButton: {\n    padding: 10,\n    borderRadius: 5,\n    minWidth: 100,\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n    fontSize: isSmallScreen ? 12 : 14,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    width: '100%',\n    height: '100%',\n  },\n  loadingText: {\n    color: THEME.text.light,\n    fontSize: 16,\n    marginTop: 10,\n  },\n  loadingButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  diceBox: {\n    width: '100%',\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n  },\n  diceControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  diceButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 5,\n    justifyContent: 'center',\n  },\n  diceButton: {\n    padding: isSmallScreen ? 5 : 10,\n    backgroundColor: THEME.primary,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: isSmallScreen ? 30 : 60,\n  },\n  diceHistory: {\n    maxHeight: isSmallScreen ? 100 : 200,\n    marginTop: 10,\n  },\n  diceResultContainer: {\n    padding: 5,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.accent + '40',\n  },\n  diceResult: {\n    color: THEME.text.light,\n  },\n  diceTotal: {\n    fontWeight: 'bold',\n    color: THEME.accent,\n  },\n  diceRolls: {\n    color: THEME.text.light + '80',\n    fontSize: 12,\n  },\n  initiativeList: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: isSmallScreen ? 8 : 15,\n    width: '100%',\n  },\n  initiativeScroll: {\n    maxHeight: isSmallScreen ? 150 : 200,\n  },\n  initiativeItem: {\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n    backgroundColor: THEME.background.primary,\n  },\n  currentInitiative: {\n    backgroundColor: THEME.accent,\n  },\n  initiativeText: {\n    color: THEME.text.light,\n  },\n  currentInitiativeText: {\n    color: THEME.text.dark,\n    fontWeight: 'bold',\n  },\n  zoomControls: {\n    position: 'absolute',\n    right: 10,\n    bottom: 10,\n    flexDirection: 'row',\n    gap: 10,\n    display: isSmallScreen ? 'flex' : 'none',\n  },\n  zoomButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: THEME.background.panel,\n    justifyContent: 'center',\n    alignItems: 'center',\n    opacity: 0.8,\n  },\n  advantageButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n  },\n  advantageActive: {\n    backgroundColor: THEME.accent,\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.primary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 60,\n    textAlign: 'center',\n  },\n  boxTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  colorPicker: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    gap: isSmallScreen ? 2 : 5,\n    marginBottom: isSmallScreen ? 5 : 10,\n  },\n  colorButton: {\n    width: isSmallScreen ? 20 : 30,\n    height: isSmallScreen ? 20 : 30,\n    borderRadius: isSmallScreen ? 10 : 15,\n    margin: isSmallScreen ? 1 : 2,\n  },\n  selectedColor: {\n    borderWidth: 2,\n    borderColor: THEME.accent,\n  },\n});\n\nconst additionalStyles = StyleSheet.create({\n  characterSheet: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: isSmallScreen ? '95%' : '80%',\n    maxWidth: 800,\n    maxHeight: '90%',\n  },\n  sheetHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n  },\n  sheetSection: {\n    marginBottom: 20,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: THEME.text.light,\n    marginBottom: 10,\n  },\n  abilityScores: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    gap: 10,\n  },\n  abilityBox: {\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: isSmallScreen ? '30%' : 100,\n    marginBottom: 10,\n  },\n  abilityLabel: {\n    color: THEME.text.light,\n    fontWeight: 'bold',\n  },\n  abilityScore: {\n    color: THEME.accent,\n    fontSize: 24,\n    fontWeight: 'bold',\n    width: '100%',\n    textAlign: 'center',\n    padding: 5,\n  },\n  abilityMod: {\n    color: THEME.text.light,\n  },\n  skillsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n  },\n  skillItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: isSmallScreen ? '45%' : 200,\n  },\n  proficientDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginRight: 5,\n  },\n  skillName: {\n    color: THEME.text.light,\n    flex: 1,\n  },\n  skillMod: {\n    color: THEME.accent,\n    fontWeight: 'bold',\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    padding: 10,\n  },\n  closeButtonText: {\n    color: THEME.text.light,\n    fontSize: 20,\n  },\n  lootSection: {\n    backgroundColor: THEME.background.primary,\n    padding: 15,\n    borderRadius: 5,\n    marginBottom: 15,\n  },\n  currencyRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  currencyInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 80,\n    textAlign: 'center',\n  },\n  currencyLabel: {\n    color: THEME.text.light,\n    width: 30,\n  },\n  itemRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n    gap: 10,\n  },\n  itemInput: {\n    flex: 1,\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n  },\n  removeButton: {\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: THEME.danger,\n  },\n  addButton: {\n    backgroundColor: THEME.success,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  lootHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  itemInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n    flex: 1,\n  },\n  addedBy: {\n    color: THEME.text.light,\n    opacity: 0.6,\n    fontSize: 12,\n    marginTop: 4,\n  },\n  statsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 20,\n    gap: 10,\n  },\n  statBox: {\n    backgroundColor: THEME.background.primary,\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n    minWidth: isSmallScreen ? '30%' : 100,\n  },\n  statLabel: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  statValue: {\n    color: THEME.accent,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  statInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: '100%',\n    textAlign: 'center',\n    fontSize: 20,\n    marginTop: 5,\n  },\n  currentHp: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  hpSeparator: {\n    color: THEME.text.light,\n    fontSize: 20,\n  },\n});\n\nconst diceStyles = StyleSheet.create({\n  dicePanel: {\n    backgroundColor: THEME.background.panel,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 15,\n  },\n  diceHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  diceTitle: {\n    color: THEME.text.light,\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  diceControls: {\n    backgroundColor: THEME.background.primary,\n    padding: 10,\n    borderRadius: 8,\n    marginBottom: 15,\n    gap: 10,\n  },\n  controlsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  controlGroup: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  controlButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    minWidth: 80,\n    alignItems: 'center',\n  },\n  controlActive: {\n    backgroundColor: THEME.accent,\n  },\n  modifierGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  modifierLabel: {\n    color: THEME.text.light,\n    fontSize: 14,\n  },\n  modifierInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center',\n  },\n  quantityGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  quantityLabel: {\n    color: THEME.text.light,\n    fontSize: 14,\n  },\n  quantityInput: {\n    backgroundColor: THEME.background.secondary,\n    color: THEME.text.light,\n    padding: 8,\n    borderRadius: 5,\n    width: 50,\n    textAlign: 'center',\n  },\n  diceGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    justifyContent: 'center',\n    marginBottom: 15,\n  },\n  diceButton: {\n    width: isSmallScreen ? 45 : 60,\n    height: isSmallScreen ? 45 : 60,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  diceButtonText: {\n    color: THEME.text.light,\n    fontSize: isSmallScreen ? 14 : 16,\n    fontWeight: 'bold',\n  },\n  historyContainer: {\n    backgroundColor: THEME.background.primary,\n    borderRadius: 8,\n    maxHeight: 200,\n  },\n  historyScroll: {\n    padding: 10,\n  },\n  historyItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: THEME.background.secondary,\n  },\n  historyLeft: {\n    flex: 1,\n  },\n  historyInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 5,\n  },\n  historyDice: {\n    color: THEME.text.light,\n    opacity: 0.7,\n  },\n  historyRolls: {\n    color: THEME.text.light,\n    fontSize: 12,\n    opacity: 0.5,\n  },\n  historyTotal: {\n    color: THEME.accent,\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  clearButton: {\n    backgroundColor: THEME.background.secondary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n});\n\nconst statusStyles = StyleSheet.create({\n  effectsContainer: {\n    marginTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: THEME.accent + '40',\n    paddingTop: 15,\n  },\n  effectsTitle: {\n    color: THEME.text.light,\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  effectsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  effectButton: {\n    backgroundColor: THEME.background.primary,\n    padding: 8,\n    borderRadius: 5,\n    alignItems: 'center',\n    minWidth: 80,\n  },\n  effectActive: {\n    backgroundColor: THEME.accent,\n  },\n  effectText: {\n    color: THEME.text.light,\n    fontSize: 12,\n  },\n  tokenEffects: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 2,\n    marginTop: 2,\n  },\n  effectIcon: {\n    fontSize: isSmallScreen ? 10 : 12,\n  },\n});\n\n// Create a helper function to save game state\nconst saveGameState = async () => {\n  if (firebaseRef.current) {\n    try {\n      await set(firebaseRef.current, {\n        tokens,\n        layers,\n        initiative,\n        inCombat,\n        currentTurn,\n        partyLoot,\n        characters,\n        settings: initialGameState.settings,\n        lastUpdate: Date.now()\n      });\n    } catch (error) {\n      console.error('Error saving game state:', error);\n      Alert.alert('Error', 'Failed to save game state');\n    }\n  }\n};\n\n// Add this component definition before the TokenModal component\nconst CharacterSheetModal = memo(({ visible, onClose, character, characters, onUpdate }) => {\n  const [editedCharacter, setEditedCharacter] = useState(() => ({\n    name: character?.name || '',\n    class: character?.class || '',\n    level: character?.level || 1,\n    owner: character?.owner || '',\n    proficiencyBonus: character?.proficiencyBonus || 2,\n    abilityScores: character?.abilityScores || {\n      STR: 10,\n      DEX: 10,\n      CON: 10,\n      INT: 10,\n      WIS: 10,\n      CHA: 10\n    },\n    proficientSkills: character?.proficientSkills || [],\n    currency: character?.currency || {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: character?.items || [],\n    inventory: character?.inventory || [],\n    hp: character?.hp || 0,\n    maxHp: character?.maxHp || 0,\n    ac: character?.ac || 10,\n  }));\n\n  useEffect(() => {\n    if (visible && character) {\n      setEditedCharacter({\n        name: character.name || '',\n        class: character.class || '',\n        level: character.level || 1,\n        owner: character.owner || '',\n        proficiencyBonus: character.proficiencyBonus || 2,\n        abilityScores: character.abilityScores || {\n          STR: 10,\n          DEX: 10,\n          CON: 10,\n          INT: 10,\n          WIS: 10,\n          CHA: 10\n        },\n        proficientSkills: character.proficientSkills || [],\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: character.items || [],\n        inventory: character.inventory || [],\n        hp: character.hp || 0,\n        maxHp: character.maxHp || 0,\n        ac: character.ac || 10,\n      });\n    }\n  }, [visible, character]);\n\n  // Add error boundary\n  if (!character) {\n    console.error('No character data provided to CharacterSheetModal');\n    return null;\n  }\n\n  const calculateModifier = (score) => {\n    return Math.floor((score - 10) / 2);\n  };\n\n  const handleAbilityScoreChange = (ability, value) => {\n    const newScore = parseInt(value) || 0;\n    setEditedCharacter(prev => ({\n      ...prev,\n      abilityScores: {\n        ...prev.abilityScores,\n        [ability]: newScore\n      }\n    }));\n  };\n\n  const toggleProficiency = (skill) => {\n    setEditedCharacter(prev => ({\n      ...prev,\n      proficientSkills: prev.proficientSkills.includes(skill)\n        ? prev.proficientSkills.filter(s => s !== skill)\n        : [...prev.proficientSkills, skill]\n    }));\n  };\n\n  const getSkillModifier = (skill, ability) => {\n    const abilityMod = calculateModifier(editedCharacter.abilityScores[ability]);\n    const profBonus = editedCharacter.proficientSkills.includes(skill) ? editedCharacter.proficiencyBonus : 0;\n    return abilityMod + profBonus;\n  };\n\n  const handleSave = async () => {\n    try {\n      const updatedCharacter = {\n        ...character,\n        ...editedCharacter\n      };\n\n      onUpdate(updatedCharacter);\n    } catch (error) {\n      console.error('Error saving character:', error);\n      Alert.alert('Error', 'Failed to save character');\n    }\n  };\n\n  if (!visible) return null;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={additionalStyles.characterSheet}>\n          <TouchableOpacity \n            style={additionalStyles.closeButton}\n            onPress={onClose}\n          >\n            <Text style={additionalStyles.closeButtonText}>×</Text>\n          </TouchableOpacity>\n\n          <GestureScrollView>\n            {/* Basic Info */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Character Info</Text>\n              <TextInput\n                style={styles.input}\n                value={editedCharacter.name}\n                onChangeText={(text) => setEditedCharacter(prev => ({...prev, name: text}))}\n                placeholder=\"Character Name\"\n                placeholderTextColor={THEME.text.light + '80'}\n              />\n              <View style={{ flexDirection: 'row', gap: 10 }}>\n                <TextInput\n                  style={[styles.input, { flex: 1 }]}\n                  value={editedCharacter.class}\n                  onChangeText={(text) => setEditedCharacter(prev => ({...prev, class: text}))}\n                  placeholder=\"Class\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                />\n                <TextInput\n                  style={[styles.input, { flex: 1 }]}\n                  value={String(editedCharacter.level)}\n                  onChangeText={(text) => setEditedCharacter(prev => ({...prev, level: parseInt(text) || 1}))}\n                  placeholder=\"Level\"\n                  keyboardType=\"numeric\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                />\n              </View>\n            </View>\n\n            {/* HP and AC Section */}\n            <View style={additionalStyles.sheetSection}>\n              <View style={additionalStyles.statsRow}>\n                <View style={additionalStyles.statBox}>\n                  <Text style={additionalStyles.statLabel}>Hit Points</Text>\n                  <View style={additionalStyles.currentHp}>\n                    <TextInput\n                      style={additionalStyles.statInput}\n                      value={String(editedCharacter.hp)}\n                      onChangeText={(text) => {\n                        const value = parseInt(text) || 0;\n                        setEditedCharacter(prev => ({\n                          ...prev,\n                          hp: value\n                        }));\n                      }}\n                      keyboardType=\"numeric\"\n                      selectTextOnFocus={true}\n                      placeholder=\"Current\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    <Text style={additionalStyles.hpSeparator}>/</Text>\n                    <TextInput\n                      style={additionalStyles.statInput}\n                      value={String(editedCharacter.maxHp)}\n                      onChangeText={(text) => {\n                        const value = parseInt(text) || 0;\n                        setEditedCharacter(prev => ({\n                          ...prev,\n                          maxHp: value\n                        }));\n                      }}\n                      keyboardType=\"numeric\"\n                      selectTextOnFocus={true}\n                      placeholder=\"Max\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                  </View>\n                </View>\n\n                <View style={additionalStyles.statBox}>\n                  <Text style={additionalStyles.statLabel}>Armor Class</Text>\n                  <TextInput\n                    style={additionalStyles.statInput}\n                    value={String(editedCharacter.ac)}\n                    onChangeText={(text) => {\n                      const value = parseInt(text) || 0;\n                      setEditedCharacter(prev => ({\n                        ...prev,\n                        ac: value\n                      }));\n                    }}\n                    keyboardType=\"numeric\"\n                    selectTextOnFocus={true}\n                    placeholder=\"AC\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                </View>\n              </View>\n            </View>\n\n            {/* Ability Scores */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Ability Scores</Text>\n              <View style={additionalStyles.abilityScores}>\n                {ABILITY_SCORES.map(ability => (\n                  <View key={ability} style={additionalStyles.abilityBox}>\n                    <Text style={additionalStyles.abilityLabel}>{ability}</Text>\n                    <TextInput\n                      style={additionalStyles.abilityScore}\n                      value={String(editedCharacter.abilityScores[ability])}\n                      onChangeText={(text) => handleAbilityScoreChange(ability, text)}\n                      keyboardType=\"numeric\"\n                      maxLength={2}\n                      selectTextOnFocus={true}\n                    />\n                    <Text style={additionalStyles.abilityMod}>\n                      {calculateModifier(editedCharacter.abilityScores[ability]) >= 0 ? '+' : ''}\n                      {calculateModifier(editedCharacter.abilityScores[ability])}\n                    </Text>\n                  </View>\n                ))}\n              </View>\n            </View>\n\n            {/* Skills */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Skills</Text>\n              <View style={additionalStyles.skillsList}>\n                {Object.entries(SKILLS).map(([ability, skills]) =>\n                  skills.map(skill => (\n                    <TouchableOpacity\n                      key={skill}\n                      style={additionalStyles.skillItem}\n                      onPress={() => toggleProficiency(skill)}\n                    >\n                      <View style={[\n                        additionalStyles.proficientDot,\n                        {\n                          backgroundColor: editedCharacter.proficientSkills.includes(skill)\n                            ? THEME.accent\n                            : THEME.background.secondary\n                        }\n                      ]} />\n                      <Text style={additionalStyles.skillName}>{skill}</Text>\n                      <Text style={additionalStyles.skillMod}>\n                        {getSkillModifier(skill, ability) >= 0 ? '+' : ''}\n                        {getSkillModifier(skill, ability)}\n                      </Text>\n                    </TouchableOpacity>\n                  ))\n                )}\n              </View>\n            </View>\n\n            {/* Inventory */}\n            <View style={additionalStyles.sheetSection}>\n              <Text style={additionalStyles.sectionTitle}>Inventory</Text>\n              \n              <View style={additionalStyles.lootSection}>\n                {/* Currency */}\n                {CURRENCY.map(currency => (\n                  <View key={currency} style={additionalStyles.currencyRow}>\n                    <Text style={additionalStyles.currencyLabel}>{currency}</Text>\n                    <TextInput\n                      style={additionalStyles.currencyInput}\n                      value={String(editedCharacter.currency[currency] || 0)}\n                      onChangeText={(text) => {\n                        const value = parseInt(text) || 0;\n                        setEditedCharacter(prev => ({\n                          ...prev,\n                          currency: {\n                            ...prev.currency,\n                            [currency]: value\n                          }\n                        }));\n                      }}\n                      keyboardType=\"numeric\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                  </View>\n                ))}\n              </View>\n\n              <View style={additionalStyles.lootSection}>\n                <View style={additionalStyles.lootHeader}>\n                  <Text style={additionalStyles.sectionTitle}>Items</Text>\n                  <TouchableOpacity\n                    style={additionalStyles.addButton}\n                    onPress={() => {\n                      setEditedCharacter(prev => ({\n                        ...prev,\n                        items: [...prev.items, { name: '', quantity: 1, notes: '', addedBy: character.name }]\n                      }));\n                    }}\n                  >\n                    <Text style={styles.buttonText}>Add Item</Text>\n                  </TouchableOpacity>\n                </View>\n\n                {editedCharacter.items.map((item, index) => (\n                  <View key={index} style={additionalStyles.itemRow}>\n                    <View style={additionalStyles.itemInfo}>\n                      <TextInput\n                        style={[additionalStyles.itemInput, { flex: 2 }]}\n                        value={item.name}\n                        onChangeText={(text) => {\n                          const newItems = [...editedCharacter.items];\n                          newItems[index] = { ...item, name: text };\n                          setEditedCharacter(prev => ({ ...prev, items: newItems }));\n                        }}\n                        placeholder=\"Item name\"\n                        placeholderTextColor={THEME.text.light + '80'}\n                      />\n                      <TextInput\n                        style={[additionalStyles.itemInput, { width: 60 }]}\n                        value={String(item.quantity)}\n                        onChangeText={(text) => {\n                          const newItems = [...editedCharacter.items];\n                          newItems[index] = { ...item, quantity: parseInt(text) || 1 };\n                          setEditedCharacter(prev => ({ ...prev, items: newItems }));\n                        }}\n                        keyboardType=\"numeric\"\n                        placeholder=\"Qty\"\n                        placeholderTextColor={THEME.text.light + '80'}\n                      />\n                      {item.addedBy === character.name && (\n                        <TouchableOpacity\n                          style={additionalStyles.removeButton}\n                          onPress={() => {\n                            setEditedCharacter(prev => ({\n                              ...prev,\n                              items: prev.items.filter((_, i) => i !== index)\n                            }));\n                          }}\n                        >\n                          <Text style={styles.buttonText}>×</Text>\n                        </TouchableOpacity>\n                      )}\n                    </View>\n                    <Text style={additionalStyles.addedBy}>Added by: {item.addedBy}</Text>\n                  </View>\n                ))}\n              </View>\n\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.success }]}\n                onPress={handleSave}\n              >\n                <Text style={styles.buttonText}>Save Changes</Text>\n              </TouchableOpacity>\n            </View>\n          </GestureScrollView>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Memoized Modal Components\nconst TokenModal = memo(({ \n  showTokenModal, \n  setShowTokenModal, \n  selectedToken, \n  setSelectedToken, \n  tokens, \n  firebaseRef, \n  initialGameState, \n  layers, \n  initiative, \n  inCombat, \n  currentTurn, \n  THEME \n}) => (\n  <Modal\n    visible={showTokenModal}\n    transparent={true}\n    animationType=\"fade\"\n    onRequestClose={() => setShowTokenModal(false)}\n  >\n    <Pressable \n      style={[styles.modalOverlay, { cursor: 'default' }]}\n      onPress={() => Keyboard.dismiss()}\n    >\n      <View style={styles.modalContent}>\n        <KeyboardAvoidingView \n          behavior={Platform.select({ ios: 'padding', android: 'height' })}\n          style={styles.modalContainer}\n          keyboardVerticalOffset={Platform.select({ ios: 64, android: 0 })}\n        >\n          <Pressable onPress={e => e.stopPropagation()}>\n            <Text style={styles.modalTitle}>Edit Token</Text>\n            <TextInput\n              style={styles.input}\n              value={selectedToken?.name}\n              onChangeText={(text) => {\n                setSelectedToken(prev => ({\n                  ...prev,\n                  name: text\n                }));\n              }}\n              placeholder=\"Token Name\"\n              placeholderTextColor={THEME.text.light + '80'}\n              blurOnSubmit={false}\n              autoComplete=\"off\"\n              spellCheck={false}\n              selectTextOnFocus={true}\n              enablesReturnKeyAutomatically={true}\n            />\n            \n            <View style={{ flexDirection: 'row', gap: 10, marginBottom: 10 }}>\n              <View style={{ flex: 1 }}>\n                <TextInput\n                  style={styles.input}\n                  value={String(selectedToken?.hp || '')}\n                  onChangeText={(text) => {\n                    const hp = parseInt(text) || 0;\n                    setSelectedToken(prev => ({\n                      ...prev,\n                      hp: Math.max(0, hp)\n                    }));\n                  }}\n                  keyboardType=\"numeric\"\n                  placeholder=\"Current HP\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                  blurOnSubmit={false}\n                  autoComplete=\"off\"\n                  selectTextOnFocus={true}\n                  enablesReturnKeyAutomatically={true}\n                />\n              </View>\n              <View style={{ flex: 1 }}>\n                <TextInput\n                  style={styles.input}\n                  value={String(selectedToken?.maxHp || '')}\n                  onChangeText={(text) => {\n                    const maxHp = parseInt(text) || 1;\n                    setSelectedToken(prev => ({\n                      ...prev,\n                      maxHp: Math.max(1, maxHp)\n                    }));\n                  }}\n                  keyboardType=\"numeric\"\n                  placeholder=\"Max HP\"\n                  placeholderTextColor={THEME.text.light + '80'}\n                  blurOnSubmit={false}\n                  autoComplete=\"off\"\n                  selectTextOnFocus={true}\n                  enablesReturnKeyAutomatically={true}\n                />\n              </View>\n            </View>\n\n            <TextInput\n              style={styles.input}\n              value={String(selectedToken?.initiativeBonus || '0')}\n              onChangeText={(text) => {\n                setSelectedToken(prev => ({\n                  ...prev,\n                  initiativeBonus: parseInt(text) || 0\n                }));\n              }}\n              keyboardType=\"numeric\"\n              placeholder=\"Initiative Bonus\"\n              placeholderTextColor={THEME.text.light + '80'}\n              blurOnSubmit={false}\n              autoComplete=\"off\"\n              selectTextOnFocus={true}\n              enablesReturnKeyAutomatically={true}\n            />\n\n            <View style={statusStyles.effectsContainer}>\n              <Text style={statusStyles.effectsTitle}>Status Effects</Text>\n              <View style={statusStyles.effectsGrid}>\n                {STATUS_EFFECTS.map(effect => (\n                  <TouchableOpacity\n                    key={effect.id}\n                    style={[\n                      statusStyles.effectButton,\n                      selectedToken?.effects?.includes(effect.id) && statusStyles.effectActive\n                    ]}\n                    onPress={() => {\n                      setSelectedToken(prev => {\n                        const currentEffects = prev.effects || [];\n                        const newEffects = currentEffects.includes(effect.id)\n                          ? currentEffects.filter(e => e !== effect.id)\n                          : [...currentEffects, effect.id];\n                        return {\n                          ...prev,\n                          effects: newEffects\n                        };\n                      });\n                    }}\n                  >\n                    <Text style={statusStyles.effectText}>\n                      {effect.icon} {effect.name}\n                    </Text>\n                  </TouchableOpacity>\n                ))}\n              </View>\n            </View>\n\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.danger }]}\n                onPress={() => {\n                  if (firebaseRef.current && selectedToken) {\n                    const newTokens = { ...tokens };\n                    delete newTokens[selectedToken.position];\n                    set(firebaseRef.current, { \n                      ...initialGameState,\n                      tokens: newTokens,\n                      layers,\n                      initiative,\n                      inCombat,\n                      currentTurn\n                    });\n                    setShowTokenModal(false);\n                  }\n                }}\n              >\n                <Text style={styles.buttonText}>Delete</Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                style={[styles.modalButton, { backgroundColor: THEME.success }]}\n                onPress={() => {\n                  if (firebaseRef.current && selectedToken) {\n                    const newTokens = {\n                      ...tokens,\n                      [selectedToken.position]: selectedToken\n                    };\n                    set(firebaseRef.current, {\n                      ...initialGameState,\n                      tokens: newTokens,\n                      layers,\n                      initiative,\n                      inCombat,\n                      currentTurn\n                    });\n                    setShowTokenModal(false);\n                  }\n                }}\n              >\n                <Text style={styles.buttonText}>Save</Text>\n              </TouchableOpacity>\n            </View>\n          </Pressable>\n        </KeyboardAvoidingView>\n      </View>\n    </Pressable>\n  </Modal>\n));\n\n// Update the RoomModal styles\nconst modalStyles = StyleSheet.create({\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000, // Add high z-index\n  },\n  modalContent: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    width: '90%',\n    maxWidth: 400,\n    zIndex: 1001, // Even higher z-index\n  },\n});\n\n// Update the RoomModal component\nconst RoomModal = memo(({ \n  showRoomModal, \n  setShowRoomModal, \n  isConnected, \n  roomCode, \n  setRoomCode, \n  isJoining, \n  connectToRoom \n}) => (\n  <Modal\n    visible={showRoomModal}\n    transparent={true}\n    animationType=\"fade\"\n    onRequestClose={() => {}}\n    style={{ zIndex: 999 }} // Add z-index to Modal\n  >\n    <View style={[modalStyles.modalOverlay, { pointerEvents: 'auto' }]}>\n      <View style={modalStyles.modalContent}>\n        <Text style={styles.modalTitle}>Join Room</Text>\n        <TextInput\n          style={[styles.input, { marginBottom: 15, zIndex: 1002 }]} // Add z-index to input\n          value={roomCode}\n          onChangeText={(text) => {\n            setRoomCode(text.trim().toLowerCase());\n          }}\n          placeholder=\"Enter room code...\"\n          placeholderTextColor={THEME.text.light + '80'}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          editable={!isJoining}\n          autoFocus={true}\n          blurOnSubmit={false}\n        />\n        <TouchableOpacity\n          style={[\n            styles.modalButton,\n            { \n              backgroundColor: isJoining ? THEME.background.secondary : THEME.success,\n              width: '100%',\n              zIndex: 1002 // Add z-index to button\n            }\n          ]}\n          onPress={() => {\n            Keyboard.dismiss();\n            connectToRoom(roomCode);\n          }}\n          disabled={isJoining}\n        >\n          {isJoining ? (\n            <View style={styles.loadingButtonContent}>\n              <ActivityIndicator color={THEME.text.light} />\n              <Text style={[styles.buttonText, { marginLeft: 10 }]}>\n                Connecting...\n              </Text>\n            </View>\n          ) : (\n            <Text style={styles.buttonText}>Join Room</Text>\n          )}\n        </TouchableOpacity>\n      </View>\n    </View>\n  </Modal>\n));\n\nconst PartyLootModal = memo(({ visible, onClose, partyLoot, onUpdate, playerName }) => {\n  const [editedLoot, setEditedLoot] = useState({\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: []\n  });\n\n  useEffect(() => {\n    if (visible && partyLoot) {\n      setEditedLoot({\n        currency: partyLoot.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        items: partyLoot.items || []\n      });\n    }\n  }, [visible, partyLoot]);\n\n  if (!visible) return null;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={[styles.modalContent, { maxHeight: '90%' }]}>\n          <Text style={styles.modalTitle}>Party Loot</Text>\n          \n          <ScrollView>\n            {/* Currency Section */}\n            <View style={additionalStyles.lootSection}>\n              {CURRENCY.map(type => (\n                <View key={type} style={additionalStyles.currencyRow}>\n                  <Text style={additionalStyles.currencyLabel}>{type}</Text>\n                  <TextInput\n                    style={additionalStyles.currencyInput}\n                    value={String(editedLoot.currency[type] || 0)}\n                    onChangeText={(text) => {\n                      const value = parseInt(text) || 0;\n                      setEditedLoot(prev => ({\n                        ...prev,\n                        currency: {\n                          ...prev.currency,\n                          [type]: value\n                        }\n                      }));\n                    }}\n                    keyboardType=\"numeric\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                </View>\n              ))}\n            </View>\n\n            {/* Items Section */}\n            <View style={additionalStyles.lootSection}>\n              <View style={additionalStyles.lootHeader}>\n                <Text style={additionalStyles.sectionTitle}>Items</Text>\n                <TouchableOpacity\n                  style={additionalStyles.addButton}\n                  onPress={() => {\n                    setEditedLoot(prev => ({\n                      ...prev,\n                      items: [...prev.items, { \n                        id: Date.now().toString(),\n                        name: '',\n                        quantity: 1,\n                        addedBy: playerName \n                      }]\n                    }));\n                  }}\n                >\n                  <Text style={styles.buttonText}>Add Item</Text>\n                </TouchableOpacity>\n              </View>\n\n              {editedLoot.items.map((item, index) => (\n                <View key={item.id || index} style={additionalStyles.itemRow}>\n                  <TextInput\n                    style={[additionalStyles.itemInput, { flex: 2 }]}\n                    value={item.name}\n                    onChangeText={(text) => {\n                      const newItems = [...editedLoot.items];\n                      newItems[index] = { ...item, name: text };\n                      setEditedLoot(prev => ({ ...prev, items: newItems }));\n                    }}\n                    placeholder=\"Item name\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                  <TextInput\n                    style={[additionalStyles.itemInput, { width: 60 }]}\n                    value={String(item.quantity)}\n                    onChangeText={(text) => {\n                      const newItems = [...editedLoot.items];\n                      newItems[index] = { ...item, quantity: parseInt(text) || 1 };\n                      setEditedLoot(prev => ({ ...prev, items: newItems }));\n                    }}\n                    keyboardType=\"numeric\"\n                    placeholder=\"Qty\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                  <TouchableOpacity\n                    style={additionalStyles.removeButton}\n                    onPress={() => {\n                      setEditedLoot(prev => ({\n                        ...prev,\n                        items: prev.items.filter((_, i) => i !== index)\n                      }));\n                    }}\n                  >\n                    <Text style={styles.buttonText}>×</Text>\n                  </TouchableOpacity>\n                </View>\n              ))}\n            </View>\n          </ScrollView>\n\n          <View style={styles.buttonRow}>\n            <TouchableOpacity\n              style={[styles.button, styles.closeButton]}\n              onPress={onClose}\n            >\n              <Text style={styles.buttonText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.button, { backgroundColor: THEME.success }]}\n              onPress={() => {\n                onUpdate(editedLoot);\n                onClose();\n              }}\n            >\n              <Text style={styles.buttonText}>Save Changes</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add this component definition before the App component\nconst GridZoomControls = memo(({ zoomLevel, setZoomLevel }) => {\n  const debouncedZoom = debounce((newZoom) => {\n    setZoomLevel(newZoom);\n  }, 100);\n\n  return (\n    <View style={styles.zoomControls}>\n      <TouchableOpacity\n        style={styles.zoomButton}\n        onPress={() => debouncedZoom(Math.max(0.5, zoomLevel - 0.1))}\n      >\n        <Text style={styles.buttonText}>-</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.zoomButton}\n        onPress={() => debouncedZoom(Math.min(2, zoomLevel + 0.1))}\n      >\n        <Text style={styles.buttonText}>+</Text>\n      </TouchableOpacity>\n    </View>\n  );\n});\n\n// Add InventoryModal component\nconst InventoryModal = memo(({ visible, onClose, character, onUpdate }) => {\n  const [editedInventory, setEditedInventory] = useState({\n    currency: character?.currency || {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    inventory: character?.inventory || []\n  });\n\n  useEffect(() => {\n    if (visible && character) {\n      setEditedInventory({\n        currency: character.currency || {\n          CP: 0,\n          SP: 0,\n          EP: 0,\n          GP: 0,\n          PP: 0\n        },\n        inventory: character.inventory || []\n      });\n    }\n  }, [visible, character]);\n\n  if (!visible || !character) return null;\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={additionalStyles.characterSheet}>\n          <TouchableOpacity \n            style={additionalStyles.closeButton}\n            onPress={onClose}\n          >\n            <Text style={additionalStyles.closeButtonText}>×</Text>\n          </TouchableOpacity>\n\n          <Text style={additionalStyles.sectionTitle}>{character.name}'s Inventory</Text>\n\n          <GestureScrollView>\n            <View style={additionalStyles.lootSection}>\n              {/* Currency */}\n              {CURRENCY.map(currency => (\n                <View key={currency} style={additionalStyles.currencyRow}>\n                  <Text style={additionalStyles.currencyLabel}>{currency}</Text>\n                  <TextInput\n                    style={additionalStyles.currencyInput}\n                    value={String(editedInventory.currency[currency] || 0)}\n                    onChangeText={(text) => {\n                      const value = parseInt(text) || 0;\n                      setEditedInventory(prev => ({\n                        ...prev,\n                        currency: {\n                          ...prev.currency,\n                          [currency]: value\n                        }\n                      }));\n                    }}\n                    keyboardType=\"numeric\"\n                    placeholderTextColor={THEME.text.light + '80'}\n                  />\n                </View>\n              ))}\n            </View>\n\n            <View style={additionalStyles.lootSection}>\n              <View style={additionalStyles.lootHeader}>\n                <Text style={additionalStyles.sectionTitle}>Items</Text>\n                <TouchableOpacity\n                  style={additionalStyles.addButton}\n                  onPress={() => {\n                    setEditedInventory(prev => ({\n                      ...prev,\n                      inventory: [...prev.inventory, { name: '', quantity: 1, notes: '', addedBy: character.name }]\n                    }));\n                  }}\n                >\n                  <Text style={styles.buttonText}>Add Item</Text>\n                </TouchableOpacity>\n              </View>\n\n              {editedInventory.inventory.map((item, index) => (\n                <View key={index} style={additionalStyles.itemRow}>\n                  <View style={additionalStyles.itemInfo}>\n                    <TextInput\n                      style={[additionalStyles.itemInput, { flex: 2 }]}\n                      value={item.name}\n                      onChangeText={(text) => {\n                        const newInventory = [...editedInventory.inventory];\n                        newInventory[index] = { ...item, name: text };\n                        setEditedInventory(prev => ({ ...prev, inventory: newInventory }));\n                      }}\n                      placeholder=\"Item name\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    <TextInput\n                      style={[additionalStyles.itemInput, { width: 60 }]}\n                      value={String(item.quantity)}\n                      onChangeText={(text) => {\n                        const newInventory = [...editedInventory.inventory];\n                        newInventory[index] = { ...item, quantity: parseInt(text) || 1 };\n                        setEditedInventory(prev => ({ ...prev, inventory: newInventory }));\n                      }}\n                      keyboardType=\"numeric\"\n                      placeholder=\"Qty\"\n                      placeholderTextColor={THEME.text.light + '80'}\n                    />\n                    {item.addedBy === character.name && (\n                      <TouchableOpacity\n                        style={additionalStyles.removeButton}\n                        onPress={() => {\n                          setEditedInventory(prev => ({\n                            ...prev,\n                            inventory: prev.inventory.filter((_, i) => i !== index)\n                          }));\n                        }}\n                      >\n                        <Text style={styles.buttonText}>×</Text>\n                      </TouchableOpacity>\n                    )}\n                  </View>\n                  <Text style={additionalStyles.addedBy}>Added by: {item.addedBy}</Text>\n                </View>\n              ))}\n            </View>\n\n            <TouchableOpacity\n              style={[styles.modalButton, { backgroundColor: THEME.success }]}\n              onPress={() => {\n                onUpdate({\n                  ...character,\n                  currency: editedInventory.currency,\n                  inventory: editedInventory.inventory\n                });\n                onClose();\n              }}\n            >\n              <Text style={styles.buttonText}>Save Changes</Text>\n            </TouchableOpacity>\n          </GestureScrollView>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add PlayerNameModal component\nconst PlayerNameModal = memo(({ visible, onSubmit }) => {\n  const [name, setName] = useState('');\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={() => {}}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Enter Your Name</Text>\n          <TextInput\n            style={styles.input}\n            value={name}\n            onChangeText={setName}\n            placeholder=\"Your name\"\n            placeholderTextColor={THEME.text.light + '80'}\n            autoCapitalize=\"words\"\n          />\n          <TouchableOpacity\n            style={[styles.modalButton, { \n              backgroundColor: THEME.success,\n              width: '100%',\n              marginTop: 10\n            }]}\n            onPress={() => onSubmit(name)}\n            disabled={!name.trim()}\n          >\n            <Text style={styles.buttonText}>Continue</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n});\n\n// Add to styles\nconst viewerStyles = StyleSheet.create({\n  viewersList: {\n    marginTop: 15,\n    padding: 10,\n    backgroundColor: THEME.background.primary,\n    borderRadius: 5,\n  },\n  viewersTitle: {\n    color: THEME.text.light,\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  viewerName: {\n    color: THEME.text.light,\n    opacity: 0.8,\n    fontSize: 12,\n    marginBottom: 2,\n  },\n});\n\n// Add this new component near the top with other components\nconst DiceResultOverlay = memo(({ result, onClose }) => {\n  useEffect(() => {\n    const timer = setTimeout(onClose, 2000); // Auto-hide after 2 seconds\n    return () => clearTimeout(timer);\n  }, [onClose]);\n\n  if (!result) return null;\n\n  return (\n    <View style={overlayStyles.container}>\n      <View style={overlayStyles.content}>\n        <Text style={overlayStyles.diceInfo}>\n          {result.dice}\n          {result.modifier ? ` + ${result.modifier}` : ''}\n          {result.rollType === 'advantage' ? ' (Adv)' : \n           result.rollType === 'disadvantage' ? ' (Dis)' : ''}\n        </Text>\n        {result.individualTotals && result.individualTotals.length > 1 && (\n          <Text style={overlayStyles.rolls}>\n            [{result.individualTotals.join(', ')}]\n          </Text>\n        )}\n        <Text style={overlayStyles.total}>{result.total}</Text>\n      </View>\n    </View>\n  );\n});\n\n// Add these styles\nconst overlayStyles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n  content: {\n    backgroundColor: THEME.background.panel,\n    padding: 20,\n    borderRadius: 10,\n    alignItems: 'center',\n    minWidth: 150,\n  },\n  diceInfo: {\n    color: THEME.text.light,\n    fontSize: 18,\n    marginBottom: 5,\n  },\n  rolls: {\n    color: THEME.text.light,\n    opacity: 0.7,\n    marginBottom: 5,\n  },\n  total: {\n    color: THEME.accent,\n    fontSize: 32,\n    fontWeight: 'bold',\n  },\n});\n\nexport default function App() {\n  // State declarations\n  const [roomCode, setRoomCode] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isJoining, setIsJoining] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [showRoomModal, setShowRoomModal] = useState(true);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [zoomLevel, setZoomLevel] = useState(isSmallScreen ? 0.8 : 1);\n  const [tokens, setTokens] = useState({});\n  const [currentColor, setCurrentColor] = useState(COLORS[0]);\n  const [initiative, setInitiative] = useState([]);\n  const [inCombat, setInCombat] = useState(false);\n  const [currentTurn, setCurrentTurn] = useState(0);\n  const [layers, setLayers] = useState(initialGameState.layers);\n  const [diceHistory, setDiceHistory] = useState([]);\n  const [advantage, setAdvantage] = useState(false);\n  const [modifier, setModifier] = useState(0);\n  const [selectedToken, setSelectedToken] = useState(null);\n  const [showTokenModal, setShowTokenModal] = useState(false);\n  const [partyLoot, setPartyLoot] = useState({\n    currency: {\n      CP: 0,\n      SP: 0,\n      EP: 0,\n      GP: 0,\n      PP: 0\n    },\n    items: [],\n    currentViewer: null\n  });\n  const [showPartyLoot, setShowPartyLoot] = useState(false);\n  const [diceQuantity, setDiceQuantity] = useState(1);\n  const [characters, setCharacters] = useState([]);\n  const [showCharacterSheet, setShowCharacterSheet] = useState(false);\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\n  const [showInventory, setShowInventory] = useState(false);\n  const [playerName, setPlayerName] = useState('');\n  const [showPlayerNameModal, setShowPlayerNameModal] = useState(true);\n  const [rollType, setRollType] = useState('normal'); // 'normal', 'advantage', or 'disadvantage'\n  const [currentRollResult, setCurrentRollResult] = useState(null);\n\n  // Refs\n  const firebaseRef = useRef(null);\n  const unsubscribeRef = useRef(null);\n\n  // Helper Functions\n  const handleDisconnect = useCallback(() => {\n    try {\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n        unsubscribeRef.current = null;\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n        firebaseRef.current = null;\n      }\n\n      // Reset room-specific state\n      setIsConnected(false);\n      setRoomCode('');\n      setTokens({});\n      setLayers(initialGameState.layers);\n      setInitiative([]);\n      setInCombat(false);\n      setCurrentTurn(0);\n      setDiceHistory([]);\n      setAdvantage(false);\n      setModifier(0);\n      setSelectedToken(null);\n      setShowTokenModal(false);\n      setPartyLoot(initialGameState.partyLoot);\n      setZoomLevel(isSmallScreen ? 0.8 : 1);\n      // Don't clear characters or player name\n      \n    } catch (error) {\n      console.error('Error during disconnect:', error);\n      Alert.alert('Error', 'Failed to leave room properly. Please try again.');\n    }\n  }, []);\n\n  const handleInitiativeRoll = useCallback(() => {\n    if (!tokens || Object.keys(tokens).length === 0) {\n      Alert.alert('Error', 'No tokens on the board');\n      return;\n    }\n\n    const rolls = Object.entries(tokens).map(([position, token]) => {\n      const roll = Math.floor(Math.random() * 20) + 1;\n      const initiative = roll + (token.initiativeBonus || 0);\n      return {\n        position,\n        initiative,\n        details: `${token.name} (${initiative})`\n      };\n    });\n\n    rolls.sort((a, b) => b.initiative - a.initiative);\n    \n    if (firebaseRef.current) {\n      set(firebaseRef.current, {\n        ...initialGameState,\n        tokens,\n        layers,\n        initiative: rolls,\n        inCombat: true,\n        currentTurn: 0\n      });\n    }\n\n    setInitiative(rolls);\n    setInCombat(true);\n    setCurrentTurn(0);\n  }, [tokens, layers]);\n\n  const rollDice = useCallback((sides) => {\n    const allRolls = [];\n    \n    // Roll for each die in quantity\n    for (let d = 0; d < diceQuantity; d++) {\n      const rolls = [];\n      const numRolls = rollType !== 'normal' ? 2 : 1;\n      \n      // Roll with advantage/disadvantage if enabled\n      for (let i = 0; i < numRolls; i++) {\n        rolls.push(Math.floor(Math.random() * sides) + 1);\n      }\n      \n      const finalRoll = rollType === 'advantage' \n        ? Math.max(...rolls) \n        : rollType === 'disadvantage'\n          ? Math.min(...rolls)\n          : rolls[0];\n\n      allRolls.push({\n        rolls,\n        total: finalRoll\n      });\n    }\n    \n    // Calculate grand total including modifier\n    const grandTotal = allRolls.reduce((sum, roll) => sum + roll.total, 0) + modifier;\n    \n    const newResult = {\n      dice: `${diceQuantity}d${sides}`,\n      rolls: allRolls.map(r => r.rolls).flat(),\n      individualTotals: allRolls.map(r => r.total),\n      modifier,\n      rollType,\n      total: grandTotal,\n      timestamp: Date.now()\n    };\n    \n    setDiceHistory(prev => [newResult, ...prev.slice(0, 49)]);\n    Vibration.vibrate(50);\n  }, [rollType, modifier, diceQuantity]);\n\n  // Update handleCellPress function\n  const handleCellPress = useCallback(async (row, col) => {\n    if (!firebaseRef.current) return;\n    \n    try {\n      const position = `${row}-${col}`;\n      const newTokens = { ...tokens };\n      \n      if (tokens[position]) {\n        // Only allow deletion if the token belongs to the player\n        if (tokens[position].owner === playerName) {\n          delete newTokens[position];\n        } else {\n          Alert.alert('Error', 'You can only remove your own tokens');\n          return;\n        }\n      } else {\n        // Get the player's characters\n        const playerCharacters = characters.filter(char => char.owner === playerName);\n        \n        if (playerCharacters.length === 0) {\n          Alert.alert('Error', 'Create a character first to place a token');\n          return;\n        }\n\n        // If player has only one character, use it automatically\n        if (playerCharacters.length === 1) {\n          const character = playerCharacters[0];\n          newTokens[position] = {\n            name: character.name,\n            color: COLORS[0], // You might want to store a preferred color in character data\n            hp: character.hp || 0,\n            maxHp: character.maxHp || 0,\n            ac: character.ac || 10,\n            initiativeBonus: calculateModifier(character.abilityScores?.DEX || 10),\n            effects: [],\n            position,\n            owner: playerName,\n            characterId: character.name // Using name as ID since it should be unique per player\n          };\n        } else {\n          // If player has multiple characters, show a selection dialog\n          Alert.alert(\n            'Select Character',\n            'Which character would you like to place?',\n            playerCharacters.map(char => ({\n              text: char.name,\n              onPress: () => {\n                newTokens[position] = {\n                  name: char.name,\n                  color: COLORS[0],\n                  hp: char.hp || 0,\n                  maxHp: char.maxHp || 0,\n                  ac: char.ac || 10,\n                  initiativeBonus: calculateModifier(char.abilityScores?.DEX || 10),\n                  effects: [],\n                  position,\n                  owner: playerName,\n                  characterId: char.name\n                };\n                \n                // Update Firebase\n                set(firebaseRef.current, {\n                  tokens: newTokens,\n                  layers,\n                  initiative,\n                  inCombat,\n                  currentTurn,\n                  partyLoot,\n                  lastUpdate: Date.now()\n                });\n                \n                // Update local state\n                setTokens(newTokens);\n              }\n            })).concat([\n              {\n                text: 'Cancel',\n                style: 'cancel'\n              }\n            ])\n          );\n          return; // Return early since the update will happen in the alert callback\n        }\n      }\n\n      // Update Firebase\n      await set(firebaseRef.current, {\n        tokens: newTokens,\n        layers,\n        initiative,\n        inCombat,\n        currentTurn,\n        partyLoot,\n        lastUpdate: Date.now()\n      });\n\n      // Update local state\n      setTokens(newTokens);\n\n    } catch (error) {\n      console.error('Error updating tokens:', error);\n      Alert.alert('Error', 'Failed to update token');\n    }\n  }, [tokens, characters, playerName, layers, initiative, inCombat, currentTurn, partyLoot]);\n\n  // Add this helper function near the top of your file with other helper functions\n  const calculateModifier = (score) => {\n    return Math.floor((score - 10) / 2);\n  };\n\n  // Update the savePlayerData function\n  const savePlayerData = useCallback(async (updatedCharacters) => {\n    if (!playerName || !roomCode) return;\n    \n    try {\n      // Save to both the room and a separate players collection\n      const roomPlayerRef = ref(database, `rooms/${roomCode}/players/${playerName}`);\n      const globalPlayerRef = ref(database, `players/${playerName}`);\n      \n      const playerData = {\n        characters: updatedCharacters,\n        lastUpdate: Date.now()\n      };\n\n      // Update both locations\n      await Promise.all([\n        set(roomPlayerRef, playerData),\n        set(globalPlayerRef, playerData)\n      ]);\n    } catch (error) {\n      console.error('Error saving player data:', error);\n      Alert.alert('Error', 'Failed to save character data');\n    }\n  }, [playerName, roomCode]);\n\n  // Update the connectToRoom function\n  const connectToRoom = useCallback(async (code) => {\n    if (!code.trim() || !playerName) {\n      Alert.alert(\"Error\", \"Please enter a room code and player name\");\n      return;\n    }\n\n    setIsJoining(true);\n    setIsLoading(true);\n\n    try {\n      // First try to load player's global data\n      const globalPlayerRef = ref(database, `players/${playerName}`);\n      const playerSnapshot = await get(globalPlayerRef);\n      if (playerSnapshot.exists()) {\n        const playerData = playerSnapshot.val();\n        setCharacters(playerData.characters || []);\n      }\n\n      const gameRef = ref(database, `rooms/${code}`);\n      firebaseRef.current = gameRef;\n\n      // Check if room exists\n      const snapshot = await get(gameRef);\n      if (!snapshot.exists()) {\n        await set(gameRef, initialGameState);\n      }\n\n      // Set up real-time listener\n      const unsubscribe = onValue(gameRef, (snapshot) => {\n        const data = snapshot.val();\n        if (data) {\n          setTokens(data.tokens || {});\n          setLayers(data.layers || initialGameState.layers);\n          setInitiative(data.initiative || []);\n          setInCombat(data.inCombat || false);\n          setCurrentTurn(data.currentTurn || 0);\n          setPartyLoot(data.partyLoot || initialGameState.partyLoot);\n          \n          // Update characters from room data if they exist\n          if (data.players && data.players[playerName]) {\n            setCharacters(data.players[playerName].characters || []);\n          }\n        }\n      });\n\n      unsubscribeRef.current = unsubscribe;\n      setRoomCode(code);\n      setShowRoomModal(false);\n      setIsConnected(true);\n\n    } catch (error) {\n      console.error('Connection error:', error);\n      Alert.alert(\"Error\", \"Failed to join room. Please try again.\");\n      setIsConnected(false);\n    } finally {\n      setIsJoining(false);\n      setIsLoading(false);\n    }\n  }, [playerName]);\n\n  // Effects\n  useEffect(() => {\n    const handleOffline = () => {\n      Alert.alert(\n        'Connection Lost',\n        'Please check your internet connection',\n        [{ text: 'OK' }]\n      );\n    };\n\n    window.addEventListener('offline', handleOffline);\n    return () => {\n      window.removeEventListener('offline', handleOffline);\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n      }\n      if (firebaseRef.current) {\n        off(firebaseRef.current);\n      }\n    };\n  }, []);\n\n  // Add to styles\n  const layoutStyles = {\n    sidePanel: {\n      backgroundColor: THEME.background.panel,\n      padding: 15,\n      borderRadius: 10,\n      marginBottom: 15,\n      width: '100%',\n    },\n    sidePanelTitle: {\n      color: THEME.text.light,\n      fontSize: 18,\n      fontWeight: 'bold',\n      marginBottom: 10,\n    },\n    buttonRow: {\n      flexDirection: 'row',\n      gap: 10,\n      marginBottom: 10,\n    },\n    panelButton: {\n      backgroundColor: THEME.background.primary,\n      padding: 10,\n      borderRadius: 5,\n      alignItems: 'center',\n      flex: 1,\n    },\n    panelButtonText: {\n      color: THEME.text.light,\n      fontWeight: 'bold',\n    },\n    characterItem: {\n      backgroundColor: THEME.background.primary,\n      padding: 10,\n      borderRadius: 5,\n      marginBottom: 8,\n    },\n    characterInfo: {\n      marginBottom: 5,\n    },\n    characterName: {\n      color: THEME.text.light,\n      fontSize: 16,\n      fontWeight: 'bold',\n    },\n    characterDetails: {\n      color: THEME.text.light + '80',\n      fontSize: 12,\n    },\n    characterButtons: {\n      flexDirection: 'row',\n      gap: 8,\n    },\n    characterButton: {\n      padding: 8,\n      borderRadius: 5,\n      minWidth: 60,\n      alignItems: 'center',\n    },\n    characterButtonText: {\n      color: THEME.text.light,\n      fontSize: 12,\n      fontWeight: 'bold',\n    },\n  };\n\n  // Main render return\n  return (\n    <SafeAreaView style={[styles.container, isDarkMode && styles.darkMode]}>\n      <View style={styles.container}>\n        {/* Modals stay at the top level */}\n        <TokenModal \n          showTokenModal={showTokenModal}\n          setShowTokenModal={setShowTokenModal}\n          selectedToken={selectedToken}\n          setSelectedToken={setSelectedToken}\n          tokens={tokens}\n          firebaseRef={firebaseRef}\n          initialGameState={initialGameState}\n          layers={layers}\n          initiative={initiative}\n          inCombat={inCombat}\n          currentTurn={currentTurn}\n          THEME={THEME}\n        />\n        \n        <RoomModal \n          showRoomModal={showRoomModal}\n          setShowRoomModal={setShowRoomModal}\n          isConnected={isConnected}\n          roomCode={roomCode}\n          setRoomCode={setRoomCode}\n          isJoining={isJoining}\n          connectToRoom={connectToRoom}\n        />\n\n        <PlayerNameModal\n          visible={showPlayerNameModal && !playerName}\n          onSubmit={(name) => {\n            setPlayerName(name);\n            setShowPlayerNameModal(false);\n            setIsConnected(true);\n          }}\n        />\n\n        <PartyLootModal\n          visible={showPartyLoot}\n          onClose={() => setShowPartyLoot(false)}\n          partyLoot={partyLoot}\n          playerName={playerName}\n          onUpdate={(updatedLoot) => {\n            setPartyLoot(updatedLoot);\n            if (firebaseRef.current) {\n              set(firebaseRef.current, {\n                ...initialGameState,\n                tokens,\n                layers,\n                initiative,\n                inCombat,\n                currentTurn,\n                partyLoot: updatedLoot\n              });\n            }\n          }}\n        />\n\n        <CharacterSheetModal\n          visible={showCharacterSheet}\n          onClose={() => setShowCharacterSheet(false)}\n          character={selectedCharacter || {\n            name: '',\n            class: '',\n            level: 1,\n            owner: playerName,\n            proficiencyBonus: 2,\n            abilityScores: {\n              STR: 10,\n              DEX: 10,\n              CON: 10,\n              INT: 10,\n              WIS: 10,\n              CHA: 10\n            },\n            proficientSkills: [],\n            currency: {\n              CP: 0,\n              SP: 0,\n              EP: 0,\n              GP: 0,\n              PP: 0\n            },\n            items: [],\n            inventory: []\n          }}\n          characters={characters}\n          onUpdate={async (updatedCharacter) => {\n            try {\n              if (!updatedCharacter) {\n                throw new Error('No character data to save');\n              }\n\n              // Create new array with updated character\n              const newCharacters = selectedCharacter\n                ? characters.map(char => \n                    char.name === selectedCharacter.name ? updatedCharacter : char\n                  )\n                : [...characters, updatedCharacter];\n              \n              // Update local state first\n              setCharacters(newCharacters);\n\n              // Save to Firebase\n              const playerRef = ref(database, `players/${playerName}`);\n              await set(playerRef, {\n                characters: newCharacters,\n                lastUpdate: Date.now()\n              });\n\n              // Also save to room data\n              if (firebaseRef.current) {\n                const roomPlayerRef = ref(database, `rooms/${roomCode}/players/${playerName}`);\n                await set(roomPlayerRef, {\n                  characters: newCharacters,\n                  lastUpdate: Date.now()\n                });\n              }\n\n              setShowCharacterSheet(false);\n              \n            } catch (error) {\n              console.error('Error saving character:', error);\n              Alert.alert('Error', 'Failed to save character');\n            }\n          }}\n        />\n\n        <InventoryModal\n          visible={showInventory}\n          onClose={() => setShowInventory(false)}\n          character={selectedCharacter}\n          onUpdate={async (updatedCharacter) => {\n            try {\n              const newCharacters = characters.map(char => \n                char.name === selectedCharacter.name ? updatedCharacter : char\n              );\n              \n              setCharacters(newCharacters);\n              await savePlayerData(newCharacters);\n              setShowInventory(false);\n            } catch (error) {\n              console.error('Error saving inventory:', error);\n              Alert.alert('Error', 'Failed to save inventory');\n            }\n          }}\n        />\n\n        {!isConnected ? (\n          <View style={styles.loadingContainer}>\n            {isLoading ? (\n              <View style={{ alignItems: 'center' }}>\n                <ActivityIndicator size=\"large\" color={THEME.accent} />\n                <Text style={[styles.loadingText, { marginTop: 20 }]}>\n                  Connecting to room...\n                </Text>\n              </View>\n            ) : (\n              <Text style={styles.loadingText}>\n                Enter a room code to begin\n              </Text>\n            )}\n          </View>\n        ) : (\n          <>\n            <View style={styles.header}>\n              <Text style={styles.title}>D&D Combat Tracker</Text>\n              <ScrollView \n                horizontal={isSmallScreen} \n                showsHorizontalScrollIndicator={false}\n                contentContainerStyle={styles.controls}\n              >\n                <TouchableOpacity \n                  style={[styles.controlButton, { backgroundColor: THEME.primary }]}\n                  onPress={() => setShowRoomModal(true)}\n                >\n                  <Text style={styles.buttonText}>Room: {roomCode}</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  style={[styles.controlButton, { backgroundColor: THEME.primary }]}\n                  onPress={handleInitiativeRoll}\n                >\n                  <Text style={styles.buttonText}>Roll Initiative</Text>\n                </TouchableOpacity>\n\n                {inCombat && (\n                  <>\n                    <TouchableOpacity\n                      style={[styles.controlButton, { backgroundColor: THEME.success }]}\n                      onPress={() => {\n                        const nextTurn = (currentTurn + 1) % initiative.length;\n                        setCurrentTurn(nextTurn);\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, {\n                            ...initialGameState,\n                            tokens,\n                            layers,\n                            initiative,\n                            inCombat: true,\n                            currentTurn: nextTurn\n                          });\n                        }\n                      }}\n                    >\n                      <Text style={styles.buttonText}>Next Turn</Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                      style={[styles.controlButton, { backgroundColor: THEME.danger }]}\n                      onPress={() => {\n                        if (firebaseRef.current) {\n                          set(firebaseRef.current, {\n                            ...initialGameState,\n                            tokens,\n                            layers,\n                            initiative: [],\n                            inCombat: false,\n                            currentTurn: 0\n                          });\n                        }\n                        setInitiative([]);\n                        setInCombat(false);\n                        setCurrentTurn(0);\n                      }}\n                    >\n                      <Text style={styles.buttonText}>End Combat</Text>\n                    </TouchableOpacity>\n                  </>\n                )}\n\n                <TouchableOpacity\n                  style={[styles.controlButton, { backgroundColor: THEME.danger }]}\n                  onPress={() => {\n                    Alert.alert(\n                      \"Leave Room\",\n                      \"Are you sure you want to leave this room?\",\n                      [\n                        { text: \"Cancel\", style: \"cancel\" },\n                        { \n                          text: \"Leave\", \n                          style: \"destructive\",\n                          onPress: () => {\n                            // Disconnect from Firebase\n                            if (unsubscribeRef.current) {\n                              unsubscribeRef.current();\n                              unsubscribeRef.current = null;\n                            }\n                            if (firebaseRef.current) {\n                              off(firebaseRef.current);\n                              firebaseRef.current = null;\n                            }\n\n                            // Reset state\n                            setIsConnected(false);\n                            setRoomCode('');\n                            setTokens({});\n                            setInitiative([]);\n                            setInCombat(false);\n                            setCurrentTurn(0);\n                            setPartyLoot(initialGameState.partyLoot);\n                            setShowRoomModal(true);\n                            setShowPlayerNameModal(true);\n                          }\n                        }\n                      ]\n                    );\n                  }}\n                >\n                  <Text style={styles.buttonText}>Leave Room</Text>\n                </TouchableOpacity>\n              </ScrollView>\n            </View>\n            <ScrollView style={styles.content}>\n              <View style={styles.mainArea}>\n                {/* Grid Section */}\n                <View style={styles.gridSection}>\n                  <ScrollView \n                    horizontal \n                    contentContainerStyle={{ minWidth: '100%' }}\n                  >\n                    <ScrollView>\n                      <View style={[\n                        styles.gridContainer,\n                        { transform: [{ scale: zoomLevel }] }\n                      ]}>\n                        {/* Color Picker */}\n                        <View style={styles.colorPicker}>\n                          {COLORS.map(color => (\n                            <TouchableOpacity\n                              key={color}\n                              style={[\n                                styles.colorButton,\n                                { backgroundColor: color },\n                                color === currentColor && styles.selectedColor\n                              ]}\n                              onPress={() => setCurrentColor(color)}\n                            />\n                          ))}\n                        </View>\n\n                        {/* Grid */}\n                        {Array.from({ length: GRID_SIZE }).map((_, row) => (\n                          <View key={row} style={styles.row}>\n                            {Array.from({ length: GRID_SIZE }).map((_, col) => {\n                              const position = `${row}-${col}`;\n                              const token = tokens[position];\n                              const isCurrentTurn = inCombat && \n                                initiative[currentTurn]?.position === position;\n\n                              return (\n                                <TouchableOpacity\n                                  key={col}\n                                  style={[\n                                    styles.cell,\n                                    token && { backgroundColor: token.color },\n                                    isCurrentTurn && styles.currentTurn\n                                  ]}\n                                  onPress={() => handleCellPress(row, col)}\n                                  onLongPress={() => {\n                                    if (token) {\n                                      setSelectedToken({ ...token, position });\n                                      setShowTokenModal(true);\n                                    }\n                                  }}\n                                >\n                                  {token && (\n                                    <View style={styles.tokenContent}>\n                                      <Text style={[\n                                        styles.tokenText,\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\n                                      ]} numberOfLines={1}>\n                                        {token.name}\n                                      </Text>\n                                      <Text style={[\n                                        styles.tokenHp,\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\n                                      ]}>\n                                        {token.hp}/{token.maxHp}\n                                      </Text>\n                                      <Text style={[\n                                        styles.tokenAc,\n                                        { color: token.color === '#ffffff' ? '#000000' : '#ffffff' }\n                                      ]}>\n                                        AC: {token.ac}\n                                      </Text>\n                                      {token.effects && token.effects.length > 0 && (\n                                        <View style={statusStyles.tokenEffects}>\n                                          {token.effects.map(effect => {\n                                            const statusEffect = STATUS_EFFECTS.find(e => e.id === effect);\n                                            return statusEffect ? (\n                                              <Text key={effect} style={statusStyles.effectIcon}>\n                                                {statusEffect.icon}\n                                              </Text>\n                                            ) : null;\n                                          })}\n                                        </View>\n                                      )}\n                                    </View>\n                                  )}\n                                </TouchableOpacity>\n                              );\n                            })}\n                          </View>\n                        ))}\n                      </View>\n                    </ScrollView>\n                  </ScrollView>\n                  <GridZoomControls \n                    zoomLevel={zoomLevel}\n                    setZoomLevel={setZoomLevel}\n                  />\n                </View>\n\n                {/* Sidebar */}\n                <View style={styles.sidebar}>\n                  {/* Character Management Panel */}\n                  <View style={layoutStyles.sidePanel}>\n                    <Text style={layoutStyles.sidePanelTitle}>Character Management</Text>\n                    <View style={layoutStyles.buttonRow}>\n                      <TouchableOpacity\n                        style={layoutStyles.panelButton}\n                        onPress={() => {\n                          setSelectedCharacter(null);\n                          setShowCharacterSheet(true);\n                        }}\n                      >\n                        <Text style={layoutStyles.panelButtonText}>New Character</Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={layoutStyles.panelButton}\n                        onPress={() => setShowPartyLoot(true)}\n                      >\n                        <Text style={layoutStyles.panelButtonText}>Party Loot</Text>\n                      </TouchableOpacity>\n                    </View>\n\n                    {/* Character List */}\n                    <ScrollView style={{ maxHeight: 200 }}>\n                      {characters\n                        .filter(char => char.owner === playerName)\n                        .map((char, index) => (\n                          <View key={index} style={[layoutStyles.characterItem, { marginBottom: 8 }]}>\n                            <View style={layoutStyles.characterInfo}>\n                              <Text style={layoutStyles.characterName}>{char.name}</Text>\n                              <Text style={layoutStyles.characterDetails}>\n                                Level {char.level} {char.class}\n                              </Text>\n                            </View>\n                            <View style={layoutStyles.characterButtons}>\n                              <TouchableOpacity\n                                style={[layoutStyles.characterButton, { backgroundColor: THEME.accent }]}\n                                onPress={() => {\n                                  setSelectedCharacter(char);\n                                  setShowCharacterSheet(true);\n                                }}\n                              >\n                                <Text style={layoutStyles.characterButtonText}>Sheet</Text>\n                              </TouchableOpacity>\n                              <TouchableOpacity\n                                style={[layoutStyles.characterButton, { backgroundColor: THEME.success }]}\n                                onPress={() => {\n                                  setSelectedCharacter(char);\n                                  setShowInventory(true);\n                                }}\n                              >\n                                <Text style={layoutStyles.characterButtonText}>Loot</Text>\n                              </TouchableOpacity>\n                            </View>\n                          </View>\n                        ))}\n                    </ScrollView>\n                  </View>\n\n                  {/* Dice Roller Panel */}\n                  <View style={diceStyles.dicePanel}>\n                    <Text style={diceStyles.diceTitle}>Dice Roller</Text>\n\n                    <View style={diceStyles.diceControls}>\n                      <View style={diceStyles.controlsRow}>\n                        <View style={diceStyles.controlGroup}>\n                          <TouchableOpacity\n                            style={[\n                              diceStyles.controlButton,\n                              rollType === 'advantage' && diceStyles.controlActive,\n                              rollType === 'advantage' && { backgroundColor: THEME.success }\n                            ]}\n                            onPress={() => setRollType(current => \n                              current === 'advantage' ? 'normal' : 'advantage'\n                            )}\n                          >\n                            <Text style={styles.buttonText}>Advantage</Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity\n                            style={[\n                              diceStyles.controlButton,\n                              rollType === 'disadvantage' && diceStyles.controlActive,\n                              rollType === 'disadvantage' && { backgroundColor: THEME.danger }\n                            ]}\n                            onPress={() => setRollType(current => \n                              current === 'disadvantage' ? 'normal' : 'disadvantage'\n                            )}\n                          >\n                            <Text style={styles.buttonText}>Disadvantage</Text>\n                          </TouchableOpacity>\n                        </View>\n                      </View>\n                      \n                      <View style={diceStyles.controlsRow}>\n                        <View style={diceStyles.modifierGroup}>\n                          <Text style={diceStyles.modifierLabel}>Modifier</Text>\n                          <TextInput\n                            style={diceStyles.modifierInput}\n                            value={String(modifier)}\n                            onChangeText={text => {\n                              const num = parseInt(text) || 0;\n                              setModifier(num);\n                            }}\n                            keyboardType=\"numeric\"\n                            selectTextOnFocus={true}\n                          />\n                        </View>\n                        <View style={diceStyles.quantityGroup}>\n                          <Text style={diceStyles.quantityLabel}>Quantity</Text>\n                          <TextInput\n                            style={diceStyles.quantityInput}\n                            value={String(diceQuantity)}\n                            onChangeText={text => {\n                              const num = parseInt(text) || 1;\n                              setDiceQuantity(Math.max(1, Math.min(num, 100)));\n                            }}\n                            keyboardType=\"numeric\"\n                            selectTextOnFocus={true}\n                          />\n                        </View>\n                      </View>\n                    </View>\n\n                    <View style={diceStyles.diceGrid}>\n                      {DICE_TYPES.map(({ sides, color }) => (\n                        <TouchableOpacity\n                          key={sides}\n                          style={[diceStyles.diceButton, { backgroundColor: color }]}\n                          onPress={() => {\n                            const allRolls = Array.from({ length: diceQuantity }, () => \n                              Math.floor(Math.random() * sides) + 1\n                            );\n\n                            const finalRolls = allRolls.map(roll => {\n                              if (rollType !== 'normal') {\n                                const secondRoll = Math.floor(Math.random() * sides) + 1;\n                                return rollType === 'advantage'\n                                  ? Math.max(roll, secondRoll)\n                                  : Math.min(roll, secondRoll);\n                              }\n                              return roll;\n                            });\n\n                            const total = finalRolls.reduce((sum, roll) => sum + roll, 0) + modifier;\n\n                            const newResult = {\n                              dice: `${diceQuantity}d${sides}`,\n                              rolls: allRolls,\n                              individualTotals: finalRolls,\n                              modifier,\n                              rollType,\n                              total: total,\n                              timestamp: Date.now()\n                            };\n                            \n                            setCurrentRollResult(newResult);\n                            Vibration.vibrate(50);\n                          }}\n                        >\n                          <Text style={diceStyles.diceButtonText}>d{sides}</Text>\n                        </TouchableOpacity>\n                      ))}\n                    </View>\n                  </View>\n\n                  {/* Initiative Panel */}\n                  {inCombat && initiative.length > 0 && (\n                    <View style={styles.initiativeList}>\n                      <Text style={styles.boxTitle}>Initiative Order</Text>\n                      <ScrollView style={styles.initiativeScroll}>\n                        {initiative.map((item, index) => (\n                          <View \n                            key={item.position}\n                            style={[\n                              styles.initiativeItem,\n                              index === currentTurn && styles.currentInitiative\n                            ]}\n                          >\n                            <Text style={[\n                              styles.initiativeText,\n                              index === currentTurn && styles.currentInitiativeText\n                            ]}>\n                              {item.details}\n                            </Text>\n                          </View>\n                        ))}\n                      </ScrollView>\n                    </View>\n                  )}\n                </View>\n              </View>\n            </ScrollView>\n          </>\n        )}\n      </View>\n\n      {/* Add the overlay component at the root level of your app */}\n      <DiceResultOverlay \n        result={currentRollResult}\n        onClose={() => setCurrentRollResult(null)}\n      />\n    </SafeAreaView>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}